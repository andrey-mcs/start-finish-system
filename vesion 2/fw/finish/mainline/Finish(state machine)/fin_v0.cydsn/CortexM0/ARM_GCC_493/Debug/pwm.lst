ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"pwm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	pwm_initVar
  18              		.bss
  19              		.type	pwm_initVar, %object
  20              		.size	pwm_initVar, 1
  21              	pwm_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.pwm_Start,"ax",%progbits
  24              		.align	2
  25              		.global	pwm_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	pwm_Start, %function
  29              	pwm_Start:
  30              	.LFB2:
  31              		.file 1 "Generated_Source\\PSoC4\\pwm.c"
   1:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/pwm.c **** * File Name: pwm.c
   3:Generated_Source\PSoC4/pwm.c **** * Version 3.30
   4:Generated_Source\PSoC4/pwm.c **** *
   5:Generated_Source\PSoC4/pwm.c **** * Description:
   6:Generated_Source\PSoC4/pwm.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/pwm.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/pwm.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/pwm.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/pwm.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/pwm.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/pwm.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/pwm.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/pwm.c **** *
  15:Generated_Source\PSoC4/pwm.c **** * Note:
  16:Generated_Source\PSoC4/pwm.c **** *
  17:Generated_Source\PSoC4/pwm.c **** *******************************************************************************
  18:Generated_Source\PSoC4/pwm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/pwm.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/pwm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/pwm.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/pwm.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/pwm.c **** 
  24:Generated_Source\PSoC4/pwm.c **** #include "pwm.h"
  25:Generated_Source\PSoC4/pwm.c **** 
  26:Generated_Source\PSoC4/pwm.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 2


  27:Generated_Source\PSoC4/pwm.c **** #ifdef pwm_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/pwm.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/pwm.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/pwm.c **** #endif /* pwm_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/pwm.c **** 
  32:Generated_Source\PSoC4/pwm.c **** uint8 pwm_initVar = 0u;
  33:Generated_Source\PSoC4/pwm.c **** 
  34:Generated_Source\PSoC4/pwm.c **** 
  35:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Start
  37:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  38:Generated_Source\PSoC4/pwm.c **** *
  39:Generated_Source\PSoC4/pwm.c **** * Summary:
  40:Generated_Source\PSoC4/pwm.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/pwm.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/pwm.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/pwm.c **** *
  44:Generated_Source\PSoC4/pwm.c **** * Parameters:
  45:Generated_Source\PSoC4/pwm.c **** *  None
  46:Generated_Source\PSoC4/pwm.c **** *
  47:Generated_Source\PSoC4/pwm.c **** * Return:
  48:Generated_Source\PSoC4/pwm.c **** *  None
  49:Generated_Source\PSoC4/pwm.c **** *
  50:Generated_Source\PSoC4/pwm.c **** * Global variables:
  51:Generated_Source\PSoC4/pwm.c **** *  pwm_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/pwm.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/pwm.c **** *
  54:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/pwm.c **** void pwm_Start(void) 
  56:Generated_Source\PSoC4/pwm.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/pwm.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/pwm.c ****     if(pwm_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/pwm.c ****     {
  60:Generated_Source\PSoC4/pwm.c ****         pwm_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	pwm_Init
  61:Generated_Source\PSoC4/pwm.c ****         pwm_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:Generated_Source\PSoC4/pwm.c ****     }
  63:Generated_Source\PSoC4/pwm.c ****     pwm_Enable();
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	pwm_Enable
  64:Generated_Source\PSoC4/pwm.c **** 
  65:Generated_Source\PSoC4/pwm.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	pwm_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	pwm_Start, .-pwm_Start
  65              		.section	.text.pwm_Init,"ax",%progbits
  66              		.align	2
  67              		.global	pwm_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	pwm_Init, %function
  71              	pwm_Init:
  72              	.LFB3:
  66:Generated_Source\PSoC4/pwm.c **** 
  67:Generated_Source\PSoC4/pwm.c **** 
  68:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Init
  70:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  71:Generated_Source\PSoC4/pwm.c **** *
  72:Generated_Source\PSoC4/pwm.c **** * Summary:
  73:Generated_Source\PSoC4/pwm.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/pwm.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/pwm.c **** *  pwm_Start().
  76:Generated_Source\PSoC4/pwm.c **** *
  77:Generated_Source\PSoC4/pwm.c **** * Parameters:
  78:Generated_Source\PSoC4/pwm.c **** *  None
  79:Generated_Source\PSoC4/pwm.c **** *
  80:Generated_Source\PSoC4/pwm.c **** * Return:
  81:Generated_Source\PSoC4/pwm.c **** *  None
  82:Generated_Source\PSoC4/pwm.c **** *
  83:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/pwm.c **** void pwm_Init(void) 
  85:Generated_Source\PSoC4/pwm.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
  87:Generated_Source\PSoC4/pwm.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction || pwm_UseControl) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 4


  89:Generated_Source\PSoC4/pwm.c **** 
  90:Generated_Source\PSoC4/pwm.c ****     #if(!pwm_UsingFixedFunction)
  91:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
  92:Generated_Source\PSoC4/pwm.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/pwm.c ****             uint8 pwm_interruptState;
  94:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
  95:Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
  96:Generated_Source\PSoC4/pwm.c **** 
  97:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
  98:Generated_Source\PSoC4/pwm.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CFG0_MODE;
 100:Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBand2_4)
 101:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= pwm_CFG0_DB;
 102:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBand2_4) */
 103:Generated_Source\PSoC4/pwm.c **** 
 104:Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL3 & ((uint8 )(~pwm_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL3 = ctrl | pwm_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/pwm.c **** 
 107:Generated_Source\PSoC4/pwm.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_RT1_MASK));
 109:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNC;
 110:Generated_Source\PSoC4/pwm.c **** 
 111:Generated_Source\PSoC4/pwm.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNCDSI_EN;
 114:Generated_Source\PSoC4/pwm.c **** 
 115:Generated_Source\PSoC4/pwm.c ****     #elif (pwm_UseControl)
 116:Generated_Source\PSoC4/pwm.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL & ((uint8)(~pwm_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 1C4B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL = ctrl | pwm_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 184A     		ldr	r2, .L6
  94 0016 FB1D     		add	r3, r7, #7
  95 0018 1B78     		ldrb	r3, [r3]
  96 001a 0921     		mov	r1, #9
  97 001c 0B43     		orr	r3, r1
  98 001e DBB2     		uxtb	r3, r3
  99 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/pwm.c ****                                    pwm_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 122:Generated_Source\PSoC4/pwm.c **** 
 123:Generated_Source\PSoC4/pwm.c ****     #if (!pwm_UsingFixedFunction)
 124:Generated_Source\PSoC4/pwm.c ****         #if (pwm_Resolution == 8)
 125:Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 0022 164A     		ldr	r2, .L6+4
 102 0024 154B     		ldr	r3, .L6+4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 5


 103 0026 1B78     		ldrb	r3, [r3]
 104 0028 DBB2     		uxtb	r3, r3
 105 002a 0121     		mov	r1, #1
 106 002c 0B43     		orr	r3, r1
 107 002e DBB2     		uxtb	r3, r3
 108 0030 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/pwm.c ****         #else /* (pwm_Resolution == 16)*/
 128:Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP1 |= (pwm_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_Resolution == 8) */
 132:Generated_Source\PSoC4/pwm.c **** 
 133:Generated_Source\PSoC4/pwm.c ****         pwm_WriteCounter(pwm_INIT_PERIOD_VALUE);
 109              		.loc 1 133 0
 110 0032 FF20     		mov	r0, #255
 111 0034 FFF7FEFF 		bl	pwm_WriteCounter
 134:Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
 135:Generated_Source\PSoC4/pwm.c **** 
 136:Generated_Source\PSoC4/pwm.c ****     pwm_WritePeriod(pwm_INIT_PERIOD_VALUE);
 112              		.loc 1 136 0
 113 0038 FF20     		mov	r0, #255
 114 003a FFF7FEFF 		bl	pwm_WritePeriod
 137:Generated_Source\PSoC4/pwm.c **** 
 138:Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseOneCompareMode)
 139:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare(pwm_INIT_COMPARE_VALUE1);
 115              		.loc 1 139 0
 116 003e 7F20     		mov	r0, #127
 117 0040 FFF7FEFF 		bl	pwm_WriteCompare
 140:Generated_Source\PSoC4/pwm.c ****         #else
 141:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare1(pwm_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare2(pwm_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseOneCompareMode) */
 144:Generated_Source\PSoC4/pwm.c **** 
 145:Generated_Source\PSoC4/pwm.c ****         #if (pwm_KillModeMinTime)
 146:Generated_Source\PSoC4/pwm.c ****             pwm_WriteKillTime(pwm_MinimumKillTime);
 147:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_KillModeMinTime) */
 148:Generated_Source\PSoC4/pwm.c **** 
 149:Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBandUsed)
 150:Generated_Source\PSoC4/pwm.c ****             pwm_WriteDeadTime(pwm_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBandUsed) */
 152:Generated_Source\PSoC4/pwm.c **** 
 153:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus || pwm_UsingFixedFunction)
 154:Generated_Source\PSoC4/pwm.c ****         pwm_SetInterruptMode(pwm_INIT_INTERRUPTS_MODE);
 118              		.loc 1 154 0
 119 0044 0020     		mov	r0, #0
 120 0046 FFF7FEFF 		bl	pwm_SetInterruptMode
 155:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 156:Generated_Source\PSoC4/pwm.c **** 
 157:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 158:Generated_Source\PSoC4/pwm.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/pwm.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL2 |= pwm_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/pwm.c ****     #else
 163:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
 164:Generated_Source\PSoC4/pwm.c **** 
 165:Generated_Source\PSoC4/pwm.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 6


 166:Generated_Source\PSoC4/pwm.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/pwm.c ****             pwm_interruptState = CyEnterCriticalSection();
 121              		.loc 1 167 0
 122 004a BC1D     		add	r4, r7, #6
 123 004c FFF7FEFF 		bl	CyEnterCriticalSection
 124 0050 031C     		mov	r3, r0
 125 0052 2370     		strb	r3, [r4]
 168:Generated_Source\PSoC4/pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/pwm.c ****             pwm_STATUS_AUX_CTRL |= pwm_STATUS_ACTL_INT_EN_MASK;
 126              		.loc 1 169 0
 127 0054 0A4A     		ldr	r2, .L6+8
 128 0056 0A4B     		ldr	r3, .L6+8
 129 0058 1B78     		ldrb	r3, [r3]
 130 005a DBB2     		uxtb	r3, r3
 131 005c 1021     		mov	r1, #16
 132 005e 0B43     		orr	r3, r1
 133 0060 DBB2     		uxtb	r3, r3
 134 0062 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC4/pwm.c **** 
 171:Generated_Source\PSoC4/pwm.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/pwm.c ****             CyExitCriticalSection(pwm_interruptState);
 135              		.loc 1 172 0
 136 0064 BB1D     		add	r3, r7, #6
 137 0066 1B78     		ldrb	r3, [r3]
 138 0068 181C     		mov	r0, r3
 139 006a FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC4/pwm.c **** 
 174:Generated_Source\PSoC4/pwm.c ****             /* Clear the FIFO to enable the pwm_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/pwm.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/pwm.c ****             pwm_ClearFIFO();
 140              		.loc 1 176 0
 141 006e FFF7FEFF 		bl	pwm_ClearFIFO
 177:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
 178:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 179:Generated_Source\PSoC4/pwm.c **** }
 142              		.loc 1 179 0
 143 0072 BD46     		mov	sp, r7
 144 0074 03B0     		add	sp, sp, #12
 145              		@ sp needed
 146 0076 90BD     		pop	{r4, r7, pc}
 147              	.L7:
 148              		.align	2
 149              	.L6:
 150 0078 70000F40 		.word	1074724976
 151 007c 93000F40 		.word	1074725011
 152 0080 90000F40 		.word	1074725008
 153              		.cfi_endproc
 154              	.LFE3:
 155              		.size	pwm_Init, .-pwm_Init
 156              		.section	.text.pwm_Enable,"ax",%progbits
 157              		.align	2
 158              		.global	pwm_Enable
 159              		.code	16
 160              		.thumb_func
 161              		.type	pwm_Enable, %function
 162              	pwm_Enable:
 163              	.LFB4:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 7


 180:Generated_Source\PSoC4/pwm.c **** 
 181:Generated_Source\PSoC4/pwm.c **** 
 182:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Enable
 184:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 185:Generated_Source\PSoC4/pwm.c **** *
 186:Generated_Source\PSoC4/pwm.c **** * Summary:
 187:Generated_Source\PSoC4/pwm.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/pwm.c **** *
 189:Generated_Source\PSoC4/pwm.c **** * Parameters:
 190:Generated_Source\PSoC4/pwm.c **** *  None
 191:Generated_Source\PSoC4/pwm.c **** *
 192:Generated_Source\PSoC4/pwm.c **** * Return:
 193:Generated_Source\PSoC4/pwm.c **** *  None
 194:Generated_Source\PSoC4/pwm.c **** *
 195:Generated_Source\PSoC4/pwm.c **** * Side Effects:
 196:Generated_Source\PSoC4/pwm.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/pwm.c **** *
 198:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/pwm.c **** void pwm_Enable(void) 
 200:Generated_Source\PSoC4/pwm.c **** {
 164              		.loc 1 200 0
 165              		.cfi_startproc
 166 0000 80B5     		push	{r7, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/pwm.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 203:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE |= pwm_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 206:Generated_Source\PSoC4/pwm.c **** 
 207:Generated_Source\PSoC4/pwm.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 209:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CTRL_ENABLE;
 172              		.loc 1 209 0
 173 0004 0549     		ldr	r1, .L9
 174 0006 054B     		ldr	r3, .L9
 175 0008 1B78     		ldrb	r3, [r3]
 176 000a DBB2     		uxtb	r3, r3
 177 000c 8022     		mov	r2, #128
 178 000e 5242     		neg	r2, r2
 179 0010 1343     		orr	r3, r2
 180 0012 DBB2     		uxtb	r3, r3
 181 0014 0B70     		strb	r3, [r1]
 210:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 211:Generated_Source\PSoC4/pwm.c **** }
 182              		.loc 1 211 0
 183 0016 BD46     		mov	sp, r7
 184              		@ sp needed
 185 0018 80BD     		pop	{r7, pc}
 186              	.L10:
 187 001a C046     		.align	2
 188              	.L9:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 8


 189 001c 70000F40 		.word	1074724976
 190              		.cfi_endproc
 191              	.LFE4:
 192              		.size	pwm_Enable, .-pwm_Enable
 193              		.section	.text.pwm_Stop,"ax",%progbits
 194              		.align	2
 195              		.global	pwm_Stop
 196              		.code	16
 197              		.thumb_func
 198              		.type	pwm_Stop, %function
 199              	pwm_Stop:
 200              	.LFB5:
 212:Generated_Source\PSoC4/pwm.c **** 
 213:Generated_Source\PSoC4/pwm.c **** 
 214:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Stop
 216:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 217:Generated_Source\PSoC4/pwm.c **** *
 218:Generated_Source\PSoC4/pwm.c **** * Summary:
 219:Generated_Source\PSoC4/pwm.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/pwm.c **** *  interrupts.
 221:Generated_Source\PSoC4/pwm.c **** *
 222:Generated_Source\PSoC4/pwm.c **** * Parameters:
 223:Generated_Source\PSoC4/pwm.c **** *  None
 224:Generated_Source\PSoC4/pwm.c **** *
 225:Generated_Source\PSoC4/pwm.c **** * Return:
 226:Generated_Source\PSoC4/pwm.c **** *  None
 227:Generated_Source\PSoC4/pwm.c **** *
 228:Generated_Source\PSoC4/pwm.c **** * Side Effects:
 229:Generated_Source\PSoC4/pwm.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/pwm.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/pwm.c **** *
 232:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/pwm.c **** void pwm_Stop(void) 
 234:Generated_Source\PSoC4/pwm.c **** {
 201              		.loc 1 234 0
 202              		.cfi_startproc
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 236:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL &= ((uint8)(~pwm_CTRL_ENABLE));
 209              		.loc 1 236 0
 210 0004 044A     		ldr	r2, .L12
 211 0006 044B     		ldr	r3, .L12
 212 0008 1B78     		ldrb	r3, [r3]
 213 000a DBB2     		uxtb	r3, r3
 214 000c 7F21     		mov	r1, #127
 215 000e 0B40     		and	r3, r1
 216 0010 DBB2     		uxtb	r3, r3
 217 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 238:Generated_Source\PSoC4/pwm.c **** 
 239:Generated_Source\PSoC4/pwm.c ****     /* Globally disable the Fixed Function Block chosen */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 9


 240:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 241:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE &= ((uint8)(~pwm_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE &= ((uint8)(~pwm_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 244:Generated_Source\PSoC4/pwm.c **** }
 218              		.loc 1 244 0
 219 0014 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0016 80BD     		pop	{r7, pc}
 222              	.L13:
 223              		.align	2
 224              	.L12:
 225 0018 70000F40 		.word	1074724976
 226              		.cfi_endproc
 227              	.LFE5:
 228              		.size	pwm_Stop, .-pwm_Stop
 229              		.section	.text.pwm_WriteCounter,"ax",%progbits
 230              		.align	2
 231              		.global	pwm_WriteCounter
 232              		.code	16
 233              		.thumb_func
 234              		.type	pwm_WriteCounter, %function
 235              	pwm_WriteCounter:
 236              	.LFB6:
 245:Generated_Source\PSoC4/pwm.c **** 
 246:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 247:Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 248:Generated_Source\PSoC4/pwm.c **** 
 249:Generated_Source\PSoC4/pwm.c **** 
 250:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode
 252:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/pwm.c ****         *
 254:Generated_Source\PSoC4/pwm.c ****         * Summary:
 255:Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/pwm.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/pwm.c ****         *
 258:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 259:Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/pwm.c ****         *
 262:Generated_Source\PSoC4/pwm.c ****         * Return:
 263:Generated_Source\PSoC4/pwm.c ****         *  None
 264:Generated_Source\PSoC4/pwm.c ****         *
 265:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/pwm.c ****         {
 268:Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 269:Generated_Source\PSoC4/pwm.c **** 
 270:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/pwm.c ****                 #else
 273:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/pwm.c **** 
 276:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 |= comparemodemasked;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 10


 278:Generated_Source\PSoC4/pwm.c **** 
 279:Generated_Source\PSoC4/pwm.c ****             #elif (pwm_UseControl)
 280:Generated_Source\PSoC4/pwm.c **** 
 281:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/pwm.c ****                                                 pwm_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/pwm.c ****                 #else
 285:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/pwm.c **** 
 288:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/pwm.c ****                                                pwm_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/pwm.c ****                 #else
 292:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/pwm.c **** 
 295:Generated_Source\PSoC4/pwm.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~(pwm_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/pwm.c ****                                             pwm_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/pwm.c **** 
 300:Generated_Source\PSoC4/pwm.c ****             #else
 301:Generated_Source\PSoC4/pwm.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 303:Generated_Source\PSoC4/pwm.c ****         }
 304:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 305:Generated_Source\PSoC4/pwm.c **** 
 306:Generated_Source\PSoC4/pwm.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/pwm.c **** 
 308:Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 309:Generated_Source\PSoC4/pwm.c **** 
 310:Generated_Source\PSoC4/pwm.c **** 
 311:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode1
 313:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/pwm.c ****         *
 315:Generated_Source\PSoC4/pwm.c ****         * Summary:
 316:Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/pwm.c ****         *
 318:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 319:Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/pwm.c ****         *
 322:Generated_Source\PSoC4/pwm.c ****         * Return:
 323:Generated_Source\PSoC4/pwm.c ****         *  None
 324:Generated_Source\PSoC4/pwm.c ****         *
 325:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/pwm.c ****         {
 328:Generated_Source\PSoC4/pwm.c ****             #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/pwm.c ****                                            pwm_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/pwm.c ****             #else
 332:Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/pwm.c ****             #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 11


 335:Generated_Source\PSoC4/pwm.c ****             #if (pwm_UseControl)
 336:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UseControl) */
 339:Generated_Source\PSoC4/pwm.c ****         }
 340:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 341:Generated_Source\PSoC4/pwm.c **** 
 342:Generated_Source\PSoC4/pwm.c **** #if (pwm_CompareMode2SW)
 343:Generated_Source\PSoC4/pwm.c **** 
 344:Generated_Source\PSoC4/pwm.c **** 
 345:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetCompareMode2
 347:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/pwm.c ****     *
 349:Generated_Source\PSoC4/pwm.c ****     * Summary:
 350:Generated_Source\PSoC4/pwm.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/pwm.c ****     *
 352:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 353:Generated_Source\PSoC4/pwm.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/pwm.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/pwm.c ****     *
 356:Generated_Source\PSoC4/pwm.c ****     * Return:
 357:Generated_Source\PSoC4/pwm.c ****     *  None
 358:Generated_Source\PSoC4/pwm.c ****     *
 359:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/pwm.c ****     void pwm_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/pwm.c ****     {
 362:Generated_Source\PSoC4/pwm.c **** 
 363:Generated_Source\PSoC4/pwm.c ****         #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/pwm.c ****                                                  pwm_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/pwm.c ****         #else
 367:Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/pwm.c ****         #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/pwm.c **** 
 370:Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseControl)
 371:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseControl) */
 374:Generated_Source\PSoC4/pwm.c ****     }
 375:Generated_Source\PSoC4/pwm.c ****     #endif /*pwm_CompareMode2SW */
 376:Generated_Source\PSoC4/pwm.c **** 
 377:Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/pwm.c **** 
 379:Generated_Source\PSoC4/pwm.c **** 
 380:Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 381:Generated_Source\PSoC4/pwm.c **** 
 382:Generated_Source\PSoC4/pwm.c **** 
 383:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCounter
 385:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/pwm.c ****     *
 387:Generated_Source\PSoC4/pwm.c ****     * Summary:
 388:Generated_Source\PSoC4/pwm.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/pwm.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/pwm.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/pwm.c ****     *  PWM implementation.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 12


 392:Generated_Source\PSoC4/pwm.c ****     *
 393:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 394:Generated_Source\PSoC4/pwm.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/pwm.c ****     *
 396:Generated_Source\PSoC4/pwm.c ****     * Return:
 397:Generated_Source\PSoC4/pwm.c ****     *  None
 398:Generated_Source\PSoC4/pwm.c ****     *
 399:Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 400:Generated_Source\PSoC4/pwm.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/pwm.c ****     *
 402:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/pwm.c ****                                        
 405:Generated_Source\PSoC4/pwm.c ****     {
 237              		.loc 1 405 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 82B0     		sub	sp, sp, #8
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              		.cfi_def_cfa_register 7
 247 0006 021C     		mov	r2, r0
 248 0008 FB1D     		add	r3, r7, #7
 249 000a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_COUNTER_LSB_PTR, counter);
 250              		.loc 1 406 0
 251 000c 034A     		ldr	r2, .L15
 252 000e FB1D     		add	r3, r7, #7
 253 0010 1B78     		ldrb	r3, [r3]
 254 0012 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC4/pwm.c ****     }
 255              		.loc 1 407 0
 256 0014 BD46     		mov	sp, r7
 257 0016 02B0     		add	sp, sp, #8
 258              		@ sp needed
 259 0018 80BD     		pop	{r7, pc}
 260              	.L16:
 261 001a C046     		.align	2
 262              	.L15:
 263 001c 03000F40 		.word	1074724867
 264              		.cfi_endproc
 265              	.LFE6:
 266              		.size	pwm_WriteCounter, .-pwm_WriteCounter
 267              		.section	.text.pwm_ReadCounter,"ax",%progbits
 268              		.align	2
 269              		.global	pwm_ReadCounter
 270              		.code	16
 271              		.thumb_func
 272              		.type	pwm_ReadCounter, %function
 273              	pwm_ReadCounter:
 274              	.LFB7:
 408:Generated_Source\PSoC4/pwm.c **** 
 409:Generated_Source\PSoC4/pwm.c **** 
 410:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 13


 411:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCounter
 412:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/pwm.c ****     *
 414:Generated_Source\PSoC4/pwm.c ****     * Summary:
 415:Generated_Source\PSoC4/pwm.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/pwm.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/pwm.c ****     *
 418:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 419:Generated_Source\PSoC4/pwm.c ****     *  None
 420:Generated_Source\PSoC4/pwm.c ****     *
 421:Generated_Source\PSoC4/pwm.c ****     * Return:
 422:Generated_Source\PSoC4/pwm.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/pwm.c ****     *
 424:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCounter(void) 
 426:Generated_Source\PSoC4/pwm.c ****     {
 275              		.loc 1 426 0
 276              		.cfi_startproc
 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/pwm.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/pwm.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/pwm.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/pwm.c ****           (void)CY_GET_REG8(pwm_COUNTERCAP_LSB_PTR_8BIT);
 283              		.loc 1 430 0
 284 0004 034B     		ldr	r3, .L19
 285 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/pwm.c **** 
 432:Generated_Source\PSoC4/pwm.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 286              		.loc 1 433 0
 287 0008 034B     		ldr	r3, .L19+4
 288 000a 1B78     		ldrb	r3, [r3]
 289 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC4/pwm.c ****     }
 290              		.loc 1 434 0
 291 000e 181C     		mov	r0, r3
 292 0010 BD46     		mov	sp, r7
 293              		@ sp needed
 294 0012 80BD     		pop	{r7, pc}
 295              	.L20:
 296              		.align	2
 297              	.L19:
 298 0014 13000F40 		.word	1074724883
 299 0018 53000F40 		.word	1074724947
 300              		.cfi_endproc
 301              	.LFE7:
 302              		.size	pwm_ReadCounter, .-pwm_ReadCounter
 303              		.section	.text.pwm_ClearFIFO,"ax",%progbits
 304              		.align	2
 305              		.global	pwm_ClearFIFO
 306              		.code	16
 307              		.thumb_func
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 14


 308              		.type	pwm_ClearFIFO, %function
 309              	pwm_ClearFIFO:
 310              	.LFB8:
 435:Generated_Source\PSoC4/pwm.c **** 
 436:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus)
 437:Generated_Source\PSoC4/pwm.c **** 
 438:Generated_Source\PSoC4/pwm.c **** 
 439:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_ClearFIFO
 441:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/pwm.c ****         *
 443:Generated_Source\PSoC4/pwm.c ****         * Summary:
 444:Generated_Source\PSoC4/pwm.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/pwm.c ****         *
 446:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 447:Generated_Source\PSoC4/pwm.c ****         *  None
 448:Generated_Source\PSoC4/pwm.c ****         *
 449:Generated_Source\PSoC4/pwm.c ****         * Return:
 450:Generated_Source\PSoC4/pwm.c ****         *  None
 451:Generated_Source\PSoC4/pwm.c ****         *
 452:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/pwm.c ****         void pwm_ClearFIFO(void) 
 454:Generated_Source\PSoC4/pwm.c ****         {
 311              		.loc 1 454 0
 312              		.cfi_startproc
 313 0000 80B5     		push	{r7, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 319              		.loc 1 455 0
 320 0004 01E0     		b	.L22
 321              	.L23:
 456:Generated_Source\PSoC4/pwm.c ****             {
 457:Generated_Source\PSoC4/pwm.c ****                 (void)pwm_ReadCapture();
 322              		.loc 1 457 0
 323 0006 FFF7FEFF 		bl	pwm_ReadCapture
 324              	.L22:
 455:Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 325              		.loc 1 455 0
 326 000a FFF7FEFF 		bl	pwm_ReadStatusRegister
 327 000e 031C     		mov	r3, r0
 328 0010 1A1C     		mov	r2, r3
 329 0012 1023     		mov	r3, #16
 330 0014 1340     		and	r3, r2
 331 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC4/pwm.c ****             }
 459:Generated_Source\PSoC4/pwm.c ****         }
 332              		.loc 1 459 0
 333 0018 BD46     		mov	sp, r7
 334              		@ sp needed
 335 001a 80BD     		pop	{r7, pc}
 336              		.cfi_endproc
 337              	.LFE8:
 338              		.size	pwm_ClearFIFO, .-pwm_ClearFIFO
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 15


 339              		.section	.text.pwm_WritePeriod,"ax",%progbits
 340              		.align	2
 341              		.global	pwm_WritePeriod
 342              		.code	16
 343              		.thumb_func
 344              		.type	pwm_WritePeriod, %function
 345              	pwm_WritePeriod:
 346              	.LFB9:
 460:Generated_Source\PSoC4/pwm.c **** 
 461:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_UseStatus */
 462:Generated_Source\PSoC4/pwm.c **** 
 463:Generated_Source\PSoC4/pwm.c **** #endif /* !pwm_UsingFixedFunction */
 464:Generated_Source\PSoC4/pwm.c **** 
 465:Generated_Source\PSoC4/pwm.c **** 
 466:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_WritePeriod
 468:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 469:Generated_Source\PSoC4/pwm.c **** *
 470:Generated_Source\PSoC4/pwm.c **** * Summary:
 471:Generated_Source\PSoC4/pwm.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/pwm.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/pwm.c **** *
 474:Generated_Source\PSoC4/pwm.c **** * Parameters:
 475:Generated_Source\PSoC4/pwm.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/pwm.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/pwm.c **** *
 478:Generated_Source\PSoC4/pwm.c **** * Return:
 479:Generated_Source\PSoC4/pwm.c **** *  None
 480:Generated_Source\PSoC4/pwm.c **** *
 481:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/pwm.c **** void pwm_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/pwm.c **** {
 347              		.loc 1 483 0
 348              		.cfi_startproc
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 021C     		mov	r2, r0
 358 0008 FB1D     		add	r3, r7, #7
 359 000a 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 485:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG16(pwm_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/pwm.c ****     #else
 487:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_PERIOD_LSB_PTR, period);
 360              		.loc 1 487 0
 361 000c 034A     		ldr	r2, .L25
 362 000e FB1D     		add	r3, r7, #7
 363 0010 1B78     		ldrb	r3, [r3]
 364 0012 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 489:Generated_Source\PSoC4/pwm.c **** }
 365              		.loc 1 489 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 16


 366 0014 BD46     		mov	sp, r7
 367 0016 02B0     		add	sp, sp, #8
 368              		@ sp needed
 369 0018 80BD     		pop	{r7, pc}
 370              	.L26:
 371 001a C046     		.align	2
 372              	.L25:
 373 001c 43000F40 		.word	1074724931
 374              		.cfi_endproc
 375              	.LFE9:
 376              		.size	pwm_WritePeriod, .-pwm_WritePeriod
 377              		.section	.text.pwm_WriteCompare,"ax",%progbits
 378              		.align	2
 379              		.global	pwm_WriteCompare
 380              		.code	16
 381              		.thumb_func
 382              		.type	pwm_WriteCompare, %function
 383              	pwm_WriteCompare:
 384              	.LFB10:
 490:Generated_Source\PSoC4/pwm.c **** 
 491:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 492:Generated_Source\PSoC4/pwm.c **** 
 493:Generated_Source\PSoC4/pwm.c **** 
 494:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare
 496:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/pwm.c ****     *
 498:Generated_Source\PSoC4/pwm.c ****     * Summary:
 499:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/pwm.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/pwm.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/pwm.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/pwm.c ****     *
 505:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 506:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/pwm.c ****     *
 508:Generated_Source\PSoC4/pwm.c ****     * Return:
 509:Generated_Source\PSoC4/pwm.c ****     *  None
 510:Generated_Source\PSoC4/pwm.c ****     *
 511:Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 512:Generated_Source\PSoC4/pwm.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/pwm.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/pwm.c ****     *
 515:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/pwm.c ****                                        
 518:Generated_Source\PSoC4/pwm.c ****     {
 385              		.loc 1 518 0
 386              		.cfi_startproc
 387 0000 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 82B0     		sub	sp, sp, #8
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 17


 394              		.cfi_def_cfa_register 7
 395 0006 021C     		mov	r2, r0
 396 0008 FB1D     		add	r3, r7, #7
 397 000a 1A70     		strb	r2, [r3]
 519:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 520:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/pwm.c ****         #else
 522:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE1_LSB_PTR, compare);
 398              		.loc 1 522 0
 399 000c 034A     		ldr	r2, .L28
 400 000e FB1D     		add	r3, r7, #7
 401 0010 1B78     		ldrb	r3, [r3]
 402 0012 1370     		strb	r3, [r2]
 523:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 524:Generated_Source\PSoC4/pwm.c **** 
 525:Generated_Source\PSoC4/pwm.c ****         #if (pwm_PWMMode == pwm__B_PWM__DITHER)
 526:Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 527:Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG16(pwm_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/pwm.c ****             #else
 529:Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG8(pwm_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 531:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_PWMMode == pwm__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/pwm.c ****     }
 403              		.loc 1 532 0
 404 0014 BD46     		mov	sp, r7
 405 0016 02B0     		add	sp, sp, #8
 406              		@ sp needed
 407 0018 80BD     		pop	{r7, pc}
 408              	.L29:
 409 001a C046     		.align	2
 410              	.L28:
 411 001c 23000F40 		.word	1074724899
 412              		.cfi_endproc
 413              	.LFE10:
 414              		.size	pwm_WriteCompare, .-pwm_WriteCompare
 415              		.section	.text.pwm_SetInterruptMode,"ax",%progbits
 416              		.align	2
 417              		.global	pwm_SetInterruptMode
 418              		.code	16
 419              		.thumb_func
 420              		.type	pwm_SetInterruptMode, %function
 421              	pwm_SetInterruptMode:
 422              	.LFB11:
 533:Generated_Source\PSoC4/pwm.c **** 
 534:Generated_Source\PSoC4/pwm.c **** 
 535:Generated_Source\PSoC4/pwm.c **** #else
 536:Generated_Source\PSoC4/pwm.c **** 
 537:Generated_Source\PSoC4/pwm.c **** 
 538:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare1
 540:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/pwm.c ****     *
 542:Generated_Source\PSoC4/pwm.c ****     * Summary:
 543:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/pwm.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/pwm.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/pwm.c ****     *  equal to the compare register, depending on the mode.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 18


 547:Generated_Source\PSoC4/pwm.c ****     *
 548:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 549:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/pwm.c ****     *
 551:Generated_Source\PSoC4/pwm.c ****     * Return:
 552:Generated_Source\PSoC4/pwm.c ****     *  None
 553:Generated_Source\PSoC4/pwm.c ****     *
 554:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/pwm.c ****                                         
 557:Generated_Source\PSoC4/pwm.c ****     {
 558:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 559:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/pwm.c ****         #else
 561:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 563:Generated_Source\PSoC4/pwm.c ****     }
 564:Generated_Source\PSoC4/pwm.c **** 
 565:Generated_Source\PSoC4/pwm.c **** 
 566:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare2
 568:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/pwm.c ****     *
 570:Generated_Source\PSoC4/pwm.c ****     * Summary:
 571:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/pwm.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/pwm.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/pwm.c ****     *  mode.
 576:Generated_Source\PSoC4/pwm.c ****     *
 577:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 578:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/pwm.c ****     *
 580:Generated_Source\PSoC4/pwm.c ****     * Return:
 581:Generated_Source\PSoC4/pwm.c ****     *  None
 582:Generated_Source\PSoC4/pwm.c ****     *
 583:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/pwm.c ****                                         
 586:Generated_Source\PSoC4/pwm.c ****     {
 587:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 588:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/pwm.c ****         #else
 590:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 592:Generated_Source\PSoC4/pwm.c ****     }
 593:Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/pwm.c **** 
 595:Generated_Source\PSoC4/pwm.c **** #if (pwm_DeadBandUsed)
 596:Generated_Source\PSoC4/pwm.c **** 
 597:Generated_Source\PSoC4/pwm.c **** 
 598:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteDeadTime
 600:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/pwm.c ****     *
 602:Generated_Source\PSoC4/pwm.c ****     * Summary:
 603:Generated_Source\PSoC4/pwm.c ****     *  This function writes the dead-band counts to the corresponding register
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 19


 604:Generated_Source\PSoC4/pwm.c ****     *
 605:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 606:Generated_Source\PSoC4/pwm.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/pwm.c ****     *
 608:Generated_Source\PSoC4/pwm.c ****     * Return:
 609:Generated_Source\PSoC4/pwm.c ****     *  None
 610:Generated_Source\PSoC4/pwm.c ****     *
 611:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/pwm.c ****     {
 614:Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 616:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/pwm.c ****         #else
 618:Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/pwm.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/pwm.c ****             pwm_DEADBAND_COUNT &= ((uint8)(~pwm_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/pwm.c **** 
 622:Generated_Source\PSoC4/pwm.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << pwm_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/pwm.c ****                                                     pwm_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/pwm.c ****             #else
 627:Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= deadtime & pwm_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/pwm.c **** 
 630:Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 631:Generated_Source\PSoC4/pwm.c ****     }
 632:Generated_Source\PSoC4/pwm.c **** 
 633:Generated_Source\PSoC4/pwm.c **** 
 634:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadDeadTime
 636:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/pwm.c ****     *
 638:Generated_Source\PSoC4/pwm.c ****     * Summary:
 639:Generated_Source\PSoC4/pwm.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/pwm.c ****     *
 641:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 642:Generated_Source\PSoC4/pwm.c ****     *  None
 643:Generated_Source\PSoC4/pwm.c ****     *
 644:Generated_Source\PSoC4/pwm.c ****     * Return:
 645:Generated_Source\PSoC4/pwm.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/pwm.c ****     *
 647:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/pwm.c ****     {
 650:Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 652:Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/pwm.c ****         #else
 654:Generated_Source\PSoC4/pwm.c **** 
 655:Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/pwm.c ****                 return ((uint8)(((uint8)(pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/pwm.c ****                                                                            pwm_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/pwm.c ****             #else
 660:Generated_Source\PSoC4/pwm.c ****                 return (pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 20


 661:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 663:Generated_Source\PSoC4/pwm.c ****     }
 664:Generated_Source\PSoC4/pwm.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/pwm.c **** 
 666:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseStatus || pwm_UsingFixedFunction)
 667:Generated_Source\PSoC4/pwm.c **** 
 668:Generated_Source\PSoC4/pwm.c **** 
 669:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetInterruptMode
 671:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/pwm.c ****     *
 673:Generated_Source\PSoC4/pwm.c ****     * Summary:
 674:Generated_Source\PSoC4/pwm.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/pwm.c ****     *  source status register.
 676:Generated_Source\PSoC4/pwm.c ****     *
 677:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 678:Generated_Source\PSoC4/pwm.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/pwm.c ****     *
 680:Generated_Source\PSoC4/pwm.c ****     * Return:
 681:Generated_Source\PSoC4/pwm.c ****     *  None
 682:Generated_Source\PSoC4/pwm.c ****     *
 683:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/pwm.c ****     void pwm_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/pwm.c ****     {
 423              		.loc 1 685 0
 424              		.cfi_startproc
 425 0000 80B5     		push	{r7, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 433 0006 021C     		mov	r2, r0
 434 0008 FB1D     		add	r3, r7, #7
 435 000a 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_STATUS_MASK_PTR, interruptMode);
 436              		.loc 1 686 0
 437 000c 034A     		ldr	r2, .L31
 438 000e FB1D     		add	r3, r7, #7
 439 0010 1B78     		ldrb	r3, [r3]
 440 0012 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/pwm.c ****     }
 441              		.loc 1 687 0
 442 0014 BD46     		mov	sp, r7
 443 0016 02B0     		add	sp, sp, #8
 444              		@ sp needed
 445 0018 80BD     		pop	{r7, pc}
 446              	.L32:
 447 001a C046     		.align	2
 448              	.L31:
 449 001c 80000F40 		.word	1074724992
 450              		.cfi_endproc
 451              	.LFE11:
 452              		.size	pwm_SetInterruptMode, .-pwm_SetInterruptMode
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 21


 453              		.section	.text.pwm_ReadStatusRegister,"ax",%progbits
 454              		.align	2
 455              		.global	pwm_ReadStatusRegister
 456              		.code	16
 457              		.thumb_func
 458              		.type	pwm_ReadStatusRegister, %function
 459              	pwm_ReadStatusRegister:
 460              	.LFB12:
 688:Generated_Source\PSoC4/pwm.c **** 
 689:Generated_Source\PSoC4/pwm.c **** 
 690:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadStatusRegister
 692:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/pwm.c ****     *
 694:Generated_Source\PSoC4/pwm.c ****     * Summary:
 695:Generated_Source\PSoC4/pwm.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/pwm.c ****     *
 697:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 698:Generated_Source\PSoC4/pwm.c ****     *  None
 699:Generated_Source\PSoC4/pwm.c ****     *
 700:Generated_Source\PSoC4/pwm.c ****     * Return:
 701:Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/pwm.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/pwm.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/pwm.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/pwm.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/pwm.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/pwm.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/pwm.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/pwm.c ****     *
 710:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/pwm.c ****     {
 461              		.loc 1 712 0
 462              		.cfi_startproc
 463 0000 80B5     		push	{r7, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_STATUS_PTR));
 469              		.loc 1 713 0
 470 0004 024B     		ldr	r3, .L35
 471 0006 1B78     		ldrb	r3, [r3]
 472 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC4/pwm.c ****     }
 473              		.loc 1 714 0
 474 000a 181C     		mov	r0, r3
 475 000c BD46     		mov	sp, r7
 476              		@ sp needed
 477 000e 80BD     		pop	{r7, pc}
 478              	.L36:
 479              		.align	2
 480              	.L35:
 481 0010 60000F40 		.word	1074724960
 482              		.cfi_endproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 22


 483              	.LFE12:
 484              		.size	pwm_ReadStatusRegister, .-pwm_ReadStatusRegister
 485              		.section	.text.pwm_ReadControlRegister,"ax",%progbits
 486              		.align	2
 487              		.global	pwm_ReadControlRegister
 488              		.code	16
 489              		.thumb_func
 490              		.type	pwm_ReadControlRegister, %function
 491              	pwm_ReadControlRegister:
 492              	.LFB13:
 715:Generated_Source\PSoC4/pwm.c **** 
 716:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 717:Generated_Source\PSoC4/pwm.c **** 
 718:Generated_Source\PSoC4/pwm.c **** 
 719:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseControl)
 720:Generated_Source\PSoC4/pwm.c **** 
 721:Generated_Source\PSoC4/pwm.c **** 
 722:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadControlRegister
 724:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/pwm.c ****     *
 726:Generated_Source\PSoC4/pwm.c ****     * Summary:
 727:Generated_Source\PSoC4/pwm.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/pwm.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/pwm.c ****     *
 730:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 731:Generated_Source\PSoC4/pwm.c ****     *  None
 732:Generated_Source\PSoC4/pwm.c ****     *
 733:Generated_Source\PSoC4/pwm.c ****     * Return:
 734:Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/pwm.c ****     *
 736:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/pwm.c ****     {
 493              		.loc 1 738 0
 494              		.cfi_startproc
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 82B0     		sub	sp, sp, #8
 500              		.cfi_def_cfa_offset 16
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/pwm.c ****         uint8 result;
 740:Generated_Source\PSoC4/pwm.c **** 
 741:Generated_Source\PSoC4/pwm.c ****         result = CY_GET_REG8(pwm_CONTROL_PTR);
 503              		.loc 1 741 0
 504 0006 054A     		ldr	r2, .L39
 505 0008 FB1D     		add	r3, r7, #7
 506 000a 1278     		ldrb	r2, [r2]
 507 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/pwm.c ****         return (result);
 508              		.loc 1 742 0
 509 000e FB1D     		add	r3, r7, #7
 510 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/pwm.c ****     }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 23


 511              		.loc 1 743 0
 512 0012 181C     		mov	r0, r3
 513 0014 BD46     		mov	sp, r7
 514 0016 02B0     		add	sp, sp, #8
 515              		@ sp needed
 516 0018 80BD     		pop	{r7, pc}
 517              	.L40:
 518 001a C046     		.align	2
 519              	.L39:
 520 001c 70000F40 		.word	1074724976
 521              		.cfi_endproc
 522              	.LFE13:
 523              		.size	pwm_ReadControlRegister, .-pwm_ReadControlRegister
 524              		.section	.text.pwm_WriteControlRegister,"ax",%progbits
 525              		.align	2
 526              		.global	pwm_WriteControlRegister
 527              		.code	16
 528              		.thumb_func
 529              		.type	pwm_WriteControlRegister, %function
 530              	pwm_WriteControlRegister:
 531              	.LFB14:
 744:Generated_Source\PSoC4/pwm.c **** 
 745:Generated_Source\PSoC4/pwm.c **** 
 746:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteControlRegister
 748:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/pwm.c ****     *
 750:Generated_Source\PSoC4/pwm.c ****     * Summary:
 751:Generated_Source\PSoC4/pwm.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/pwm.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/pwm.c ****     *
 754:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 755:Generated_Source\PSoC4/pwm.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/pwm.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/pwm.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/pwm.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/pwm.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/pwm.c ****     *
 761:Generated_Source\PSoC4/pwm.c ****     * Return:
 762:Generated_Source\PSoC4/pwm.c ****     *  None
 763:Generated_Source\PSoC4/pwm.c ****     *
 764:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/pwm.c ****     {
 532              		.loc 1 766 0
 533              		.cfi_startproc
 534 0000 80B5     		push	{r7, lr}
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 82B0     		sub	sp, sp, #8
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 021C     		mov	r2, r0
 543 0008 FB1D     		add	r3, r7, #7
 544 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 24


 767:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_CONTROL_PTR, control);
 545              		.loc 1 767 0
 546 000c 034A     		ldr	r2, .L42
 547 000e FB1D     		add	r3, r7, #7
 548 0010 1B78     		ldrb	r3, [r3]
 549 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/pwm.c ****     }
 550              		.loc 1 768 0
 551 0014 BD46     		mov	sp, r7
 552 0016 02B0     		add	sp, sp, #8
 553              		@ sp needed
 554 0018 80BD     		pop	{r7, pc}
 555              	.L43:
 556 001a C046     		.align	2
 557              	.L42:
 558 001c 70000F40 		.word	1074724976
 559              		.cfi_endproc
 560              	.LFE14:
 561              		.size	pwm_WriteControlRegister, .-pwm_WriteControlRegister
 562              		.section	.text.pwm_ReadCapture,"ax",%progbits
 563              		.align	2
 564              		.global	pwm_ReadCapture
 565              		.code	16
 566              		.thumb_func
 567              		.type	pwm_ReadCapture, %function
 568              	pwm_ReadCapture:
 569              	.LFB15:
 769:Generated_Source\PSoC4/pwm.c **** 
 770:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseControl) */
 771:Generated_Source\PSoC4/pwm.c **** 
 772:Generated_Source\PSoC4/pwm.c **** 
 773:Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 774:Generated_Source\PSoC4/pwm.c **** 
 775:Generated_Source\PSoC4/pwm.c **** 
 776:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCapture
 778:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/pwm.c ****     *
 780:Generated_Source\PSoC4/pwm.c ****     * Summary:
 781:Generated_Source\PSoC4/pwm.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/pwm.c ****     *
 783:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 784:Generated_Source\PSoC4/pwm.c ****     *  None
 785:Generated_Source\PSoC4/pwm.c ****     *
 786:Generated_Source\PSoC4/pwm.c ****     * Return:
 787:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/pwm.c ****     *
 789:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCapture(void) 
 791:Generated_Source\PSoC4/pwm.c ****     {
 570              		.loc 1 791 0
 571              		.cfi_startproc
 572 0000 80B5     		push	{r7, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 25


 577              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 578              		.loc 1 792 0
 579 0004 024B     		ldr	r3, .L46
 580 0006 1B78     		ldrb	r3, [r3]
 581 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC4/pwm.c ****     }
 582              		.loc 1 793 0
 583 000a 181C     		mov	r0, r3
 584 000c BD46     		mov	sp, r7
 585              		@ sp needed
 586 000e 80BD     		pop	{r7, pc}
 587              	.L47:
 588              		.align	2
 589              	.L46:
 590 0010 53000F40 		.word	1074724947
 591              		.cfi_endproc
 592              	.LFE15:
 593              		.size	pwm_ReadCapture, .-pwm_ReadCapture
 594              		.section	.text.pwm_ReadCompare,"ax",%progbits
 595              		.align	2
 596              		.global	pwm_ReadCompare
 597              		.code	16
 598              		.thumb_func
 599              		.type	pwm_ReadCompare, %function
 600              	pwm_ReadCompare:
 601              	.LFB16:
 794:Generated_Source\PSoC4/pwm.c **** 
 795:Generated_Source\PSoC4/pwm.c **** #endif /* (!pwm_UsingFixedFunction) */
 796:Generated_Source\PSoC4/pwm.c **** 
 797:Generated_Source\PSoC4/pwm.c **** 
 798:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 799:Generated_Source\PSoC4/pwm.c **** 
 800:Generated_Source\PSoC4/pwm.c **** 
 801:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare
 803:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/pwm.c ****     *
 805:Generated_Source\PSoC4/pwm.c ****     * Summary:
 806:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/pwm.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/pwm.c ****     *
 809:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 810:Generated_Source\PSoC4/pwm.c ****     *  None
 811:Generated_Source\PSoC4/pwm.c ****     *
 812:Generated_Source\PSoC4/pwm.c ****     * Return:
 813:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/pwm.c ****     *
 815:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare(void) 
 817:Generated_Source\PSoC4/pwm.c ****     {
 602              		.loc 1 817 0
 603              		.cfi_startproc
 604 0000 80B5     		push	{r7, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 26


 608 0002 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 819:Generated_Source\PSoC4/pwm.c ****             return ((uint8)CY_GET_REG16(pwm_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/pwm.c ****         #else
 821:Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_COMPARE1_LSB_PTR));
 610              		.loc 1 821 0
 611 0004 024B     		ldr	r3, .L50
 612 0006 1B78     		ldrb	r3, [r3]
 613 0008 DBB2     		uxtb	r3, r3
 822:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 823:Generated_Source\PSoC4/pwm.c ****     }
 614              		.loc 1 823 0
 615 000a 181C     		mov	r0, r3
 616 000c BD46     		mov	sp, r7
 617              		@ sp needed
 618 000e 80BD     		pop	{r7, pc}
 619              	.L51:
 620              		.align	2
 621              	.L50:
 622 0010 23000F40 		.word	1074724899
 623              		.cfi_endproc
 624              	.LFE16:
 625              		.size	pwm_ReadCompare, .-pwm_ReadCompare
 626              		.section	.text.pwm_ReadPeriod,"ax",%progbits
 627              		.align	2
 628              		.global	pwm_ReadPeriod
 629              		.code	16
 630              		.thumb_func
 631              		.type	pwm_ReadPeriod, %function
 632              	pwm_ReadPeriod:
 633              	.LFB17:
 824:Generated_Source\PSoC4/pwm.c **** 
 825:Generated_Source\PSoC4/pwm.c **** #else
 826:Generated_Source\PSoC4/pwm.c **** 
 827:Generated_Source\PSoC4/pwm.c **** 
 828:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare1
 830:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/pwm.c ****     *
 832:Generated_Source\PSoC4/pwm.c ****     * Summary:
 833:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/pwm.c ****     *
 835:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 836:Generated_Source\PSoC4/pwm.c ****     *  None
 837:Generated_Source\PSoC4/pwm.c ****     *
 838:Generated_Source\PSoC4/pwm.c ****     * Return:
 839:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/pwm.c ****     *
 841:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare1(void) 
 843:Generated_Source\PSoC4/pwm.c ****     {
 844:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/pwm.c ****     }
 846:Generated_Source\PSoC4/pwm.c **** 
 847:Generated_Source\PSoC4/pwm.c **** 
 848:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 27


 849:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare2
 850:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/pwm.c ****     *
 852:Generated_Source\PSoC4/pwm.c ****     * Summary:
 853:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/pwm.c ****     *
 855:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 856:Generated_Source\PSoC4/pwm.c ****     *  None
 857:Generated_Source\PSoC4/pwm.c ****     *
 858:Generated_Source\PSoC4/pwm.c ****     * Return:
 859:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/pwm.c ****     *
 861:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare2(void) 
 863:Generated_Source\PSoC4/pwm.c ****     {
 864:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/pwm.c ****     }
 866:Generated_Source\PSoC4/pwm.c **** 
 867:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseOneCompareMode) */
 868:Generated_Source\PSoC4/pwm.c **** 
 869:Generated_Source\PSoC4/pwm.c **** 
 870:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_ReadPeriod
 872:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 873:Generated_Source\PSoC4/pwm.c **** *
 874:Generated_Source\PSoC4/pwm.c **** * Summary:
 875:Generated_Source\PSoC4/pwm.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/pwm.c **** *
 877:Generated_Source\PSoC4/pwm.c **** * Parameters:
 878:Generated_Source\PSoC4/pwm.c **** *  None
 879:Generated_Source\PSoC4/pwm.c **** *
 880:Generated_Source\PSoC4/pwm.c **** * Return:
 881:Generated_Source\PSoC4/pwm.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/pwm.c **** *
 883:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/pwm.c **** uint8 pwm_ReadPeriod(void) 
 885:Generated_Source\PSoC4/pwm.c **** {
 634              		.loc 1 885 0
 635              		.cfi_startproc
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 887:Generated_Source\PSoC4/pwm.c ****         return ((uint8)CY_GET_REG16(pwm_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/pwm.c ****     #else
 889:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_PERIOD_LSB_PTR));
 642              		.loc 1 889 0
 643 0004 024B     		ldr	r3, .L54
 644 0006 1B78     		ldrb	r3, [r3]
 645 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 891:Generated_Source\PSoC4/pwm.c **** }
 646              		.loc 1 891 0
 647 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 28


 648 000c BD46     		mov	sp, r7
 649              		@ sp needed
 650 000e 80BD     		pop	{r7, pc}
 651              	.L55:
 652              		.align	2
 653              	.L54:
 654 0010 43000F40 		.word	1074724931
 655              		.cfi_endproc
 656              	.LFE17:
 657              		.size	pwm_ReadPeriod, .-pwm_ReadPeriod
 658              		.text
 659              	.Letext0:
 660              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 661              		.section	.debug_info,"",%progbits
 662              	.Ldebug_info0:
 663 0000 7F020000 		.4byte	0x27f
 664 0004 0400     		.2byte	0x4
 665 0006 00000000 		.4byte	.Ldebug_abbrev0
 666 000a 04       		.byte	0x4
 667 000b 01       		.uleb128 0x1
 668 000c F5000000 		.4byte	.LASF38
 669 0010 01       		.byte	0x1
 670 0011 90010000 		.4byte	.LASF39
 671 0015 C4010000 		.4byte	.LASF40
 672 0019 00000000 		.4byte	.Ldebug_ranges0+0
 673 001d 00000000 		.4byte	0
 674 0021 00000000 		.4byte	.Ldebug_line0
 675 0025 02       		.uleb128 0x2
 676 0026 01       		.byte	0x1
 677 0027 06       		.byte	0x6
 678 0028 F3020000 		.4byte	.LASF0
 679 002c 02       		.uleb128 0x2
 680 002d 01       		.byte	0x1
 681 002e 08       		.byte	0x8
 682 002f 96000000 		.4byte	.LASF1
 683 0033 02       		.uleb128 0x2
 684 0034 02       		.byte	0x2
 685 0035 05       		.byte	0x5
 686 0036 A2020000 		.4byte	.LASF2
 687 003a 02       		.uleb128 0x2
 688 003b 02       		.byte	0x2
 689 003c 07       		.byte	0x7
 690 003d 17000000 		.4byte	.LASF3
 691 0041 02       		.uleb128 0x2
 692 0042 04       		.byte	0x4
 693 0043 05       		.byte	0x5
 694 0044 DB020000 		.4byte	.LASF4
 695 0048 02       		.uleb128 0x2
 696 0049 04       		.byte	0x4
 697 004a 07       		.byte	0x7
 698 004b A9000000 		.4byte	.LASF5
 699 004f 02       		.uleb128 0x2
 700 0050 08       		.byte	0x8
 701 0051 05       		.byte	0x5
 702 0052 6D020000 		.4byte	.LASF6
 703 0056 02       		.uleb128 0x2
 704 0057 08       		.byte	0x8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 29


 705 0058 07       		.byte	0x7
 706 0059 AD010000 		.4byte	.LASF7
 707 005d 03       		.uleb128 0x3
 708 005e 04       		.byte	0x4
 709 005f 05       		.byte	0x5
 710 0060 696E7400 		.ascii	"int\000"
 711 0064 02       		.uleb128 0x2
 712 0065 04       		.byte	0x4
 713 0066 07       		.byte	0x7
 714 0067 83010000 		.4byte	.LASF8
 715 006b 04       		.uleb128 0x4
 716 006c C7000000 		.4byte	.LASF12
 717 0070 02       		.byte	0x2
 718 0071 9801     		.2byte	0x198
 719 0073 2C000000 		.4byte	0x2c
 720 0077 02       		.uleb128 0x2
 721 0078 04       		.byte	0x4
 722 0079 04       		.byte	0x4
 723 007a 77000000 		.4byte	.LASF9
 724 007e 02       		.uleb128 0x2
 725 007f 08       		.byte	0x8
 726 0080 04       		.byte	0x4
 727 0081 EE000000 		.4byte	.LASF10
 728 0085 02       		.uleb128 0x2
 729 0086 01       		.byte	0x1
 730 0087 08       		.byte	0x8
 731 0088 E4020000 		.4byte	.LASF11
 732 008c 04       		.uleb128 0x4
 733 008d A4000000 		.4byte	.LASF13
 734 0091 02       		.byte	0x2
 735 0092 4202     		.2byte	0x242
 736 0094 98000000 		.4byte	0x98
 737 0098 05       		.uleb128 0x5
 738 0099 6B000000 		.4byte	0x6b
 739 009d 02       		.uleb128 0x2
 740 009e 04       		.byte	0x4
 741 009f 07       		.byte	0x7
 742 00a0 64020000 		.4byte	.LASF14
 743 00a4 06       		.uleb128 0x6
 744 00a5 E9020000 		.4byte	.LASF17
 745 00a9 01       		.byte	0x1
 746 00aa 37       		.byte	0x37
 747 00ab 00000000 		.4byte	.LFB2
 748 00af 24000000 		.4byte	.LFE2-.LFB2
 749 00b3 01       		.uleb128 0x1
 750 00b4 9C       		.byte	0x9c
 751 00b5 07       		.uleb128 0x7
 752 00b6 E5000000 		.4byte	.LASF20
 753 00ba 01       		.byte	0x1
 754 00bb 54       		.byte	0x54
 755 00bc 00000000 		.4byte	.LFB3
 756 00c0 84000000 		.4byte	.LFE3-.LFB3
 757 00c4 01       		.uleb128 0x1
 758 00c5 9C       		.byte	0x9c
 759 00c6 E7000000 		.4byte	0xe7
 760 00ca 08       		.uleb128 0x8
 761 00cb 5F020000 		.4byte	.LASF15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 30


 762 00cf 01       		.byte	0x1
 763 00d0 57       		.byte	0x57
 764 00d1 6B000000 		.4byte	0x6b
 765 00d5 02       		.uleb128 0x2
 766 00d6 91       		.byte	0x91
 767 00d7 6F       		.sleb128 -17
 768 00d8 08       		.uleb128 0x8
 769 00d9 07030000 		.4byte	.LASF16
 770 00dd 01       		.byte	0x1
 771 00de 5D       		.byte	0x5d
 772 00df 6B000000 		.4byte	0x6b
 773 00e3 02       		.uleb128 0x2
 774 00e4 91       		.byte	0x91
 775 00e5 6E       		.sleb128 -18
 776 00e6 00       		.byte	0
 777 00e7 09       		.uleb128 0x9
 778 00e8 AC020000 		.4byte	.LASF18
 779 00ec 01       		.byte	0x1
 780 00ed C7       		.byte	0xc7
 781 00ee 00000000 		.4byte	.LFB4
 782 00f2 20000000 		.4byte	.LFE4-.LFB4
 783 00f6 01       		.uleb128 0x1
 784 00f7 9C       		.byte	0x9c
 785 00f8 09       		.uleb128 0x9
 786 00f9 99020000 		.4byte	.LASF19
 787 00fd 01       		.byte	0x1
 788 00fe E9       		.byte	0xe9
 789 00ff 00000000 		.4byte	.LFB5
 790 0103 1C000000 		.4byte	.LFE5-.LFB5
 791 0107 01       		.uleb128 0x1
 792 0108 9C       		.byte	0x9c
 793 0109 0A       		.uleb128 0xa
 794 010a 35020000 		.4byte	.LASF21
 795 010e 01       		.byte	0x1
 796 010f 9301     		.2byte	0x193
 797 0111 00000000 		.4byte	.LFB6
 798 0115 20000000 		.4byte	.LFE6-.LFB6
 799 0119 01       		.uleb128 0x1
 800 011a 9C       		.byte	0x9c
 801 011b 2F010000 		.4byte	0x12f
 802 011f 0B       		.uleb128 0xb
 803 0120 7D000000 		.4byte	.LASF24
 804 0124 01       		.byte	0x1
 805 0125 9301     		.2byte	0x193
 806 0127 6B000000 		.4byte	0x6b
 807 012b 02       		.uleb128 0x2
 808 012c 91       		.byte	0x91
 809 012d 77       		.sleb128 -9
 810 012e 00       		.byte	0
 811 012f 0C       		.uleb128 0xc
 812 0130 D5000000 		.4byte	.LASF30
 813 0134 01       		.byte	0x1
 814 0135 A901     		.2byte	0x1a9
 815 0137 6B000000 		.4byte	0x6b
 816 013b 00000000 		.4byte	.LFB7
 817 013f 1C000000 		.4byte	.LFE7-.LFB7
 818 0143 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 31


 819 0144 9C       		.byte	0x9c
 820 0145 0D       		.uleb128 0xd
 821 0146 2A000000 		.4byte	.LASF22
 822 014a 01       		.byte	0x1
 823 014b C501     		.2byte	0x1c5
 824 014d 00000000 		.4byte	.LFB8
 825 0151 1C000000 		.4byte	.LFE8-.LFB8
 826 0155 01       		.uleb128 0x1
 827 0156 9C       		.byte	0x9c
 828 0157 0A       		.uleb128 0xa
 829 0158 7B020000 		.4byte	.LASF23
 830 015c 01       		.byte	0x1
 831 015d E201     		.2byte	0x1e2
 832 015f 00000000 		.4byte	.LFB9
 833 0163 20000000 		.4byte	.LFE9-.LFB9
 834 0167 01       		.uleb128 0x1
 835 0168 9C       		.byte	0x9c
 836 0169 7D010000 		.4byte	0x17d
 837 016d 0B       		.uleb128 0xb
 838 016e 10000000 		.4byte	.LASF25
 839 0172 01       		.byte	0x1
 840 0173 E201     		.2byte	0x1e2
 841 0175 6B000000 		.4byte	0x6b
 842 0179 02       		.uleb128 0x2
 843 017a 91       		.byte	0x91
 844 017b 77       		.sleb128 -9
 845 017c 00       		.byte	0
 846 017d 0A       		.uleb128 0xa
 847 017e 85000000 		.4byte	.LASF26
 848 0182 01       		.byte	0x1
 849 0183 0402     		.2byte	0x204
 850 0185 00000000 		.4byte	.LFB10
 851 0189 20000000 		.4byte	.LFE10-.LFB10
 852 018d 01       		.uleb128 0x1
 853 018e 9C       		.byte	0x9c
 854 018f A3010000 		.4byte	0x1a3
 855 0193 0B       		.uleb128 0xb
 856 0194 FF020000 		.4byte	.LASF27
 857 0198 01       		.byte	0x1
 858 0199 0402     		.2byte	0x204
 859 019b 6B000000 		.4byte	0x6b
 860 019f 02       		.uleb128 0x2
 861 01a0 91       		.byte	0x91
 862 01a1 77       		.sleb128 -9
 863 01a2 00       		.byte	0
 864 01a3 0A       		.uleb128 0xa
 865 01a4 C6020000 		.4byte	.LASF28
 866 01a8 01       		.byte	0x1
 867 01a9 AC02     		.2byte	0x2ac
 868 01ab 00000000 		.4byte	.LFB11
 869 01af 20000000 		.4byte	.LFE11-.LFB11
 870 01b3 01       		.uleb128 0x1
 871 01b4 9C       		.byte	0x9c
 872 01b5 C9010000 		.4byte	0x1c9
 873 01b9 0B       		.uleb128 0xb
 874 01ba 8B020000 		.4byte	.LASF29
 875 01be 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 32


 876 01bf AC02     		.2byte	0x2ac
 877 01c1 6B000000 		.4byte	0x6b
 878 01c5 02       		.uleb128 0x2
 879 01c6 91       		.byte	0x91
 880 01c7 77       		.sleb128 -9
 881 01c8 00       		.byte	0
 882 01c9 0C       		.uleb128 0xc
 883 01ca 38000000 		.4byte	.LASF31
 884 01ce 01       		.byte	0x1
 885 01cf C702     		.2byte	0x2c7
 886 01d1 6B000000 		.4byte	0x6b
 887 01d5 00000000 		.4byte	.LFB12
 888 01d9 14000000 		.4byte	.LFE12-.LFB12
 889 01dd 01       		.uleb128 0x1
 890 01de 9C       		.byte	0x9c
 891 01df 0E       		.uleb128 0xe
 892 01e0 4F000000 		.4byte	.LASF41
 893 01e4 01       		.byte	0x1
 894 01e5 E102     		.2byte	0x2e1
 895 01e7 6B000000 		.4byte	0x6b
 896 01eb 00000000 		.4byte	.LFB13
 897 01ef 20000000 		.4byte	.LFE13-.LFB13
 898 01f3 01       		.uleb128 0x1
 899 01f4 9C       		.byte	0x9c
 900 01f5 09020000 		.4byte	0x209
 901 01f9 0F       		.uleb128 0xf
 902 01fa 2E020000 		.4byte	.LASF32
 903 01fe 01       		.byte	0x1
 904 01ff E302     		.2byte	0x2e3
 905 0201 6B000000 		.4byte	0x6b
 906 0205 02       		.uleb128 0x2
 907 0206 91       		.byte	0x91
 908 0207 77       		.sleb128 -9
 909 0208 00       		.byte	0
 910 0209 0A       		.uleb128 0xa
 911 020a 46020000 		.4byte	.LASF33
 912 020e 01       		.byte	0x1
 913 020f FD02     		.2byte	0x2fd
 914 0211 00000000 		.4byte	.LFB14
 915 0215 20000000 		.4byte	.LFE14-.LFB14
 916 0219 01       		.uleb128 0x1
 917 021a 9C       		.byte	0x9c
 918 021b 2F020000 		.4byte	0x22f
 919 021f 0B       		.uleb128 0xb
 920 0220 CD000000 		.4byte	.LASF34
 921 0224 01       		.byte	0x1
 922 0225 FD02     		.2byte	0x2fd
 923 0227 6B000000 		.4byte	0x6b
 924 022b 02       		.uleb128 0x2
 925 022c 91       		.byte	0x91
 926 022d 77       		.sleb128 -9
 927 022e 00       		.byte	0
 928 022f 0C       		.uleb128 0xc
 929 0230 67000000 		.4byte	.LASF35
 930 0234 01       		.byte	0x1
 931 0235 1603     		.2byte	0x316
 932 0237 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 33


 933 023b 00000000 		.4byte	.LFB15
 934 023f 14000000 		.4byte	.LFE15-.LFB15
 935 0243 01       		.uleb128 0x1
 936 0244 9C       		.byte	0x9c
 937 0245 0C       		.uleb128 0xc
 938 0246 00000000 		.4byte	.LASF36
 939 024a 01       		.byte	0x1
 940 024b 3003     		.2byte	0x330
 941 024d 6B000000 		.4byte	0x6b
 942 0251 00000000 		.4byte	.LFB16
 943 0255 14000000 		.4byte	.LFE16-.LFB16
 944 0259 01       		.uleb128 0x1
 945 025a 9C       		.byte	0x9c
 946 025b 0C       		.uleb128 0xc
 947 025c B7020000 		.4byte	.LASF37
 948 0260 01       		.byte	0x1
 949 0261 7403     		.2byte	0x374
 950 0263 6B000000 		.4byte	0x6b
 951 0267 00000000 		.4byte	.LFB17
 952 026b 14000000 		.4byte	.LFE17-.LFB17
 953 026f 01       		.uleb128 0x1
 954 0270 9C       		.byte	0x9c
 955 0271 10       		.uleb128 0x10
 956 0272 BB000000 		.4byte	.LASF42
 957 0276 01       		.byte	0x1
 958 0277 20       		.byte	0x20
 959 0278 6B000000 		.4byte	0x6b
 960 027c 05       		.uleb128 0x5
 961 027d 03       		.byte	0x3
 962 027e 00000000 		.4byte	pwm_initVar
 963 0282 00       		.byte	0
 964              		.section	.debug_abbrev,"",%progbits
 965              	.Ldebug_abbrev0:
 966 0000 01       		.uleb128 0x1
 967 0001 11       		.uleb128 0x11
 968 0002 01       		.byte	0x1
 969 0003 25       		.uleb128 0x25
 970 0004 0E       		.uleb128 0xe
 971 0005 13       		.uleb128 0x13
 972 0006 0B       		.uleb128 0xb
 973 0007 03       		.uleb128 0x3
 974 0008 0E       		.uleb128 0xe
 975 0009 1B       		.uleb128 0x1b
 976 000a 0E       		.uleb128 0xe
 977 000b 55       		.uleb128 0x55
 978 000c 17       		.uleb128 0x17
 979 000d 11       		.uleb128 0x11
 980 000e 01       		.uleb128 0x1
 981 000f 10       		.uleb128 0x10
 982 0010 17       		.uleb128 0x17
 983 0011 00       		.byte	0
 984 0012 00       		.byte	0
 985 0013 02       		.uleb128 0x2
 986 0014 24       		.uleb128 0x24
 987 0015 00       		.byte	0
 988 0016 0B       		.uleb128 0xb
 989 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 34


 990 0018 3E       		.uleb128 0x3e
 991 0019 0B       		.uleb128 0xb
 992 001a 03       		.uleb128 0x3
 993 001b 0E       		.uleb128 0xe
 994 001c 00       		.byte	0
 995 001d 00       		.byte	0
 996 001e 03       		.uleb128 0x3
 997 001f 24       		.uleb128 0x24
 998 0020 00       		.byte	0
 999 0021 0B       		.uleb128 0xb
 1000 0022 0B       		.uleb128 0xb
 1001 0023 3E       		.uleb128 0x3e
 1002 0024 0B       		.uleb128 0xb
 1003 0025 03       		.uleb128 0x3
 1004 0026 08       		.uleb128 0x8
 1005 0027 00       		.byte	0
 1006 0028 00       		.byte	0
 1007 0029 04       		.uleb128 0x4
 1008 002a 16       		.uleb128 0x16
 1009 002b 00       		.byte	0
 1010 002c 03       		.uleb128 0x3
 1011 002d 0E       		.uleb128 0xe
 1012 002e 3A       		.uleb128 0x3a
 1013 002f 0B       		.uleb128 0xb
 1014 0030 3B       		.uleb128 0x3b
 1015 0031 05       		.uleb128 0x5
 1016 0032 49       		.uleb128 0x49
 1017 0033 13       		.uleb128 0x13
 1018 0034 00       		.byte	0
 1019 0035 00       		.byte	0
 1020 0036 05       		.uleb128 0x5
 1021 0037 35       		.uleb128 0x35
 1022 0038 00       		.byte	0
 1023 0039 49       		.uleb128 0x49
 1024 003a 13       		.uleb128 0x13
 1025 003b 00       		.byte	0
 1026 003c 00       		.byte	0
 1027 003d 06       		.uleb128 0x6
 1028 003e 2E       		.uleb128 0x2e
 1029 003f 00       		.byte	0
 1030 0040 3F       		.uleb128 0x3f
 1031 0041 19       		.uleb128 0x19
 1032 0042 03       		.uleb128 0x3
 1033 0043 0E       		.uleb128 0xe
 1034 0044 3A       		.uleb128 0x3a
 1035 0045 0B       		.uleb128 0xb
 1036 0046 3B       		.uleb128 0x3b
 1037 0047 0B       		.uleb128 0xb
 1038 0048 27       		.uleb128 0x27
 1039 0049 19       		.uleb128 0x19
 1040 004a 11       		.uleb128 0x11
 1041 004b 01       		.uleb128 0x1
 1042 004c 12       		.uleb128 0x12
 1043 004d 06       		.uleb128 0x6
 1044 004e 40       		.uleb128 0x40
 1045 004f 18       		.uleb128 0x18
 1046 0050 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 35


 1047 0052 19       		.uleb128 0x19
 1048 0053 00       		.byte	0
 1049 0054 00       		.byte	0
 1050 0055 07       		.uleb128 0x7
 1051 0056 2E       		.uleb128 0x2e
 1052 0057 01       		.byte	0x1
 1053 0058 3F       		.uleb128 0x3f
 1054 0059 19       		.uleb128 0x19
 1055 005a 03       		.uleb128 0x3
 1056 005b 0E       		.uleb128 0xe
 1057 005c 3A       		.uleb128 0x3a
 1058 005d 0B       		.uleb128 0xb
 1059 005e 3B       		.uleb128 0x3b
 1060 005f 0B       		.uleb128 0xb
 1061 0060 27       		.uleb128 0x27
 1062 0061 19       		.uleb128 0x19
 1063 0062 11       		.uleb128 0x11
 1064 0063 01       		.uleb128 0x1
 1065 0064 12       		.uleb128 0x12
 1066 0065 06       		.uleb128 0x6
 1067 0066 40       		.uleb128 0x40
 1068 0067 18       		.uleb128 0x18
 1069 0068 9642     		.uleb128 0x2116
 1070 006a 19       		.uleb128 0x19
 1071 006b 01       		.uleb128 0x1
 1072 006c 13       		.uleb128 0x13
 1073 006d 00       		.byte	0
 1074 006e 00       		.byte	0
 1075 006f 08       		.uleb128 0x8
 1076 0070 34       		.uleb128 0x34
 1077 0071 00       		.byte	0
 1078 0072 03       		.uleb128 0x3
 1079 0073 0E       		.uleb128 0xe
 1080 0074 3A       		.uleb128 0x3a
 1081 0075 0B       		.uleb128 0xb
 1082 0076 3B       		.uleb128 0x3b
 1083 0077 0B       		.uleb128 0xb
 1084 0078 49       		.uleb128 0x49
 1085 0079 13       		.uleb128 0x13
 1086 007a 02       		.uleb128 0x2
 1087 007b 18       		.uleb128 0x18
 1088 007c 00       		.byte	0
 1089 007d 00       		.byte	0
 1090 007e 09       		.uleb128 0x9
 1091 007f 2E       		.uleb128 0x2e
 1092 0080 00       		.byte	0
 1093 0081 3F       		.uleb128 0x3f
 1094 0082 19       		.uleb128 0x19
 1095 0083 03       		.uleb128 0x3
 1096 0084 0E       		.uleb128 0xe
 1097 0085 3A       		.uleb128 0x3a
 1098 0086 0B       		.uleb128 0xb
 1099 0087 3B       		.uleb128 0x3b
 1100 0088 0B       		.uleb128 0xb
 1101 0089 27       		.uleb128 0x27
 1102 008a 19       		.uleb128 0x19
 1103 008b 11       		.uleb128 0x11
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 36


 1104 008c 01       		.uleb128 0x1
 1105 008d 12       		.uleb128 0x12
 1106 008e 06       		.uleb128 0x6
 1107 008f 40       		.uleb128 0x40
 1108 0090 18       		.uleb128 0x18
 1109 0091 9742     		.uleb128 0x2117
 1110 0093 19       		.uleb128 0x19
 1111 0094 00       		.byte	0
 1112 0095 00       		.byte	0
 1113 0096 0A       		.uleb128 0xa
 1114 0097 2E       		.uleb128 0x2e
 1115 0098 01       		.byte	0x1
 1116 0099 3F       		.uleb128 0x3f
 1117 009a 19       		.uleb128 0x19
 1118 009b 03       		.uleb128 0x3
 1119 009c 0E       		.uleb128 0xe
 1120 009d 3A       		.uleb128 0x3a
 1121 009e 0B       		.uleb128 0xb
 1122 009f 3B       		.uleb128 0x3b
 1123 00a0 05       		.uleb128 0x5
 1124 00a1 27       		.uleb128 0x27
 1125 00a2 19       		.uleb128 0x19
 1126 00a3 11       		.uleb128 0x11
 1127 00a4 01       		.uleb128 0x1
 1128 00a5 12       		.uleb128 0x12
 1129 00a6 06       		.uleb128 0x6
 1130 00a7 40       		.uleb128 0x40
 1131 00a8 18       		.uleb128 0x18
 1132 00a9 9742     		.uleb128 0x2117
 1133 00ab 19       		.uleb128 0x19
 1134 00ac 01       		.uleb128 0x1
 1135 00ad 13       		.uleb128 0x13
 1136 00ae 00       		.byte	0
 1137 00af 00       		.byte	0
 1138 00b0 0B       		.uleb128 0xb
 1139 00b1 05       		.uleb128 0x5
 1140 00b2 00       		.byte	0
 1141 00b3 03       		.uleb128 0x3
 1142 00b4 0E       		.uleb128 0xe
 1143 00b5 3A       		.uleb128 0x3a
 1144 00b6 0B       		.uleb128 0xb
 1145 00b7 3B       		.uleb128 0x3b
 1146 00b8 05       		.uleb128 0x5
 1147 00b9 49       		.uleb128 0x49
 1148 00ba 13       		.uleb128 0x13
 1149 00bb 02       		.uleb128 0x2
 1150 00bc 18       		.uleb128 0x18
 1151 00bd 00       		.byte	0
 1152 00be 00       		.byte	0
 1153 00bf 0C       		.uleb128 0xc
 1154 00c0 2E       		.uleb128 0x2e
 1155 00c1 00       		.byte	0
 1156 00c2 3F       		.uleb128 0x3f
 1157 00c3 19       		.uleb128 0x19
 1158 00c4 03       		.uleb128 0x3
 1159 00c5 0E       		.uleb128 0xe
 1160 00c6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 37


 1161 00c7 0B       		.uleb128 0xb
 1162 00c8 3B       		.uleb128 0x3b
 1163 00c9 05       		.uleb128 0x5
 1164 00ca 27       		.uleb128 0x27
 1165 00cb 19       		.uleb128 0x19
 1166 00cc 49       		.uleb128 0x49
 1167 00cd 13       		.uleb128 0x13
 1168 00ce 11       		.uleb128 0x11
 1169 00cf 01       		.uleb128 0x1
 1170 00d0 12       		.uleb128 0x12
 1171 00d1 06       		.uleb128 0x6
 1172 00d2 40       		.uleb128 0x40
 1173 00d3 18       		.uleb128 0x18
 1174 00d4 9742     		.uleb128 0x2117
 1175 00d6 19       		.uleb128 0x19
 1176 00d7 00       		.byte	0
 1177 00d8 00       		.byte	0
 1178 00d9 0D       		.uleb128 0xd
 1179 00da 2E       		.uleb128 0x2e
 1180 00db 00       		.byte	0
 1181 00dc 3F       		.uleb128 0x3f
 1182 00dd 19       		.uleb128 0x19
 1183 00de 03       		.uleb128 0x3
 1184 00df 0E       		.uleb128 0xe
 1185 00e0 3A       		.uleb128 0x3a
 1186 00e1 0B       		.uleb128 0xb
 1187 00e2 3B       		.uleb128 0x3b
 1188 00e3 05       		.uleb128 0x5
 1189 00e4 27       		.uleb128 0x27
 1190 00e5 19       		.uleb128 0x19
 1191 00e6 11       		.uleb128 0x11
 1192 00e7 01       		.uleb128 0x1
 1193 00e8 12       		.uleb128 0x12
 1194 00e9 06       		.uleb128 0x6
 1195 00ea 40       		.uleb128 0x40
 1196 00eb 18       		.uleb128 0x18
 1197 00ec 9642     		.uleb128 0x2116
 1198 00ee 19       		.uleb128 0x19
 1199 00ef 00       		.byte	0
 1200 00f0 00       		.byte	0
 1201 00f1 0E       		.uleb128 0xe
 1202 00f2 2E       		.uleb128 0x2e
 1203 00f3 01       		.byte	0x1
 1204 00f4 3F       		.uleb128 0x3f
 1205 00f5 19       		.uleb128 0x19
 1206 00f6 03       		.uleb128 0x3
 1207 00f7 0E       		.uleb128 0xe
 1208 00f8 3A       		.uleb128 0x3a
 1209 00f9 0B       		.uleb128 0xb
 1210 00fa 3B       		.uleb128 0x3b
 1211 00fb 05       		.uleb128 0x5
 1212 00fc 27       		.uleb128 0x27
 1213 00fd 19       		.uleb128 0x19
 1214 00fe 49       		.uleb128 0x49
 1215 00ff 13       		.uleb128 0x13
 1216 0100 11       		.uleb128 0x11
 1217 0101 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 38


 1218 0102 12       		.uleb128 0x12
 1219 0103 06       		.uleb128 0x6
 1220 0104 40       		.uleb128 0x40
 1221 0105 18       		.uleb128 0x18
 1222 0106 9742     		.uleb128 0x2117
 1223 0108 19       		.uleb128 0x19
 1224 0109 01       		.uleb128 0x1
 1225 010a 13       		.uleb128 0x13
 1226 010b 00       		.byte	0
 1227 010c 00       		.byte	0
 1228 010d 0F       		.uleb128 0xf
 1229 010e 34       		.uleb128 0x34
 1230 010f 00       		.byte	0
 1231 0110 03       		.uleb128 0x3
 1232 0111 0E       		.uleb128 0xe
 1233 0112 3A       		.uleb128 0x3a
 1234 0113 0B       		.uleb128 0xb
 1235 0114 3B       		.uleb128 0x3b
 1236 0115 05       		.uleb128 0x5
 1237 0116 49       		.uleb128 0x49
 1238 0117 13       		.uleb128 0x13
 1239 0118 02       		.uleb128 0x2
 1240 0119 18       		.uleb128 0x18
 1241 011a 00       		.byte	0
 1242 011b 00       		.byte	0
 1243 011c 10       		.uleb128 0x10
 1244 011d 34       		.uleb128 0x34
 1245 011e 00       		.byte	0
 1246 011f 03       		.uleb128 0x3
 1247 0120 0E       		.uleb128 0xe
 1248 0121 3A       		.uleb128 0x3a
 1249 0122 0B       		.uleb128 0xb
 1250 0123 3B       		.uleb128 0x3b
 1251 0124 0B       		.uleb128 0xb
 1252 0125 49       		.uleb128 0x49
 1253 0126 13       		.uleb128 0x13
 1254 0127 3F       		.uleb128 0x3f
 1255 0128 19       		.uleb128 0x19
 1256 0129 02       		.uleb128 0x2
 1257 012a 18       		.uleb128 0x18
 1258 012b 00       		.byte	0
 1259 012c 00       		.byte	0
 1260 012d 00       		.byte	0
 1261              		.section	.debug_aranges,"",%progbits
 1262 0000 94000000 		.4byte	0x94
 1263 0004 0200     		.2byte	0x2
 1264 0006 00000000 		.4byte	.Ldebug_info0
 1265 000a 04       		.byte	0x4
 1266 000b 00       		.byte	0
 1267 000c 0000     		.2byte	0
 1268 000e 0000     		.2byte	0
 1269 0010 00000000 		.4byte	.LFB2
 1270 0014 24000000 		.4byte	.LFE2-.LFB2
 1271 0018 00000000 		.4byte	.LFB3
 1272 001c 84000000 		.4byte	.LFE3-.LFB3
 1273 0020 00000000 		.4byte	.LFB4
 1274 0024 20000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 39


 1275 0028 00000000 		.4byte	.LFB5
 1276 002c 1C000000 		.4byte	.LFE5-.LFB5
 1277 0030 00000000 		.4byte	.LFB6
 1278 0034 20000000 		.4byte	.LFE6-.LFB6
 1279 0038 00000000 		.4byte	.LFB7
 1280 003c 1C000000 		.4byte	.LFE7-.LFB7
 1281 0040 00000000 		.4byte	.LFB8
 1282 0044 1C000000 		.4byte	.LFE8-.LFB8
 1283 0048 00000000 		.4byte	.LFB9
 1284 004c 20000000 		.4byte	.LFE9-.LFB9
 1285 0050 00000000 		.4byte	.LFB10
 1286 0054 20000000 		.4byte	.LFE10-.LFB10
 1287 0058 00000000 		.4byte	.LFB11
 1288 005c 20000000 		.4byte	.LFE11-.LFB11
 1289 0060 00000000 		.4byte	.LFB12
 1290 0064 14000000 		.4byte	.LFE12-.LFB12
 1291 0068 00000000 		.4byte	.LFB13
 1292 006c 20000000 		.4byte	.LFE13-.LFB13
 1293 0070 00000000 		.4byte	.LFB14
 1294 0074 20000000 		.4byte	.LFE14-.LFB14
 1295 0078 00000000 		.4byte	.LFB15
 1296 007c 14000000 		.4byte	.LFE15-.LFB15
 1297 0080 00000000 		.4byte	.LFB16
 1298 0084 14000000 		.4byte	.LFE16-.LFB16
 1299 0088 00000000 		.4byte	.LFB17
 1300 008c 14000000 		.4byte	.LFE17-.LFB17
 1301 0090 00000000 		.4byte	0
 1302 0094 00000000 		.4byte	0
 1303              		.section	.debug_ranges,"",%progbits
 1304              	.Ldebug_ranges0:
 1305 0000 00000000 		.4byte	.LFB2
 1306 0004 24000000 		.4byte	.LFE2
 1307 0008 00000000 		.4byte	.LFB3
 1308 000c 84000000 		.4byte	.LFE3
 1309 0010 00000000 		.4byte	.LFB4
 1310 0014 20000000 		.4byte	.LFE4
 1311 0018 00000000 		.4byte	.LFB5
 1312 001c 1C000000 		.4byte	.LFE5
 1313 0020 00000000 		.4byte	.LFB6
 1314 0024 20000000 		.4byte	.LFE6
 1315 0028 00000000 		.4byte	.LFB7
 1316 002c 1C000000 		.4byte	.LFE7
 1317 0030 00000000 		.4byte	.LFB8
 1318 0034 1C000000 		.4byte	.LFE8
 1319 0038 00000000 		.4byte	.LFB9
 1320 003c 20000000 		.4byte	.LFE9
 1321 0040 00000000 		.4byte	.LFB10
 1322 0044 20000000 		.4byte	.LFE10
 1323 0048 00000000 		.4byte	.LFB11
 1324 004c 20000000 		.4byte	.LFE11
 1325 0050 00000000 		.4byte	.LFB12
 1326 0054 14000000 		.4byte	.LFE12
 1327 0058 00000000 		.4byte	.LFB13
 1328 005c 20000000 		.4byte	.LFE13
 1329 0060 00000000 		.4byte	.LFB14
 1330 0064 20000000 		.4byte	.LFE14
 1331 0068 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 40


 1332 006c 14000000 		.4byte	.LFE15
 1333 0070 00000000 		.4byte	.LFB16
 1334 0074 14000000 		.4byte	.LFE16
 1335 0078 00000000 		.4byte	.LFB17
 1336 007c 14000000 		.4byte	.LFE17
 1337 0080 00000000 		.4byte	0
 1338 0084 00000000 		.4byte	0
 1339              		.section	.debug_line,"",%progbits
 1340              	.Ldebug_line0:
 1341 0000 80010000 		.section	.debug_str,"MS",%progbits,1
 1341      02004000 
 1341      00000201 
 1341      FB0E0D00 
 1341      01010101 
 1342              	.LASF36:
 1343 0000 70776D5F 		.ascii	"pwm_ReadCompare\000"
 1343      52656164 
 1343      436F6D70 
 1343      61726500 
 1344              	.LASF25:
 1345 0010 70657269 		.ascii	"period\000"
 1345      6F6400
 1346              	.LASF3:
 1347 0017 73686F72 		.ascii	"short unsigned int\000"
 1347      7420756E 
 1347      7369676E 
 1347      65642069 
 1347      6E7400
 1348              	.LASF22:
 1349 002a 70776D5F 		.ascii	"pwm_ClearFIFO\000"
 1349      436C6561 
 1349      72464946 
 1349      4F00
 1350              	.LASF31:
 1351 0038 70776D5F 		.ascii	"pwm_ReadStatusRegister\000"
 1351      52656164 
 1351      53746174 
 1351      75735265 
 1351      67697374 
 1352              	.LASF41:
 1353 004f 70776D5F 		.ascii	"pwm_ReadControlRegister\000"
 1353      52656164 
 1353      436F6E74 
 1353      726F6C52 
 1353      65676973 
 1354              	.LASF35:
 1355 0067 70776D5F 		.ascii	"pwm_ReadCapture\000"
 1355      52656164 
 1355      43617074 
 1355      75726500 
 1356              	.LASF9:
 1357 0077 666C6F61 		.ascii	"float\000"
 1357      7400
 1358              	.LASF24:
 1359 007d 636F756E 		.ascii	"counter\000"
 1359      74657200 
 1360              	.LASF26:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 41


 1361 0085 70776D5F 		.ascii	"pwm_WriteCompare\000"
 1361      57726974 
 1361      65436F6D 
 1361      70617265 
 1361      00
 1362              	.LASF1:
 1363 0096 756E7369 		.ascii	"unsigned char\000"
 1363      676E6564 
 1363      20636861 
 1363      7200
 1364              	.LASF13:
 1365 00a4 72656738 		.ascii	"reg8\000"
 1365      00
 1366              	.LASF5:
 1367 00a9 6C6F6E67 		.ascii	"long unsigned int\000"
 1367      20756E73 
 1367      69676E65 
 1367      6420696E 
 1367      7400
 1368              	.LASF42:
 1369 00bb 70776D5F 		.ascii	"pwm_initVar\000"
 1369      696E6974 
 1369      56617200 
 1370              	.LASF12:
 1371 00c7 75696E74 		.ascii	"uint8\000"
 1371      3800
 1372              	.LASF34:
 1373 00cd 636F6E74 		.ascii	"control\000"
 1373      726F6C00 
 1374              	.LASF30:
 1375 00d5 70776D5F 		.ascii	"pwm_ReadCounter\000"
 1375      52656164 
 1375      436F756E 
 1375      74657200 
 1376              	.LASF20:
 1377 00e5 70776D5F 		.ascii	"pwm_Init\000"
 1377      496E6974 
 1377      00
 1378              	.LASF10:
 1379 00ee 646F7562 		.ascii	"double\000"
 1379      6C6500
 1380              	.LASF38:
 1381 00f5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1381      4320342E 
 1381      392E3320 
 1381      32303135 
 1381      30333033 
 1382 0128 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1382      20726576 
 1382      6973696F 
 1382      6E203232 
 1382      31323230 
 1383 015b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1383      66756E63 
 1383      74696F6E 
 1383      2D736563 
 1383      74696F6E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 42


 1384              	.LASF8:
 1385 0183 756E7369 		.ascii	"unsigned int\000"
 1385      676E6564 
 1385      20696E74 
 1385      00
 1386              	.LASF39:
 1387 0190 47656E65 		.ascii	"Generated_Source\\PSoC4\\pwm.c\000"
 1387      72617465 
 1387      645F536F 
 1387      75726365 
 1387      5C50536F 
 1388              	.LASF7:
 1389 01ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 1389      206C6F6E 
 1389      6720756E 
 1389      7369676E 
 1389      65642069 
 1390              	.LASF40:
 1391 01c4 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\vesion 2\\fw\\fin"
 1391      79707265 
 1391      73735C73 
 1391      79737465 
 1391      6D2D7374 
 1392 01f2 6973685C 		.ascii	"ish\\sandbox\\v7_debug_ntp\\Finish(state machine)\\"
 1392      73616E64 
 1392      626F785C 
 1392      76375F64 
 1392      65627567 
 1393 0221 66696E5F 		.ascii	"fin_v0.cydsn\000"
 1393      76302E63 
 1393      7964736E 
 1393      00
 1394              	.LASF32:
 1395 022e 72657375 		.ascii	"result\000"
 1395      6C7400
 1396              	.LASF21:
 1397 0235 70776D5F 		.ascii	"pwm_WriteCounter\000"
 1397      57726974 
 1397      65436F75 
 1397      6E746572 
 1397      00
 1398              	.LASF33:
 1399 0246 70776D5F 		.ascii	"pwm_WriteControlRegister\000"
 1399      57726974 
 1399      65436F6E 
 1399      74726F6C 
 1399      52656769 
 1400              	.LASF15:
 1401 025f 6374726C 		.ascii	"ctrl\000"
 1401      00
 1402              	.LASF14:
 1403 0264 73697A65 		.ascii	"sizetype\000"
 1403      74797065 
 1403      00
 1404              	.LASF6:
 1405 026d 6C6F6E67 		.ascii	"long long int\000"
 1405      206C6F6E 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 43


 1405      6720696E 
 1405      7400
 1406              	.LASF23:
 1407 027b 70776D5F 		.ascii	"pwm_WritePeriod\000"
 1407      57726974 
 1407      65506572 
 1407      696F6400 
 1408              	.LASF29:
 1409 028b 696E7465 		.ascii	"interruptMode\000"
 1409      72727570 
 1409      744D6F64 
 1409      6500
 1410              	.LASF19:
 1411 0299 70776D5F 		.ascii	"pwm_Stop\000"
 1411      53746F70 
 1411      00
 1412              	.LASF2:
 1413 02a2 73686F72 		.ascii	"short int\000"
 1413      7420696E 
 1413      7400
 1414              	.LASF18:
 1415 02ac 70776D5F 		.ascii	"pwm_Enable\000"
 1415      456E6162 
 1415      6C6500
 1416              	.LASF37:
 1417 02b7 70776D5F 		.ascii	"pwm_ReadPeriod\000"
 1417      52656164 
 1417      50657269 
 1417      6F6400
 1418              	.LASF28:
 1419 02c6 70776D5F 		.ascii	"pwm_SetInterruptMode\000"
 1419      53657449 
 1419      6E746572 
 1419      72757074 
 1419      4D6F6465 
 1420              	.LASF4:
 1421 02db 6C6F6E67 		.ascii	"long int\000"
 1421      20696E74 
 1421      00
 1422              	.LASF11:
 1423 02e4 63686172 		.ascii	"char\000"
 1423      00
 1424              	.LASF17:
 1425 02e9 70776D5F 		.ascii	"pwm_Start\000"
 1425      53746172 
 1425      7400
 1426              	.LASF0:
 1427 02f3 7369676E 		.ascii	"signed char\000"
 1427      65642063 
 1427      68617200 
 1428              	.LASF27:
 1429 02ff 636F6D70 		.ascii	"compare\000"
 1429      61726500 
 1430              	.LASF16:
 1431 0307 70776D5F 		.ascii	"pwm_interruptState\000"
 1431      696E7465 
 1431      72727570 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cclTHdNy.s 			page 44


 1431      74537461 
 1431      746500
 1432              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
