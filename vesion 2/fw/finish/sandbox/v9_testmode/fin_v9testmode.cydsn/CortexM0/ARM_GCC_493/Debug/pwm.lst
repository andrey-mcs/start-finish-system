ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"pwm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.pwm_Enable,"ax",%progbits
  18              		.align	1
  19              		.global	pwm_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	pwm_Enable, %function
  23              	pwm_Enable:
  24              	.LFB4:
  25              		.file 1 "Generated_Source\\PSoC4\\pwm.c"
   1:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/pwm.c **** * File Name: pwm.c
   3:Generated_Source\PSoC4/pwm.c **** * Version 3.30
   4:Generated_Source\PSoC4/pwm.c **** *
   5:Generated_Source\PSoC4/pwm.c **** * Description:
   6:Generated_Source\PSoC4/pwm.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/pwm.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/pwm.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/pwm.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/pwm.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/pwm.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/pwm.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/pwm.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/pwm.c **** *
  15:Generated_Source\PSoC4/pwm.c **** * Note:
  16:Generated_Source\PSoC4/pwm.c **** *
  17:Generated_Source\PSoC4/pwm.c **** *******************************************************************************
  18:Generated_Source\PSoC4/pwm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/pwm.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/pwm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/pwm.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/pwm.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/pwm.c **** 
  24:Generated_Source\PSoC4/pwm.c **** #include "pwm.h"
  25:Generated_Source\PSoC4/pwm.c **** 
  26:Generated_Source\PSoC4/pwm.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/pwm.c **** #ifdef pwm_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/pwm.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/pwm.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/pwm.c **** #endif /* pwm_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/pwm.c **** 
  32:Generated_Source\PSoC4/pwm.c **** uint8 pwm_initVar = 0u;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 2


  33:Generated_Source\PSoC4/pwm.c **** 
  34:Generated_Source\PSoC4/pwm.c **** 
  35:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Start
  37:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  38:Generated_Source\PSoC4/pwm.c **** *
  39:Generated_Source\PSoC4/pwm.c **** * Summary:
  40:Generated_Source\PSoC4/pwm.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/pwm.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/pwm.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/pwm.c **** *
  44:Generated_Source\PSoC4/pwm.c **** * Parameters:
  45:Generated_Source\PSoC4/pwm.c **** *  None
  46:Generated_Source\PSoC4/pwm.c **** *
  47:Generated_Source\PSoC4/pwm.c **** * Return:
  48:Generated_Source\PSoC4/pwm.c **** *  None
  49:Generated_Source\PSoC4/pwm.c **** *
  50:Generated_Source\PSoC4/pwm.c **** * Global variables:
  51:Generated_Source\PSoC4/pwm.c **** *  pwm_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/pwm.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/pwm.c **** *
  54:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/pwm.c **** void pwm_Start(void) 
  56:Generated_Source\PSoC4/pwm.c **** {
  57:Generated_Source\PSoC4/pwm.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/pwm.c ****     if(pwm_initVar == 0u)
  59:Generated_Source\PSoC4/pwm.c ****     {
  60:Generated_Source\PSoC4/pwm.c ****         pwm_Init();
  61:Generated_Source\PSoC4/pwm.c ****         pwm_initVar = 1u;
  62:Generated_Source\PSoC4/pwm.c ****     }
  63:Generated_Source\PSoC4/pwm.c ****     pwm_Enable();
  64:Generated_Source\PSoC4/pwm.c **** 
  65:Generated_Source\PSoC4/pwm.c **** }
  66:Generated_Source\PSoC4/pwm.c **** 
  67:Generated_Source\PSoC4/pwm.c **** 
  68:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Init
  70:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  71:Generated_Source\PSoC4/pwm.c **** *
  72:Generated_Source\PSoC4/pwm.c **** * Summary:
  73:Generated_Source\PSoC4/pwm.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/pwm.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/pwm.c **** *  pwm_Start().
  76:Generated_Source\PSoC4/pwm.c **** *
  77:Generated_Source\PSoC4/pwm.c **** * Parameters:
  78:Generated_Source\PSoC4/pwm.c **** *  None
  79:Generated_Source\PSoC4/pwm.c **** *
  80:Generated_Source\PSoC4/pwm.c **** * Return:
  81:Generated_Source\PSoC4/pwm.c **** *  None
  82:Generated_Source\PSoC4/pwm.c **** *
  83:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/pwm.c **** void pwm_Init(void) 
  85:Generated_Source\PSoC4/pwm.c **** {
  86:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
  87:Generated_Source\PSoC4/pwm.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction || pwm_UseControl) */
  89:Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 3


  90:Generated_Source\PSoC4/pwm.c ****     #if(!pwm_UsingFixedFunction)
  91:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
  92:Generated_Source\PSoC4/pwm.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/pwm.c ****             uint8 pwm_interruptState;
  94:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
  95:Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
  96:Generated_Source\PSoC4/pwm.c **** 
  97:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
  98:Generated_Source\PSoC4/pwm.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CFG0_MODE;
 100:Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBand2_4)
 101:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= pwm_CFG0_DB;
 102:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBand2_4) */
 103:Generated_Source\PSoC4/pwm.c **** 
 104:Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL3 & ((uint8 )(~pwm_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL3 = ctrl | pwm_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/pwm.c **** 
 107:Generated_Source\PSoC4/pwm.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_RT1_MASK));
 109:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNC;
 110:Generated_Source\PSoC4/pwm.c **** 
 111:Generated_Source\PSoC4/pwm.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNCDSI_EN;
 114:Generated_Source\PSoC4/pwm.c **** 
 115:Generated_Source\PSoC4/pwm.c ****     #elif (pwm_UseControl)
 116:Generated_Source\PSoC4/pwm.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL & ((uint8)(~pwm_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL = ctrl | pwm_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/pwm.c ****                                    pwm_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 122:Generated_Source\PSoC4/pwm.c **** 
 123:Generated_Source\PSoC4/pwm.c ****     #if (!pwm_UsingFixedFunction)
 124:Generated_Source\PSoC4/pwm.c ****         #if (pwm_Resolution == 8)
 125:Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/pwm.c ****         #else /* (pwm_Resolution == 16)*/
 128:Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP1 |= (pwm_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_Resolution == 8) */
 132:Generated_Source\PSoC4/pwm.c **** 
 133:Generated_Source\PSoC4/pwm.c ****         pwm_WriteCounter(pwm_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
 135:Generated_Source\PSoC4/pwm.c **** 
 136:Generated_Source\PSoC4/pwm.c ****     pwm_WritePeriod(pwm_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/pwm.c **** 
 138:Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseOneCompareMode)
 139:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare(pwm_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/pwm.c ****         #else
 141:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare1(pwm_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare2(pwm_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseOneCompareMode) */
 144:Generated_Source\PSoC4/pwm.c **** 
 145:Generated_Source\PSoC4/pwm.c ****         #if (pwm_KillModeMinTime)
 146:Generated_Source\PSoC4/pwm.c ****             pwm_WriteKillTime(pwm_MinimumKillTime);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 4


 147:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_KillModeMinTime) */
 148:Generated_Source\PSoC4/pwm.c **** 
 149:Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBandUsed)
 150:Generated_Source\PSoC4/pwm.c ****             pwm_WriteDeadTime(pwm_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBandUsed) */
 152:Generated_Source\PSoC4/pwm.c **** 
 153:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus || pwm_UsingFixedFunction)
 154:Generated_Source\PSoC4/pwm.c ****         pwm_SetInterruptMode(pwm_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 156:Generated_Source\PSoC4/pwm.c **** 
 157:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 158:Generated_Source\PSoC4/pwm.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/pwm.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL2 |= pwm_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/pwm.c ****     #else
 163:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
 164:Generated_Source\PSoC4/pwm.c **** 
 165:Generated_Source\PSoC4/pwm.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/pwm.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/pwm.c ****             pwm_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/pwm.c ****             pwm_STATUS_AUX_CTRL |= pwm_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/pwm.c **** 
 171:Generated_Source\PSoC4/pwm.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/pwm.c ****             CyExitCriticalSection(pwm_interruptState);
 173:Generated_Source\PSoC4/pwm.c **** 
 174:Generated_Source\PSoC4/pwm.c ****             /* Clear the FIFO to enable the pwm_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/pwm.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/pwm.c ****             pwm_ClearFIFO();
 177:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
 178:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 179:Generated_Source\PSoC4/pwm.c **** }
 180:Generated_Source\PSoC4/pwm.c **** 
 181:Generated_Source\PSoC4/pwm.c **** 
 182:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Enable
 184:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 185:Generated_Source\PSoC4/pwm.c **** *
 186:Generated_Source\PSoC4/pwm.c **** * Summary:
 187:Generated_Source\PSoC4/pwm.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/pwm.c **** *
 189:Generated_Source\PSoC4/pwm.c **** * Parameters:
 190:Generated_Source\PSoC4/pwm.c **** *  None
 191:Generated_Source\PSoC4/pwm.c **** *
 192:Generated_Source\PSoC4/pwm.c **** * Return:
 193:Generated_Source\PSoC4/pwm.c **** *  None
 194:Generated_Source\PSoC4/pwm.c **** *
 195:Generated_Source\PSoC4/pwm.c **** * Side Effects:
 196:Generated_Source\PSoC4/pwm.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/pwm.c **** *
 198:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/pwm.c **** void pwm_Enable(void) 
 200:Generated_Source\PSoC4/pwm.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:Generated_Source\PSoC4/pwm.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 5


 202:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 203:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE |= pwm_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 206:Generated_Source\PSoC4/pwm.c **** 
 207:Generated_Source\PSoC4/pwm.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 209:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 8023     		mov	r3, #128
  30 0002 024A     		ldr	r2, .L2
 210:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 211:Generated_Source\PSoC4/pwm.c **** }
  31              		.loc 1 211 0
  32              		@ sp needed
 209:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
  33              		.loc 1 209 0
  34 0004 1178     		ldrb	r1, [r2]
  35 0006 0B43     		orr	r3, r1
  36 0008 1370     		strb	r3, [r2]
  37              		.loc 1 211 0
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 73000F40 		.word	1074724979
  43              		.cfi_endproc
  44              	.LFE4:
  45              		.size	pwm_Enable, .-pwm_Enable
  46              		.section	.text.pwm_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	pwm_Stop
  49              		.code	16
  50              		.thumb_func
  51              		.type	pwm_Stop, %function
  52              	pwm_Stop:
  53              	.LFB5:
 212:Generated_Source\PSoC4/pwm.c **** 
 213:Generated_Source\PSoC4/pwm.c **** 
 214:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Stop
 216:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 217:Generated_Source\PSoC4/pwm.c **** *
 218:Generated_Source\PSoC4/pwm.c **** * Summary:
 219:Generated_Source\PSoC4/pwm.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/pwm.c **** *  interrupts.
 221:Generated_Source\PSoC4/pwm.c **** *
 222:Generated_Source\PSoC4/pwm.c **** * Parameters:
 223:Generated_Source\PSoC4/pwm.c **** *  None
 224:Generated_Source\PSoC4/pwm.c **** *
 225:Generated_Source\PSoC4/pwm.c **** * Return:
 226:Generated_Source\PSoC4/pwm.c **** *  None
 227:Generated_Source\PSoC4/pwm.c **** *
 228:Generated_Source\PSoC4/pwm.c **** * Side Effects:
 229:Generated_Source\PSoC4/pwm.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/pwm.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/pwm.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 6


 232:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/pwm.c **** void pwm_Stop(void) 
 234:Generated_Source\PSoC4/pwm.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
 235:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 236:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL &= ((uint8)(~pwm_CTRL_ENABLE));
  56              		.loc 1 236 0
  57 0000 7F23     		mov	r3, #127
  58 0002 024A     		ldr	r2, .L5
 237:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 238:Generated_Source\PSoC4/pwm.c **** 
 239:Generated_Source\PSoC4/pwm.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 241:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE &= ((uint8)(~pwm_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE &= ((uint8)(~pwm_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 244:Generated_Source\PSoC4/pwm.c **** }
  59              		.loc 1 244 0
  60              		@ sp needed
 236:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
  61              		.loc 1 236 0
  62 0004 1178     		ldrb	r1, [r2]
  63 0006 0B40     		and	r3, r1
  64 0008 1370     		strb	r3, [r2]
  65              		.loc 1 244 0
  66 000a 7047     		bx	lr
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 000c 73000F40 		.word	1074724979
  71              		.cfi_endproc
  72              	.LFE5:
  73              		.size	pwm_Stop, .-pwm_Stop
  74              		.section	.text.pwm_WriteCounter,"ax",%progbits
  75              		.align	1
  76              		.global	pwm_WriteCounter
  77              		.code	16
  78              		.thumb_func
  79              		.type	pwm_WriteCounter, %function
  80              	pwm_WriteCounter:
  81              	.LFB6:
 245:Generated_Source\PSoC4/pwm.c **** 
 246:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 247:Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 248:Generated_Source\PSoC4/pwm.c **** 
 249:Generated_Source\PSoC4/pwm.c **** 
 250:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode
 252:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/pwm.c ****         *
 254:Generated_Source\PSoC4/pwm.c ****         * Summary:
 255:Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/pwm.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/pwm.c ****         *
 258:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 259:Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 7


 260:Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/pwm.c ****         *
 262:Generated_Source\PSoC4/pwm.c ****         * Return:
 263:Generated_Source\PSoC4/pwm.c ****         *  None
 264:Generated_Source\PSoC4/pwm.c ****         *
 265:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/pwm.c ****         {
 268:Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 269:Generated_Source\PSoC4/pwm.c **** 
 270:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/pwm.c ****                 #else
 273:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/pwm.c **** 
 276:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/pwm.c **** 
 279:Generated_Source\PSoC4/pwm.c ****             #elif (pwm_UseControl)
 280:Generated_Source\PSoC4/pwm.c **** 
 281:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/pwm.c ****                                                 pwm_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/pwm.c ****                 #else
 285:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/pwm.c **** 
 288:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/pwm.c ****                                                pwm_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/pwm.c ****                 #else
 292:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/pwm.c **** 
 295:Generated_Source\PSoC4/pwm.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~(pwm_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/pwm.c ****                                             pwm_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/pwm.c **** 
 300:Generated_Source\PSoC4/pwm.c ****             #else
 301:Generated_Source\PSoC4/pwm.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 303:Generated_Source\PSoC4/pwm.c ****         }
 304:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 305:Generated_Source\PSoC4/pwm.c **** 
 306:Generated_Source\PSoC4/pwm.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/pwm.c **** 
 308:Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 309:Generated_Source\PSoC4/pwm.c **** 
 310:Generated_Source\PSoC4/pwm.c **** 
 311:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode1
 313:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/pwm.c ****         *
 315:Generated_Source\PSoC4/pwm.c ****         * Summary:
 316:Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 8


 317:Generated_Source\PSoC4/pwm.c ****         *
 318:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 319:Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/pwm.c ****         *
 322:Generated_Source\PSoC4/pwm.c ****         * Return:
 323:Generated_Source\PSoC4/pwm.c ****         *  None
 324:Generated_Source\PSoC4/pwm.c ****         *
 325:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/pwm.c ****         {
 328:Generated_Source\PSoC4/pwm.c ****             #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/pwm.c ****                                            pwm_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/pwm.c ****             #else
 332:Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/pwm.c ****             #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/pwm.c **** 
 335:Generated_Source\PSoC4/pwm.c ****             #if (pwm_UseControl)
 336:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UseControl) */
 339:Generated_Source\PSoC4/pwm.c ****         }
 340:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 341:Generated_Source\PSoC4/pwm.c **** 
 342:Generated_Source\PSoC4/pwm.c **** #if (pwm_CompareMode2SW)
 343:Generated_Source\PSoC4/pwm.c **** 
 344:Generated_Source\PSoC4/pwm.c **** 
 345:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetCompareMode2
 347:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/pwm.c ****     *
 349:Generated_Source\PSoC4/pwm.c ****     * Summary:
 350:Generated_Source\PSoC4/pwm.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/pwm.c ****     *
 352:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 353:Generated_Source\PSoC4/pwm.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/pwm.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/pwm.c ****     *
 356:Generated_Source\PSoC4/pwm.c ****     * Return:
 357:Generated_Source\PSoC4/pwm.c ****     *  None
 358:Generated_Source\PSoC4/pwm.c ****     *
 359:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/pwm.c ****     void pwm_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/pwm.c ****     {
 362:Generated_Source\PSoC4/pwm.c **** 
 363:Generated_Source\PSoC4/pwm.c ****         #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/pwm.c ****                                                  pwm_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/pwm.c ****         #else
 367:Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/pwm.c ****         #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/pwm.c **** 
 370:Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseControl)
 371:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseControl) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 9


 374:Generated_Source\PSoC4/pwm.c ****     }
 375:Generated_Source\PSoC4/pwm.c ****     #endif /*pwm_CompareMode2SW */
 376:Generated_Source\PSoC4/pwm.c **** 
 377:Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/pwm.c **** 
 379:Generated_Source\PSoC4/pwm.c **** 
 380:Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 381:Generated_Source\PSoC4/pwm.c **** 
 382:Generated_Source\PSoC4/pwm.c **** 
 383:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCounter
 385:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/pwm.c ****     *
 387:Generated_Source\PSoC4/pwm.c ****     * Summary:
 388:Generated_Source\PSoC4/pwm.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/pwm.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/pwm.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/pwm.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/pwm.c ****     *
 393:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 394:Generated_Source\PSoC4/pwm.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/pwm.c ****     *
 396:Generated_Source\PSoC4/pwm.c ****     * Return:
 397:Generated_Source\PSoC4/pwm.c ****     *  None
 398:Generated_Source\PSoC4/pwm.c ****     *
 399:Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 400:Generated_Source\PSoC4/pwm.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/pwm.c ****     *
 402:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/pwm.c ****                                        
 405:Generated_Source\PSoC4/pwm.c ****     {
  82              		.loc 1 405 0
  83              		.cfi_startproc
  84              	.LVL0:
 406:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
 407:Generated_Source\PSoC4/pwm.c ****     }
  87              		.loc 1 407 0
  88              		@ sp needed
 406:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_COUNTER_LSB_PTR, counter);
  89              		.loc 1 406 0
  90 0002 1870     		strb	r0, [r3]
  91              		.loc 1 407 0
  92 0004 7047     		bx	lr
  93              	.L9:
  94 0006 C046     		.align	2
  95              	.L8:
  96 0008 03000F40 		.word	1074724867
  97              		.cfi_endproc
  98              	.LFE6:
  99              		.size	pwm_WriteCounter, .-pwm_WriteCounter
 100              		.section	.text.pwm_ReadCounter,"ax",%progbits
 101              		.align	1
 102              		.global	pwm_ReadCounter
 103              		.code	16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 10


 104              		.thumb_func
 105              		.type	pwm_ReadCounter, %function
 106              	pwm_ReadCounter:
 107              	.LFB7:
 408:Generated_Source\PSoC4/pwm.c **** 
 409:Generated_Source\PSoC4/pwm.c **** 
 410:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCounter
 412:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/pwm.c ****     *
 414:Generated_Source\PSoC4/pwm.c ****     * Summary:
 415:Generated_Source\PSoC4/pwm.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/pwm.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/pwm.c ****     *
 418:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 419:Generated_Source\PSoC4/pwm.c ****     *  None
 420:Generated_Source\PSoC4/pwm.c ****     *
 421:Generated_Source\PSoC4/pwm.c ****     * Return:
 422:Generated_Source\PSoC4/pwm.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/pwm.c ****     *
 424:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCounter(void) 
 426:Generated_Source\PSoC4/pwm.c ****     {
 108              		.loc 1 426 0
 109              		.cfi_startproc
 427:Generated_Source\PSoC4/pwm.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/pwm.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/pwm.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/pwm.c ****           (void)CY_GET_REG8(pwm_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 431:Generated_Source\PSoC4/pwm.c **** 
 432:Generated_Source\PSoC4/pwm.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 434:Generated_Source\PSoC4/pwm.c ****     }
 112              		.loc 1 434 0
 113              		@ sp needed
 430:Generated_Source\PSoC4/pwm.c **** 
 114              		.loc 1 430 0
 115 0002 1B78     		ldrb	r3, [r3]
 433:Generated_Source\PSoC4/pwm.c ****     }
 116              		.loc 1 433 0
 117 0004 024B     		ldr	r3, .L11+4
 118 0006 1878     		ldrb	r0, [r3]
 119 0008 C0B2     		uxtb	r0, r0
 120              		.loc 1 434 0
 121 000a 7047     		bx	lr
 122              	.L12:
 123              		.align	2
 124              	.L11:
 125 000c 13000F40 		.word	1074724883
 126 0010 53000F40 		.word	1074724947
 127              		.cfi_endproc
 128              	.LFE7:
 129              		.size	pwm_ReadCounter, .-pwm_ReadCounter
 130              		.section	.text.pwm_ClearFIFO,"ax",%progbits
 131              		.align	1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 11


 132              		.global	pwm_ClearFIFO
 133              		.code	16
 134              		.thumb_func
 135              		.type	pwm_ClearFIFO, %function
 136              	pwm_ClearFIFO:
 137              	.LFB8:
 435:Generated_Source\PSoC4/pwm.c **** 
 436:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus)
 437:Generated_Source\PSoC4/pwm.c **** 
 438:Generated_Source\PSoC4/pwm.c **** 
 439:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_ClearFIFO
 441:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/pwm.c ****         *
 443:Generated_Source\PSoC4/pwm.c ****         * Summary:
 444:Generated_Source\PSoC4/pwm.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/pwm.c ****         *
 446:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 447:Generated_Source\PSoC4/pwm.c ****         *  None
 448:Generated_Source\PSoC4/pwm.c ****         *
 449:Generated_Source\PSoC4/pwm.c ****         * Return:
 450:Generated_Source\PSoC4/pwm.c ****         *  None
 451:Generated_Source\PSoC4/pwm.c ****         *
 452:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/pwm.c ****         void pwm_ClearFIFO(void) 
 454:Generated_Source\PSoC4/pwm.c ****         {
 138              		.loc 1 454 0
 139              		.cfi_startproc
 140              	.L14:
 141              	.LBB14:
 142              	.LBB15:
 455:Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/pwm.c ****             {
 457:Generated_Source\PSoC4/pwm.c ****                 (void)pwm_ReadCapture();
 458:Generated_Source\PSoC4/pwm.c ****             }
 459:Generated_Source\PSoC4/pwm.c ****         }
 460:Generated_Source\PSoC4/pwm.c **** 
 461:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_UseStatus */
 462:Generated_Source\PSoC4/pwm.c **** 
 463:Generated_Source\PSoC4/pwm.c **** #endif /* !pwm_UsingFixedFunction */
 464:Generated_Source\PSoC4/pwm.c **** 
 465:Generated_Source\PSoC4/pwm.c **** 
 466:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_WritePeriod
 468:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 469:Generated_Source\PSoC4/pwm.c **** *
 470:Generated_Source\PSoC4/pwm.c **** * Summary:
 471:Generated_Source\PSoC4/pwm.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/pwm.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/pwm.c **** *
 474:Generated_Source\PSoC4/pwm.c **** * Parameters:
 475:Generated_Source\PSoC4/pwm.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/pwm.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/pwm.c **** *
 478:Generated_Source\PSoC4/pwm.c **** * Return:
 479:Generated_Source\PSoC4/pwm.c **** *  None
 480:Generated_Source\PSoC4/pwm.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 12


 481:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/pwm.c **** void pwm_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/pwm.c **** {
 484:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 485:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG16(pwm_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/pwm.c ****     #else
 487:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_PERIOD_LSB_PTR, period);
 488:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 489:Generated_Source\PSoC4/pwm.c **** }
 490:Generated_Source\PSoC4/pwm.c **** 
 491:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 492:Generated_Source\PSoC4/pwm.c **** 
 493:Generated_Source\PSoC4/pwm.c **** 
 494:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare
 496:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/pwm.c ****     *
 498:Generated_Source\PSoC4/pwm.c ****     * Summary:
 499:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/pwm.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/pwm.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/pwm.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/pwm.c ****     *
 505:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 506:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/pwm.c ****     *
 508:Generated_Source\PSoC4/pwm.c ****     * Return:
 509:Generated_Source\PSoC4/pwm.c ****     *  None
 510:Generated_Source\PSoC4/pwm.c ****     *
 511:Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 512:Generated_Source\PSoC4/pwm.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/pwm.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/pwm.c ****     *
 515:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/pwm.c ****                                        
 518:Generated_Source\PSoC4/pwm.c ****     {
 519:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 520:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/pwm.c ****         #else
 522:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 524:Generated_Source\PSoC4/pwm.c **** 
 525:Generated_Source\PSoC4/pwm.c ****         #if (pwm_PWMMode == pwm__B_PWM__DITHER)
 526:Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 527:Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG16(pwm_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/pwm.c ****             #else
 529:Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG8(pwm_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 531:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_PWMMode == pwm__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/pwm.c ****     }
 533:Generated_Source\PSoC4/pwm.c **** 
 534:Generated_Source\PSoC4/pwm.c **** 
 535:Generated_Source\PSoC4/pwm.c **** #else
 536:Generated_Source\PSoC4/pwm.c **** 
 537:Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 13


 538:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare1
 540:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/pwm.c ****     *
 542:Generated_Source\PSoC4/pwm.c ****     * Summary:
 543:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/pwm.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/pwm.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/pwm.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/pwm.c ****     *
 548:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 549:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/pwm.c ****     *
 551:Generated_Source\PSoC4/pwm.c ****     * Return:
 552:Generated_Source\PSoC4/pwm.c ****     *  None
 553:Generated_Source\PSoC4/pwm.c ****     *
 554:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/pwm.c ****                                         
 557:Generated_Source\PSoC4/pwm.c ****     {
 558:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 559:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/pwm.c ****         #else
 561:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 563:Generated_Source\PSoC4/pwm.c ****     }
 564:Generated_Source\PSoC4/pwm.c **** 
 565:Generated_Source\PSoC4/pwm.c **** 
 566:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare2
 568:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/pwm.c ****     *
 570:Generated_Source\PSoC4/pwm.c ****     * Summary:
 571:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/pwm.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/pwm.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/pwm.c ****     *  mode.
 576:Generated_Source\PSoC4/pwm.c ****     *
 577:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 578:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/pwm.c ****     *
 580:Generated_Source\PSoC4/pwm.c ****     * Return:
 581:Generated_Source\PSoC4/pwm.c ****     *  None
 582:Generated_Source\PSoC4/pwm.c ****     *
 583:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/pwm.c ****                                         
 586:Generated_Source\PSoC4/pwm.c ****     {
 587:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 588:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/pwm.c ****         #else
 590:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 592:Generated_Source\PSoC4/pwm.c ****     }
 593:Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 14


 595:Generated_Source\PSoC4/pwm.c **** #if (pwm_DeadBandUsed)
 596:Generated_Source\PSoC4/pwm.c **** 
 597:Generated_Source\PSoC4/pwm.c **** 
 598:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteDeadTime
 600:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/pwm.c ****     *
 602:Generated_Source\PSoC4/pwm.c ****     * Summary:
 603:Generated_Source\PSoC4/pwm.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/pwm.c ****     *
 605:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 606:Generated_Source\PSoC4/pwm.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/pwm.c ****     *
 608:Generated_Source\PSoC4/pwm.c ****     * Return:
 609:Generated_Source\PSoC4/pwm.c ****     *  None
 610:Generated_Source\PSoC4/pwm.c ****     *
 611:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/pwm.c ****     {
 614:Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 616:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/pwm.c ****         #else
 618:Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/pwm.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/pwm.c ****             pwm_DEADBAND_COUNT &= ((uint8)(~pwm_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/pwm.c **** 
 622:Generated_Source\PSoC4/pwm.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << pwm_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/pwm.c ****                                                     pwm_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/pwm.c ****             #else
 627:Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= deadtime & pwm_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/pwm.c **** 
 630:Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 631:Generated_Source\PSoC4/pwm.c ****     }
 632:Generated_Source\PSoC4/pwm.c **** 
 633:Generated_Source\PSoC4/pwm.c **** 
 634:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadDeadTime
 636:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/pwm.c ****     *
 638:Generated_Source\PSoC4/pwm.c ****     * Summary:
 639:Generated_Source\PSoC4/pwm.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/pwm.c ****     *
 641:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 642:Generated_Source\PSoC4/pwm.c ****     *  None
 643:Generated_Source\PSoC4/pwm.c ****     *
 644:Generated_Source\PSoC4/pwm.c ****     * Return:
 645:Generated_Source\PSoC4/pwm.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/pwm.c ****     *
 647:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/pwm.c ****     {
 650:Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 15


 652:Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/pwm.c ****         #else
 654:Generated_Source\PSoC4/pwm.c **** 
 655:Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/pwm.c ****                 return ((uint8)(((uint8)(pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/pwm.c ****                                                                            pwm_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/pwm.c ****             #else
 660:Generated_Source\PSoC4/pwm.c ****                 return (pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 663:Generated_Source\PSoC4/pwm.c ****     }
 664:Generated_Source\PSoC4/pwm.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/pwm.c **** 
 666:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseStatus || pwm_UsingFixedFunction)
 667:Generated_Source\PSoC4/pwm.c **** 
 668:Generated_Source\PSoC4/pwm.c **** 
 669:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetInterruptMode
 671:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/pwm.c ****     *
 673:Generated_Source\PSoC4/pwm.c ****     * Summary:
 674:Generated_Source\PSoC4/pwm.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/pwm.c ****     *  source status register.
 676:Generated_Source\PSoC4/pwm.c ****     *
 677:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 678:Generated_Source\PSoC4/pwm.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/pwm.c ****     *
 680:Generated_Source\PSoC4/pwm.c ****     * Return:
 681:Generated_Source\PSoC4/pwm.c ****     *  None
 682:Generated_Source\PSoC4/pwm.c ****     *
 683:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/pwm.c ****     void pwm_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/pwm.c ****     {
 686:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC4/pwm.c ****     }
 688:Generated_Source\PSoC4/pwm.c **** 
 689:Generated_Source\PSoC4/pwm.c **** 
 690:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadStatusRegister
 692:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/pwm.c ****     *
 694:Generated_Source\PSoC4/pwm.c ****     * Summary:
 695:Generated_Source\PSoC4/pwm.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/pwm.c ****     *
 697:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 698:Generated_Source\PSoC4/pwm.c ****     *  None
 699:Generated_Source\PSoC4/pwm.c ****     *
 700:Generated_Source\PSoC4/pwm.c ****     * Return:
 701:Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/pwm.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/pwm.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/pwm.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/pwm.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/pwm.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/pwm.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/pwm.c ****     *  [0]   : Compare output 1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 16


 709:Generated_Source\PSoC4/pwm.c ****     *
 710:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/pwm.c ****     {
 713:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_STATUS_PTR));
 143              		.loc 1 713 0
 144 0000 034B     		ldr	r3, .L18
 145 0002 1B78     		ldrb	r3, [r3]
 146              	.LBE15:
 147              	.LBE14:
 455:Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 148              		.loc 1 455 0
 149 0004 DB06     		lsl	r3, r3, #27
 150 0006 02D5     		bpl	.L17
 151              	.LBB16:
 152              	.LBB17:
 714:Generated_Source\PSoC4/pwm.c ****     }
 715:Generated_Source\PSoC4/pwm.c **** 
 716:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 717:Generated_Source\PSoC4/pwm.c **** 
 718:Generated_Source\PSoC4/pwm.c **** 
 719:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseControl)
 720:Generated_Source\PSoC4/pwm.c **** 
 721:Generated_Source\PSoC4/pwm.c **** 
 722:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadControlRegister
 724:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/pwm.c ****     *
 726:Generated_Source\PSoC4/pwm.c ****     * Summary:
 727:Generated_Source\PSoC4/pwm.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/pwm.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/pwm.c ****     *
 730:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 731:Generated_Source\PSoC4/pwm.c ****     *  None
 732:Generated_Source\PSoC4/pwm.c ****     *
 733:Generated_Source\PSoC4/pwm.c ****     * Return:
 734:Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/pwm.c ****     *
 736:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/pwm.c ****     {
 739:Generated_Source\PSoC4/pwm.c ****         uint8 result;
 740:Generated_Source\PSoC4/pwm.c **** 
 741:Generated_Source\PSoC4/pwm.c ****         result = CY_GET_REG8(pwm_CONTROL_PTR);
 742:Generated_Source\PSoC4/pwm.c ****         return (result);
 743:Generated_Source\PSoC4/pwm.c ****     }
 744:Generated_Source\PSoC4/pwm.c **** 
 745:Generated_Source\PSoC4/pwm.c **** 
 746:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteControlRegister
 748:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/pwm.c ****     *
 750:Generated_Source\PSoC4/pwm.c ****     * Summary:
 751:Generated_Source\PSoC4/pwm.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/pwm.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/pwm.c ****     *
 754:Generated_Source\PSoC4/pwm.c ****     * Parameters:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 17


 755:Generated_Source\PSoC4/pwm.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/pwm.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/pwm.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/pwm.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/pwm.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/pwm.c ****     *
 761:Generated_Source\PSoC4/pwm.c ****     * Return:
 762:Generated_Source\PSoC4/pwm.c ****     *  None
 763:Generated_Source\PSoC4/pwm.c ****     *
 764:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/pwm.c ****     {
 767:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_CONTROL_PTR, control);
 768:Generated_Source\PSoC4/pwm.c ****     }
 769:Generated_Source\PSoC4/pwm.c **** 
 770:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseControl) */
 771:Generated_Source\PSoC4/pwm.c **** 
 772:Generated_Source\PSoC4/pwm.c **** 
 773:Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 774:Generated_Source\PSoC4/pwm.c **** 
 775:Generated_Source\PSoC4/pwm.c **** 
 776:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCapture
 778:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/pwm.c ****     *
 780:Generated_Source\PSoC4/pwm.c ****     * Summary:
 781:Generated_Source\PSoC4/pwm.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/pwm.c ****     *
 783:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 784:Generated_Source\PSoC4/pwm.c ****     *  None
 785:Generated_Source\PSoC4/pwm.c ****     *
 786:Generated_Source\PSoC4/pwm.c ****     * Return:
 787:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/pwm.c ****     *
 789:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCapture(void) 
 791:Generated_Source\PSoC4/pwm.c ****     {
 792:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 153              		.loc 1 792 0
 154 0008 024B     		ldr	r3, .L18+4
 155 000a 1B78     		ldrb	r3, [r3]
 156 000c F8E7     		b	.L14
 157              	.L17:
 158              	.LBE17:
 159              	.LBE16:
 459:Generated_Source\PSoC4/pwm.c **** 
 160              		.loc 1 459 0
 161              		@ sp needed
 162 000e 7047     		bx	lr
 163              	.L19:
 164              		.align	2
 165              	.L18:
 166 0010 63000F40 		.word	1074724963
 167 0014 53000F40 		.word	1074724947
 168              		.cfi_endproc
 169              	.LFE8:
 170              		.size	pwm_ClearFIFO, .-pwm_ClearFIFO
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 18


 171              		.section	.text.pwm_Init,"ax",%progbits
 172              		.align	1
 173              		.global	pwm_Init
 174              		.code	16
 175              		.thumb_func
 176              		.type	pwm_Init, %function
 177              	pwm_Init:
 178              	.LFB3:
  85:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
 179              		.loc 1 85 0
 180              		.cfi_startproc
 117:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 181              		.loc 1 117 0
 182 0000 3F21     		mov	r1, #63
  85:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
 183              		.loc 1 85 0
 184 0002 10B5     		push	{r4, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 188              		.loc 1 117 0
 189 0004 104A     		ldr	r2, .L21
 126:Generated_Source\PSoC4/pwm.c ****         #else /* (pwm_Resolution == 16)*/
 190              		.loc 1 126 0
 191 0006 114C     		ldr	r4, .L21+4
 117:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 192              		.loc 1 117 0
 193 0008 1378     		ldrb	r3, [r2]
 194              	.LVL1:
 179:Generated_Source\PSoC4/pwm.c **** 
 195              		.loc 1 179 0
 196              		@ sp needed
 117:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 197              		.loc 1 117 0
 198 000a 8B43     		bic	r3, r1
 199              	.LVL2:
 119:Generated_Source\PSoC4/pwm.c ****                                    pwm_DEFAULT_COMPARE1_MODE;
 200              		.loc 1 119 0
 201 000c 3639     		sub	r1, r1, #54
 202 000e 0B43     		orr	r3, r1
 203 0010 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/pwm.c ****         #else /* (pwm_Resolution == 16)*/
 204              		.loc 1 126 0
 205 0012 0122     		mov	r2, #1
 206 0014 2378     		ldrb	r3, [r4]
 207 0016 1343     		orr	r3, r2
 208 0018 2370     		strb	r3, [r4]
 209              	.LVL3:
 210              	.LBB18:
 211              	.LBB19:
 406:Generated_Source\PSoC4/pwm.c ****     }
 212              		.loc 1 406 0
 213 001a FF23     		mov	r3, #255
 214 001c 0C4A     		ldr	r2, .L21+8
 215 001e 1370     		strb	r3, [r2]
 216              	.LVL4:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 19


 217              	.LBE19:
 218              	.LBE18:
 219              	.LBB20:
 220              	.LBB21:
 487:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 221              		.loc 1 487 0
 222 0020 0C4A     		ldr	r2, .L21+12
 223 0022 1370     		strb	r3, [r2]
 224              	.LVL5:
 225              	.LBE21:
 226              	.LBE20:
 227              	.LBB22:
 228              	.LBB23:
 522:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 229              		.loc 1 522 0
 230 0024 7F22     		mov	r2, #127
 231 0026 0C4B     		ldr	r3, .L21+16
 232 0028 1A70     		strb	r2, [r3]
 233              	.LVL6:
 234              	.LBE23:
 235              	.LBE22:
 236              	.LBB24:
 237              	.LBB25:
 686:Generated_Source\PSoC4/pwm.c ****     }
 238              		.loc 1 686 0
 239 002a 0022     		mov	r2, #0
 240 002c 0B4B     		ldr	r3, .L21+20
 241 002e 1A70     		strb	r2, [r3]
 242              	.LBE25:
 243              	.LBE24:
 167:Generated_Source\PSoC4/pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 244              		.loc 1 167 0
 245 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 246              	.LVL7:
 169:Generated_Source\PSoC4/pwm.c **** 
 247              		.loc 1 169 0
 248 0034 1022     		mov	r2, #16
 249 0036 2378     		ldrb	r3, [r4]
 250 0038 1343     		orr	r3, r2
 251 003a 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/pwm.c **** 
 252              		.loc 1 172 0
 253 003c FFF7FEFF 		bl	CyExitCriticalSection
 254              	.LVL8:
 176:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
 255              		.loc 1 176 0
 256 0040 FFF7FEFF 		bl	pwm_ClearFIFO
 257              	.LVL9:
 179:Generated_Source\PSoC4/pwm.c **** 
 258              		.loc 1 179 0
 259 0044 10BD     		pop	{r4, pc}
 260              	.L22:
 261 0046 C046     		.align	2
 262              	.L21:
 263 0048 73000F40 		.word	1074724979
 264 004c 93000F40 		.word	1074725011
 265 0050 03000F40 		.word	1074724867
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 20


 266 0054 43000F40 		.word	1074724931
 267 0058 23000F40 		.word	1074724899
 268 005c 83000F40 		.word	1074724995
 269              		.cfi_endproc
 270              	.LFE3:
 271              		.size	pwm_Init, .-pwm_Init
 272              		.section	.text.pwm_Start,"ax",%progbits
 273              		.align	1
 274              		.global	pwm_Start
 275              		.code	16
 276              		.thumb_func
 277              		.type	pwm_Start, %function
 278              	pwm_Start:
 279              	.LFB2:
  56:Generated_Source\PSoC4/pwm.c ****     /* If not Initialized then initialize all required hardware and software */
 280              		.loc 1 56 0
 281              		.cfi_startproc
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/pwm.c ****     {
 286              		.loc 1 58 0
 287 0002 054C     		ldr	r4, .L25
 288 0004 2378     		ldrb	r3, [r4]
 289 0006 002B     		cmp	r3, #0
 290 0008 03D1     		bne	.L24
  60:Generated_Source\PSoC4/pwm.c ****         pwm_initVar = 1u;
 291              		.loc 1 60 0
 292 000a FFF7FEFF 		bl	pwm_Init
 293              	.LVL10:
  61:Generated_Source\PSoC4/pwm.c ****     }
 294              		.loc 1 61 0
 295 000e 0123     		mov	r3, #1
 296 0010 2370     		strb	r3, [r4]
 297              	.L24:
  63:Generated_Source\PSoC4/pwm.c **** 
 298              		.loc 1 63 0
 299 0012 FFF7FEFF 		bl	pwm_Enable
 300              	.LVL11:
  65:Generated_Source\PSoC4/pwm.c **** 
 301              		.loc 1 65 0
 302              		@ sp needed
 303 0016 10BD     		pop	{r4, pc}
 304              	.L26:
 305              		.align	2
 306              	.L25:
 307 0018 00000000 		.word	.LANCHOR0
 308              		.cfi_endproc
 309              	.LFE2:
 310              		.size	pwm_Start, .-pwm_Start
 311              		.section	.text.pwm_WritePeriod,"ax",%progbits
 312              		.align	1
 313              		.global	pwm_WritePeriod
 314              		.code	16
 315              		.thumb_func
 316              		.type	pwm_WritePeriod, %function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 21


 317              	pwm_WritePeriod:
 318              	.LFB9:
 483:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 319              		.loc 1 483 0
 320              		.cfi_startproc
 321              	.LVL12:
 487:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 322              		.loc 1 487 0
 323 0000 014B     		ldr	r3, .L28
 489:Generated_Source\PSoC4/pwm.c **** 
 324              		.loc 1 489 0
 325              		@ sp needed
 487:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 326              		.loc 1 487 0
 327 0002 1870     		strb	r0, [r3]
 489:Generated_Source\PSoC4/pwm.c **** 
 328              		.loc 1 489 0
 329 0004 7047     		bx	lr
 330              	.L29:
 331 0006 C046     		.align	2
 332              	.L28:
 333 0008 43000F40 		.word	1074724931
 334              		.cfi_endproc
 335              	.LFE9:
 336              		.size	pwm_WritePeriod, .-pwm_WritePeriod
 337              		.section	.text.pwm_WriteCompare,"ax",%progbits
 338              		.align	1
 339              		.global	pwm_WriteCompare
 340              		.code	16
 341              		.thumb_func
 342              		.type	pwm_WriteCompare, %function
 343              	pwm_WriteCompare:
 344              	.LFB10:
 518:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 345              		.loc 1 518 0
 346              		.cfi_startproc
 347              	.LVL13:
 522:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 348              		.loc 1 522 0
 349 0000 014B     		ldr	r3, .L31
 532:Generated_Source\PSoC4/pwm.c **** 
 350              		.loc 1 532 0
 351              		@ sp needed
 522:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 352              		.loc 1 522 0
 353 0002 1870     		strb	r0, [r3]
 532:Generated_Source\PSoC4/pwm.c **** 
 354              		.loc 1 532 0
 355 0004 7047     		bx	lr
 356              	.L32:
 357 0006 C046     		.align	2
 358              	.L31:
 359 0008 23000F40 		.word	1074724899
 360              		.cfi_endproc
 361              	.LFE10:
 362              		.size	pwm_WriteCompare, .-pwm_WriteCompare
 363              		.section	.text.pwm_SetInterruptMode,"ax",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 22


 364              		.align	1
 365              		.global	pwm_SetInterruptMode
 366              		.code	16
 367              		.thumb_func
 368              		.type	pwm_SetInterruptMode, %function
 369              	pwm_SetInterruptMode:
 370              	.LFB11:
 685:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_STATUS_MASK_PTR, interruptMode);
 371              		.loc 1 685 0
 372              		.cfi_startproc
 373              	.LVL14:
 686:Generated_Source\PSoC4/pwm.c ****     }
 374              		.loc 1 686 0
 375 0000 014B     		ldr	r3, .L34
 687:Generated_Source\PSoC4/pwm.c **** 
 376              		.loc 1 687 0
 377              		@ sp needed
 686:Generated_Source\PSoC4/pwm.c ****     }
 378              		.loc 1 686 0
 379 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/pwm.c **** 
 380              		.loc 1 687 0
 381 0004 7047     		bx	lr
 382              	.L35:
 383 0006 C046     		.align	2
 384              	.L34:
 385 0008 83000F40 		.word	1074724995
 386              		.cfi_endproc
 387              	.LFE11:
 388              		.size	pwm_SetInterruptMode, .-pwm_SetInterruptMode
 389              		.section	.text.pwm_ReadStatusRegister,"ax",%progbits
 390              		.align	1
 391              		.global	pwm_ReadStatusRegister
 392              		.code	16
 393              		.thumb_func
 394              		.type	pwm_ReadStatusRegister, %function
 395              	pwm_ReadStatusRegister:
 396              	.LFB12:
 712:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_STATUS_PTR));
 397              		.loc 1 712 0
 398              		.cfi_startproc
 713:Generated_Source\PSoC4/pwm.c ****     }
 399              		.loc 1 713 0
 400 0000 014B     		ldr	r3, .L37
 714:Generated_Source\PSoC4/pwm.c **** 
 401              		.loc 1 714 0
 402              		@ sp needed
 713:Generated_Source\PSoC4/pwm.c ****     }
 403              		.loc 1 713 0
 404 0002 1878     		ldrb	r0, [r3]
 405 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/pwm.c **** 
 406              		.loc 1 714 0
 407 0006 7047     		bx	lr
 408              	.L38:
 409              		.align	2
 410              	.L37:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 23


 411 0008 63000F40 		.word	1074724963
 412              		.cfi_endproc
 413              	.LFE12:
 414              		.size	pwm_ReadStatusRegister, .-pwm_ReadStatusRegister
 415              		.section	.text.pwm_ReadControlRegister,"ax",%progbits
 416              		.align	1
 417              		.global	pwm_ReadControlRegister
 418              		.code	16
 419              		.thumb_func
 420              		.type	pwm_ReadControlRegister, %function
 421              	pwm_ReadControlRegister:
 422              	.LFB13:
 738:Generated_Source\PSoC4/pwm.c ****         uint8 result;
 423              		.loc 1 738 0
 424              		.cfi_startproc
 741:Generated_Source\PSoC4/pwm.c ****         return (result);
 425              		.loc 1 741 0
 426 0000 014B     		ldr	r3, .L40
 743:Generated_Source\PSoC4/pwm.c **** 
 427              		.loc 1 743 0
 428              		@ sp needed
 741:Generated_Source\PSoC4/pwm.c ****         return (result);
 429              		.loc 1 741 0
 430 0002 1878     		ldrb	r0, [r3]
 431 0004 C0B2     		uxtb	r0, r0
 432              	.LVL15:
 743:Generated_Source\PSoC4/pwm.c **** 
 433              		.loc 1 743 0
 434 0006 7047     		bx	lr
 435              	.L41:
 436              		.align	2
 437              	.L40:
 438 0008 73000F40 		.word	1074724979
 439              		.cfi_endproc
 440              	.LFE13:
 441              		.size	pwm_ReadControlRegister, .-pwm_ReadControlRegister
 442              		.section	.text.pwm_WriteControlRegister,"ax",%progbits
 443              		.align	1
 444              		.global	pwm_WriteControlRegister
 445              		.code	16
 446              		.thumb_func
 447              		.type	pwm_WriteControlRegister, %function
 448              	pwm_WriteControlRegister:
 449              	.LFB14:
 766:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_CONTROL_PTR, control);
 450              		.loc 1 766 0
 451              		.cfi_startproc
 452              	.LVL16:
 767:Generated_Source\PSoC4/pwm.c ****     }
 453              		.loc 1 767 0
 454 0000 014B     		ldr	r3, .L43
 768:Generated_Source\PSoC4/pwm.c **** 
 455              		.loc 1 768 0
 456              		@ sp needed
 767:Generated_Source\PSoC4/pwm.c ****     }
 457              		.loc 1 767 0
 458 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 24


 768:Generated_Source\PSoC4/pwm.c **** 
 459              		.loc 1 768 0
 460 0004 7047     		bx	lr
 461              	.L44:
 462 0006 C046     		.align	2
 463              	.L43:
 464 0008 73000F40 		.word	1074724979
 465              		.cfi_endproc
 466              	.LFE14:
 467              		.size	pwm_WriteControlRegister, .-pwm_WriteControlRegister
 468              		.section	.text.pwm_ReadCapture,"ax",%progbits
 469              		.align	1
 470              		.global	pwm_ReadCapture
 471              		.code	16
 472              		.thumb_func
 473              		.type	pwm_ReadCapture, %function
 474              	pwm_ReadCapture:
 475              	.LFB15:
 791:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 476              		.loc 1 791 0
 477              		.cfi_startproc
 478              		.loc 1 792 0
 479 0000 014B     		ldr	r3, .L46
 793:Generated_Source\PSoC4/pwm.c ****     }
 480              		.loc 1 793 0
 481              		@ sp needed
 792:Generated_Source\PSoC4/pwm.c ****     }
 482              		.loc 1 792 0
 483 0002 1878     		ldrb	r0, [r3]
 484 0004 C0B2     		uxtb	r0, r0
 485              		.loc 1 793 0
 486 0006 7047     		bx	lr
 487              	.L47:
 488              		.align	2
 489              	.L46:
 490 0008 53000F40 		.word	1074724947
 491              		.cfi_endproc
 492              	.LFE15:
 493              		.size	pwm_ReadCapture, .-pwm_ReadCapture
 494              		.section	.text.pwm_ReadCompare,"ax",%progbits
 495              		.align	1
 496              		.global	pwm_ReadCompare
 497              		.code	16
 498              		.thumb_func
 499              		.type	pwm_ReadCompare, %function
 500              	pwm_ReadCompare:
 501              	.LFB16:
 794:Generated_Source\PSoC4/pwm.c **** 
 795:Generated_Source\PSoC4/pwm.c **** #endif /* (!pwm_UsingFixedFunction) */
 796:Generated_Source\PSoC4/pwm.c **** 
 797:Generated_Source\PSoC4/pwm.c **** 
 798:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 799:Generated_Source\PSoC4/pwm.c **** 
 800:Generated_Source\PSoC4/pwm.c **** 
 801:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare
 803:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 25


 804:Generated_Source\PSoC4/pwm.c ****     *
 805:Generated_Source\PSoC4/pwm.c ****     * Summary:
 806:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/pwm.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/pwm.c ****     *
 809:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 810:Generated_Source\PSoC4/pwm.c ****     *  None
 811:Generated_Source\PSoC4/pwm.c ****     *
 812:Generated_Source\PSoC4/pwm.c ****     * Return:
 813:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/pwm.c ****     *
 815:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare(void) 
 817:Generated_Source\PSoC4/pwm.c ****     {
 502              		.loc 1 817 0
 503              		.cfi_startproc
 818:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 819:Generated_Source\PSoC4/pwm.c ****             return ((uint8)CY_GET_REG16(pwm_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/pwm.c ****         #else
 821:Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_COMPARE1_LSB_PTR));
 504              		.loc 1 821 0
 505 0000 014B     		ldr	r3, .L49
 822:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 823:Generated_Source\PSoC4/pwm.c ****     }
 506              		.loc 1 823 0
 507              		@ sp needed
 821:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 508              		.loc 1 821 0
 509 0002 1878     		ldrb	r0, [r3]
 510 0004 C0B2     		uxtb	r0, r0
 511              		.loc 1 823 0
 512 0006 7047     		bx	lr
 513              	.L50:
 514              		.align	2
 515              	.L49:
 516 0008 23000F40 		.word	1074724899
 517              		.cfi_endproc
 518              	.LFE16:
 519              		.size	pwm_ReadCompare, .-pwm_ReadCompare
 520              		.section	.text.pwm_ReadPeriod,"ax",%progbits
 521              		.align	1
 522              		.global	pwm_ReadPeriod
 523              		.code	16
 524              		.thumb_func
 525              		.type	pwm_ReadPeriod, %function
 526              	pwm_ReadPeriod:
 527              	.LFB17:
 824:Generated_Source\PSoC4/pwm.c **** 
 825:Generated_Source\PSoC4/pwm.c **** #else
 826:Generated_Source\PSoC4/pwm.c **** 
 827:Generated_Source\PSoC4/pwm.c **** 
 828:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare1
 830:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/pwm.c ****     *
 832:Generated_Source\PSoC4/pwm.c ****     * Summary:
 833:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare1 output.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 26


 834:Generated_Source\PSoC4/pwm.c ****     *
 835:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 836:Generated_Source\PSoC4/pwm.c ****     *  None
 837:Generated_Source\PSoC4/pwm.c ****     *
 838:Generated_Source\PSoC4/pwm.c ****     * Return:
 839:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/pwm.c ****     *
 841:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare1(void) 
 843:Generated_Source\PSoC4/pwm.c ****     {
 844:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/pwm.c ****     }
 846:Generated_Source\PSoC4/pwm.c **** 
 847:Generated_Source\PSoC4/pwm.c **** 
 848:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare2
 850:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/pwm.c ****     *
 852:Generated_Source\PSoC4/pwm.c ****     * Summary:
 853:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/pwm.c ****     *
 855:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 856:Generated_Source\PSoC4/pwm.c ****     *  None
 857:Generated_Source\PSoC4/pwm.c ****     *
 858:Generated_Source\PSoC4/pwm.c ****     * Return:
 859:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/pwm.c ****     *
 861:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare2(void) 
 863:Generated_Source\PSoC4/pwm.c ****     {
 864:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/pwm.c ****     }
 866:Generated_Source\PSoC4/pwm.c **** 
 867:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseOneCompareMode) */
 868:Generated_Source\PSoC4/pwm.c **** 
 869:Generated_Source\PSoC4/pwm.c **** 
 870:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_ReadPeriod
 872:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 873:Generated_Source\PSoC4/pwm.c **** *
 874:Generated_Source\PSoC4/pwm.c **** * Summary:
 875:Generated_Source\PSoC4/pwm.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/pwm.c **** *
 877:Generated_Source\PSoC4/pwm.c **** * Parameters:
 878:Generated_Source\PSoC4/pwm.c **** *  None
 879:Generated_Source\PSoC4/pwm.c **** *
 880:Generated_Source\PSoC4/pwm.c **** * Return:
 881:Generated_Source\PSoC4/pwm.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/pwm.c **** *
 883:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/pwm.c **** uint8 pwm_ReadPeriod(void) 
 885:Generated_Source\PSoC4/pwm.c **** {
 528              		.loc 1 885 0
 529              		.cfi_startproc
 886:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 887:Generated_Source\PSoC4/pwm.c ****         return ((uint8)CY_GET_REG16(pwm_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/pwm.c ****     #else
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 27


 889:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_PERIOD_LSB_PTR));
 530              		.loc 1 889 0
 531 0000 014B     		ldr	r3, .L52
 890:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 891:Generated_Source\PSoC4/pwm.c **** }
 532              		.loc 1 891 0
 533              		@ sp needed
 889:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 534              		.loc 1 889 0
 535 0002 1878     		ldrb	r0, [r3]
 536 0004 C0B2     		uxtb	r0, r0
 537              		.loc 1 891 0
 538 0006 7047     		bx	lr
 539              	.L53:
 540              		.align	2
 541              	.L52:
 542 0008 43000F40 		.word	1074724931
 543              		.cfi_endproc
 544              	.LFE17:
 545              		.size	pwm_ReadPeriod, .-pwm_ReadPeriod
 546              		.global	pwm_initVar
 547              		.bss
 548              		.set	.LANCHOR0,. + 0
 549              		.type	pwm_initVar, %object
 550              		.size	pwm_initVar, 1
 551              	pwm_initVar:
 552 0000 00       		.space	1
 553              		.text
 554              	.Letext0:
 555              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 556              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 557              		.section	.debug_info,"",%progbits
 558              	.Ldebug_info0:
 559 0000 9E030000 		.4byte	0x39e
 560 0004 0400     		.2byte	0x4
 561 0006 00000000 		.4byte	.Ldebug_abbrev0
 562 000a 04       		.byte	0x4
 563 000b 01       		.uleb128 0x1
 564 000c 5B000000 		.4byte	.LASF38
 565 0010 01       		.byte	0x1
 566 0011 19020000 		.4byte	.LASF39
 567 0015 00000000 		.4byte	.LASF40
 568 0019 00000000 		.4byte	.Ldebug_ranges0+0
 569 001d 00000000 		.4byte	0
 570 0021 00000000 		.4byte	.Ldebug_line0
 571 0025 02       		.uleb128 0x2
 572 0026 01       		.byte	0x1
 573 0027 06       		.byte	0x6
 574 0028 11030000 		.4byte	.LASF0
 575 002c 02       		.uleb128 0x2
 576 002d 01       		.byte	0x1
 577 002e 08       		.byte	0x8
 578 002f 96010000 		.4byte	.LASF1
 579 0033 02       		.uleb128 0x2
 580 0034 02       		.byte	0x2
 581 0035 05       		.byte	0x5
 582 0036 C0020000 		.4byte	.LASF2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 28


 583 003a 02       		.uleb128 0x2
 584 003b 02       		.byte	0x2
 585 003c 07       		.byte	0x7
 586 003d 00010000 		.4byte	.LASF3
 587 0041 02       		.uleb128 0x2
 588 0042 04       		.byte	0x4
 589 0043 05       		.byte	0x5
 590 0044 F9020000 		.4byte	.LASF4
 591 0048 02       		.uleb128 0x2
 592 0049 04       		.byte	0x4
 593 004a 07       		.byte	0x7
 594 004b A9010000 		.4byte	.LASF5
 595 004f 02       		.uleb128 0x2
 596 0050 08       		.byte	0x8
 597 0051 05       		.byte	0x5
 598 0052 8B020000 		.4byte	.LASF6
 599 0056 02       		.uleb128 0x2
 600 0057 08       		.byte	0x8
 601 0058 07       		.byte	0x7
 602 0059 6E010000 		.4byte	.LASF7
 603 005d 03       		.uleb128 0x3
 604 005e 04       		.byte	0x4
 605 005f 05       		.byte	0x5
 606 0060 696E7400 		.ascii	"int\000"
 607 0064 02       		.uleb128 0x2
 608 0065 04       		.byte	0x4
 609 0066 07       		.byte	0x7
 610 0067 0C020000 		.4byte	.LASF8
 611 006b 04       		.uleb128 0x4
 612 006c C7010000 		.4byte	.LASF12
 613 0070 02       		.byte	0x2
 614 0071 9801     		.2byte	0x198
 615 0073 2C000000 		.4byte	0x2c
 616 0077 02       		.uleb128 0x2
 617 0078 04       		.byte	0x4
 618 0079 04       		.byte	0x4
 619 007a 60010000 		.4byte	.LASF9
 620 007e 02       		.uleb128 0x2
 621 007f 08       		.byte	0x8
 622 0080 04       		.byte	0x4
 623 0081 EE010000 		.4byte	.LASF10
 624 0085 02       		.uleb128 0x2
 625 0086 01       		.byte	0x1
 626 0087 08       		.byte	0x8
 627 0088 02030000 		.4byte	.LASF11
 628 008c 04       		.uleb128 0x4
 629 008d A4010000 		.4byte	.LASF13
 630 0091 02       		.byte	0x2
 631 0092 4202     		.2byte	0x242
 632 0094 98000000 		.4byte	0x98
 633 0098 05       		.uleb128 0x5
 634 0099 6B000000 		.4byte	0x6b
 635 009d 02       		.uleb128 0x2
 636 009e 04       		.byte	0x4
 637 009f 07       		.byte	0x7
 638 00a0 82020000 		.4byte	.LASF14
 639 00a4 06       		.uleb128 0x6
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 29


 640 00a5 50010000 		.4byte	.LASF15
 641 00a9 01       		.byte	0x1
 642 00aa 1603     		.2byte	0x316
 643 00ac 6B000000 		.4byte	0x6b
 644 00b0 01       		.byte	0x1
 645 00b1 06       		.uleb128 0x6
 646 00b2 21010000 		.4byte	.LASF16
 647 00b6 01       		.byte	0x1
 648 00b7 C702     		.2byte	0x2c7
 649 00b9 6B000000 		.4byte	0x6b
 650 00bd 01       		.byte	0x1
 651 00be 07       		.uleb128 0x7
 652 00bf 53020000 		.4byte	.LASF17
 653 00c3 01       		.byte	0x1
 654 00c4 9301     		.2byte	0x193
 655 00c6 01       		.byte	0x1
 656 00c7 D8000000 		.4byte	0xd8
 657 00cb 08       		.uleb128 0x8
 658 00cc 66010000 		.4byte	.LASF19
 659 00d0 01       		.byte	0x1
 660 00d1 9301     		.2byte	0x193
 661 00d3 6B000000 		.4byte	0x6b
 662 00d7 00       		.byte	0
 663 00d8 07       		.uleb128 0x7
 664 00d9 99020000 		.4byte	.LASF18
 665 00dd 01       		.byte	0x1
 666 00de E201     		.2byte	0x1e2
 667 00e0 01       		.byte	0x1
 668 00e1 F2000000 		.4byte	0xf2
 669 00e5 08       		.uleb128 0x8
 670 00e6 F9000000 		.4byte	.LASF20
 671 00ea 01       		.byte	0x1
 672 00eb E201     		.2byte	0x1e2
 673 00ed 6B000000 		.4byte	0x6b
 674 00f1 00       		.byte	0
 675 00f2 07       		.uleb128 0x7
 676 00f3 85010000 		.4byte	.LASF21
 677 00f7 01       		.byte	0x1
 678 00f8 0402     		.2byte	0x204
 679 00fa 01       		.byte	0x1
 680 00fb 0C010000 		.4byte	0x10c
 681 00ff 08       		.uleb128 0x8
 682 0100 1D030000 		.4byte	.LASF22
 683 0104 01       		.byte	0x1
 684 0105 0402     		.2byte	0x204
 685 0107 6B000000 		.4byte	0x6b
 686 010b 00       		.byte	0
 687 010c 07       		.uleb128 0x7
 688 010d E4020000 		.4byte	.LASF23
 689 0111 01       		.byte	0x1
 690 0112 AC02     		.2byte	0x2ac
 691 0114 01       		.byte	0x1
 692 0115 26010000 		.4byte	0x126
 693 0119 08       		.uleb128 0x8
 694 011a A9020000 		.4byte	.LASF24
 695 011e 01       		.byte	0x1
 696 011f AC02     		.2byte	0x2ac
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 30


 697 0121 6B000000 		.4byte	0x6b
 698 0125 00       		.byte	0
 699 0126 09       		.uleb128 0x9
 700 0127 CA020000 		.4byte	.LASF25
 701 012b 01       		.byte	0x1
 702 012c C7       		.byte	0xc7
 703 012d 00000000 		.4byte	.LFB4
 704 0131 10000000 		.4byte	.LFE4-.LFB4
 705 0135 01       		.uleb128 0x1
 706 0136 9C       		.byte	0x9c
 707 0137 09       		.uleb128 0x9
 708 0138 B7020000 		.4byte	.LASF26
 709 013c 01       		.byte	0x1
 710 013d E9       		.byte	0xe9
 711 013e 00000000 		.4byte	.LFB5
 712 0142 10000000 		.4byte	.LFE5-.LFB5
 713 0146 01       		.uleb128 0x1
 714 0147 9C       		.byte	0x9c
 715 0148 0A       		.uleb128 0xa
 716 0149 BE000000 		.4byte	0xbe
 717 014d 00000000 		.4byte	.LFB6
 718 0151 0C000000 		.4byte	.LFE6-.LFB6
 719 0155 01       		.uleb128 0x1
 720 0156 9C       		.byte	0x9c
 721 0157 63010000 		.4byte	0x163
 722 015b 0B       		.uleb128 0xb
 723 015c CB000000 		.4byte	0xcb
 724 0160 01       		.uleb128 0x1
 725 0161 50       		.byte	0x50
 726 0162 00       		.byte	0
 727 0163 0C       		.uleb128 0xc
 728 0164 D5010000 		.4byte	.LASF34
 729 0168 01       		.byte	0x1
 730 0169 A901     		.2byte	0x1a9
 731 016b 6B000000 		.4byte	0x6b
 732 016f 00000000 		.4byte	.LFB7
 733 0173 14000000 		.4byte	.LFE7-.LFB7
 734 0177 01       		.uleb128 0x1
 735 0178 9C       		.byte	0x9c
 736 0179 0D       		.uleb128 0xd
 737 017a 13010000 		.4byte	.LASF27
 738 017e 01       		.byte	0x1
 739 017f C501     		.2byte	0x1c5
 740 0181 00000000 		.4byte	.LFB8
 741 0185 18000000 		.4byte	.LFE8-.LFB8
 742 0189 01       		.uleb128 0x1
 743 018a 9C       		.byte	0x9c
 744 018b B0010000 		.4byte	0x1b0
 745 018f 0E       		.uleb128 0xe
 746 0190 B1000000 		.4byte	0xb1
 747 0194 00000000 		.4byte	.LBB14
 748 0198 04000000 		.4byte	.LBE14-.LBB14
 749 019c 01       		.byte	0x1
 750 019d C701     		.2byte	0x1c7
 751 019f 0E       		.uleb128 0xe
 752 01a0 A4000000 		.4byte	0xa4
 753 01a4 08000000 		.4byte	.LBB16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 31


 754 01a8 06000000 		.4byte	.LBE16-.LBB16
 755 01ac 01       		.byte	0x1
 756 01ad C901     		.2byte	0x1c9
 757 01af 00       		.byte	0
 758 01b0 0F       		.uleb128 0xf
 759 01b1 E5010000 		.4byte	.LASF28
 760 01b5 01       		.byte	0x1
 761 01b6 54       		.byte	0x54
 762 01b7 00000000 		.4byte	.LFB3
 763 01bb 60000000 		.4byte	.LFE3-.LFB3
 764 01bf 01       		.uleb128 0x1
 765 01c0 9C       		.byte	0x9c
 766 01c1 67020000 		.4byte	0x267
 767 01c5 10       		.uleb128 0x10
 768 01c6 7D020000 		.4byte	.LASF29
 769 01ca 01       		.byte	0x1
 770 01cb 57       		.byte	0x57
 771 01cc 6B000000 		.4byte	0x6b
 772 01d0 00000000 		.4byte	.LLST0
 773 01d4 10       		.uleb128 0x10
 774 01d5 25030000 		.4byte	.LASF30
 775 01d9 01       		.byte	0x1
 776 01da 5D       		.byte	0x5d
 777 01db 6B000000 		.4byte	0x6b
 778 01df 18000000 		.4byte	.LLST1
 779 01e3 11       		.uleb128 0x11
 780 01e4 BE000000 		.4byte	0xbe
 781 01e8 1A000000 		.4byte	.LBB18
 782 01ec 06000000 		.4byte	.LBE18-.LBB18
 783 01f0 01       		.byte	0x1
 784 01f1 85       		.byte	0x85
 785 01f2 FD010000 		.4byte	0x1fd
 786 01f6 12       		.uleb128 0x12
 787 01f7 CB000000 		.4byte	0xcb
 788 01fb 7F       		.sleb128 -1
 789 01fc 00       		.byte	0
 790 01fd 11       		.uleb128 0x11
 791 01fe D8000000 		.4byte	0xd8
 792 0202 20000000 		.4byte	.LBB20
 793 0206 04000000 		.4byte	.LBE20-.LBB20
 794 020a 01       		.byte	0x1
 795 020b 88       		.byte	0x88
 796 020c 17020000 		.4byte	0x217
 797 0210 12       		.uleb128 0x12
 798 0211 E5000000 		.4byte	0xe5
 799 0215 7F       		.sleb128 -1
 800 0216 00       		.byte	0
 801 0217 11       		.uleb128 0x11
 802 0218 F2000000 		.4byte	0xf2
 803 021c 24000000 		.4byte	.LBB22
 804 0220 06000000 		.4byte	.LBE22-.LBB22
 805 0224 01       		.byte	0x1
 806 0225 8B       		.byte	0x8b
 807 0226 31020000 		.4byte	0x231
 808 022a 13       		.uleb128 0x13
 809 022b FF000000 		.4byte	0xff
 810 022f 7F       		.byte	0x7f
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 32


 811 0230 00       		.byte	0
 812 0231 11       		.uleb128 0x11
 813 0232 0C010000 		.4byte	0x10c
 814 0236 2A000000 		.4byte	.LBB24
 815 023a 06000000 		.4byte	.LBE24-.LBB24
 816 023e 01       		.byte	0x1
 817 023f 9A       		.byte	0x9a
 818 0240 4B020000 		.4byte	0x24b
 819 0244 13       		.uleb128 0x13
 820 0245 19010000 		.4byte	0x119
 821 0249 00       		.byte	0
 822 024a 00       		.byte	0
 823 024b 14       		.uleb128 0x14
 824 024c 34000000 		.4byte	.LVL7
 825 0250 89030000 		.4byte	0x389
 826 0254 14       		.uleb128 0x14
 827 0255 40000000 		.4byte	.LVL8
 828 0259 94030000 		.4byte	0x394
 829 025d 14       		.uleb128 0x14
 830 025e 44000000 		.4byte	.LVL9
 831 0262 79010000 		.4byte	0x179
 832 0266 00       		.byte	0
 833 0267 0F       		.uleb128 0xf
 834 0268 07030000 		.4byte	.LASF31
 835 026c 01       		.byte	0x1
 836 026d 37       		.byte	0x37
 837 026e 00000000 		.4byte	.LFB2
 838 0272 1C000000 		.4byte	.LFE2-.LFB2
 839 0276 01       		.uleb128 0x1
 840 0277 9C       		.byte	0x9c
 841 0278 8F020000 		.4byte	0x28f
 842 027c 14       		.uleb128 0x14
 843 027d 0E000000 		.4byte	.LVL10
 844 0281 B0010000 		.4byte	0x1b0
 845 0285 14       		.uleb128 0x14
 846 0286 16000000 		.4byte	.LVL11
 847 028a 26010000 		.4byte	0x126
 848 028e 00       		.byte	0
 849 028f 0A       		.uleb128 0xa
 850 0290 D8000000 		.4byte	0xd8
 851 0294 00000000 		.4byte	.LFB9
 852 0298 0C000000 		.4byte	.LFE9-.LFB9
 853 029c 01       		.uleb128 0x1
 854 029d 9C       		.byte	0x9c
 855 029e AA020000 		.4byte	0x2aa
 856 02a2 0B       		.uleb128 0xb
 857 02a3 E5000000 		.4byte	0xe5
 858 02a7 01       		.uleb128 0x1
 859 02a8 50       		.byte	0x50
 860 02a9 00       		.byte	0
 861 02aa 0A       		.uleb128 0xa
 862 02ab F2000000 		.4byte	0xf2
 863 02af 00000000 		.4byte	.LFB10
 864 02b3 0C000000 		.4byte	.LFE10-.LFB10
 865 02b7 01       		.uleb128 0x1
 866 02b8 9C       		.byte	0x9c
 867 02b9 C5020000 		.4byte	0x2c5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 33


 868 02bd 0B       		.uleb128 0xb
 869 02be FF000000 		.4byte	0xff
 870 02c2 01       		.uleb128 0x1
 871 02c3 50       		.byte	0x50
 872 02c4 00       		.byte	0
 873 02c5 0A       		.uleb128 0xa
 874 02c6 0C010000 		.4byte	0x10c
 875 02ca 00000000 		.4byte	.LFB11
 876 02ce 0C000000 		.4byte	.LFE11-.LFB11
 877 02d2 01       		.uleb128 0x1
 878 02d3 9C       		.byte	0x9c
 879 02d4 E0020000 		.4byte	0x2e0
 880 02d8 0B       		.uleb128 0xb
 881 02d9 19010000 		.4byte	0x119
 882 02dd 01       		.uleb128 0x1
 883 02de 50       		.byte	0x50
 884 02df 00       		.byte	0
 885 02e0 15       		.uleb128 0x15
 886 02e1 B1000000 		.4byte	0xb1
 887 02e5 00000000 		.4byte	.LFB12
 888 02e9 0C000000 		.4byte	.LFE12-.LFB12
 889 02ed 01       		.uleb128 0x1
 890 02ee 9C       		.byte	0x9c
 891 02ef 16       		.uleb128 0x16
 892 02f0 38010000 		.4byte	.LASF41
 893 02f4 01       		.byte	0x1
 894 02f5 E102     		.2byte	0x2e1
 895 02f7 6B000000 		.4byte	0x6b
 896 02fb 00000000 		.4byte	.LFB13
 897 02ff 0C000000 		.4byte	.LFE13-.LFB13
 898 0303 01       		.uleb128 0x1
 899 0304 9C       		.byte	0x9c
 900 0305 18030000 		.4byte	0x318
 901 0309 17       		.uleb128 0x17
 902 030a 4C020000 		.4byte	.LASF32
 903 030e 01       		.byte	0x1
 904 030f E302     		.2byte	0x2e3
 905 0311 6B000000 		.4byte	0x6b
 906 0315 01       		.uleb128 0x1
 907 0316 50       		.byte	0x50
 908 0317 00       		.byte	0
 909 0318 0D       		.uleb128 0xd
 910 0319 64020000 		.4byte	.LASF33
 911 031d 01       		.byte	0x1
 912 031e FD02     		.2byte	0x2fd
 913 0320 00000000 		.4byte	.LFB14
 914 0324 0C000000 		.4byte	.LFE14-.LFB14
 915 0328 01       		.uleb128 0x1
 916 0329 9C       		.byte	0x9c
 917 032a 3D030000 		.4byte	0x33d
 918 032e 18       		.uleb128 0x18
 919 032f CD010000 		.4byte	.LASF42
 920 0333 01       		.byte	0x1
 921 0334 FD02     		.2byte	0x2fd
 922 0336 6B000000 		.4byte	0x6b
 923 033a 01       		.uleb128 0x1
 924 033b 50       		.byte	0x50
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 34


 925 033c 00       		.byte	0
 926 033d 15       		.uleb128 0x15
 927 033e A4000000 		.4byte	0xa4
 928 0342 00000000 		.4byte	.LFB15
 929 0346 0C000000 		.4byte	.LFE15-.LFB15
 930 034a 01       		.uleb128 0x1
 931 034b 9C       		.byte	0x9c
 932 034c 0C       		.uleb128 0xc
 933 034d E9000000 		.4byte	.LASF35
 934 0351 01       		.byte	0x1
 935 0352 3003     		.2byte	0x330
 936 0354 6B000000 		.4byte	0x6b
 937 0358 00000000 		.4byte	.LFB16
 938 035c 0C000000 		.4byte	.LFE16-.LFB16
 939 0360 01       		.uleb128 0x1
 940 0361 9C       		.byte	0x9c
 941 0362 0C       		.uleb128 0xc
 942 0363 D5020000 		.4byte	.LASF36
 943 0367 01       		.byte	0x1
 944 0368 7403     		.2byte	0x374
 945 036a 6B000000 		.4byte	0x6b
 946 036e 00000000 		.4byte	.LFB17
 947 0372 0C000000 		.4byte	.LFE17-.LFB17
 948 0376 01       		.uleb128 0x1
 949 0377 9C       		.byte	0x9c
 950 0378 19       		.uleb128 0x19
 951 0379 BB010000 		.4byte	.LASF43
 952 037d 01       		.byte	0x1
 953 037e 20       		.byte	0x20
 954 037f 6B000000 		.4byte	0x6b
 955 0383 05       		.uleb128 0x5
 956 0384 03       		.byte	0x3
 957 0385 00000000 		.4byte	pwm_initVar
 958 0389 1A       		.uleb128 0x1a
 959 038a F5010000 		.4byte	.LASF37
 960 038e 03       		.byte	0x3
 961 038f E3       		.byte	0xe3
 962 0390 6B000000 		.4byte	0x6b
 963 0394 1B       		.uleb128 0x1b
 964 0395 36020000 		.4byte	.LASF44
 965 0399 03       		.byte	0x3
 966 039a E4       		.byte	0xe4
 967 039b 1C       		.uleb128 0x1c
 968 039c 6B000000 		.4byte	0x6b
 969 03a0 00       		.byte	0
 970 03a1 00       		.byte	0
 971              		.section	.debug_abbrev,"",%progbits
 972              	.Ldebug_abbrev0:
 973 0000 01       		.uleb128 0x1
 974 0001 11       		.uleb128 0x11
 975 0002 01       		.byte	0x1
 976 0003 25       		.uleb128 0x25
 977 0004 0E       		.uleb128 0xe
 978 0005 13       		.uleb128 0x13
 979 0006 0B       		.uleb128 0xb
 980 0007 03       		.uleb128 0x3
 981 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 35


 982 0009 1B       		.uleb128 0x1b
 983 000a 0E       		.uleb128 0xe
 984 000b 55       		.uleb128 0x55
 985 000c 17       		.uleb128 0x17
 986 000d 11       		.uleb128 0x11
 987 000e 01       		.uleb128 0x1
 988 000f 10       		.uleb128 0x10
 989 0010 17       		.uleb128 0x17
 990 0011 00       		.byte	0
 991 0012 00       		.byte	0
 992 0013 02       		.uleb128 0x2
 993 0014 24       		.uleb128 0x24
 994 0015 00       		.byte	0
 995 0016 0B       		.uleb128 0xb
 996 0017 0B       		.uleb128 0xb
 997 0018 3E       		.uleb128 0x3e
 998 0019 0B       		.uleb128 0xb
 999 001a 03       		.uleb128 0x3
 1000 001b 0E       		.uleb128 0xe
 1001 001c 00       		.byte	0
 1002 001d 00       		.byte	0
 1003 001e 03       		.uleb128 0x3
 1004 001f 24       		.uleb128 0x24
 1005 0020 00       		.byte	0
 1006 0021 0B       		.uleb128 0xb
 1007 0022 0B       		.uleb128 0xb
 1008 0023 3E       		.uleb128 0x3e
 1009 0024 0B       		.uleb128 0xb
 1010 0025 03       		.uleb128 0x3
 1011 0026 08       		.uleb128 0x8
 1012 0027 00       		.byte	0
 1013 0028 00       		.byte	0
 1014 0029 04       		.uleb128 0x4
 1015 002a 16       		.uleb128 0x16
 1016 002b 00       		.byte	0
 1017 002c 03       		.uleb128 0x3
 1018 002d 0E       		.uleb128 0xe
 1019 002e 3A       		.uleb128 0x3a
 1020 002f 0B       		.uleb128 0xb
 1021 0030 3B       		.uleb128 0x3b
 1022 0031 05       		.uleb128 0x5
 1023 0032 49       		.uleb128 0x49
 1024 0033 13       		.uleb128 0x13
 1025 0034 00       		.byte	0
 1026 0035 00       		.byte	0
 1027 0036 05       		.uleb128 0x5
 1028 0037 35       		.uleb128 0x35
 1029 0038 00       		.byte	0
 1030 0039 49       		.uleb128 0x49
 1031 003a 13       		.uleb128 0x13
 1032 003b 00       		.byte	0
 1033 003c 00       		.byte	0
 1034 003d 06       		.uleb128 0x6
 1035 003e 2E       		.uleb128 0x2e
 1036 003f 00       		.byte	0
 1037 0040 3F       		.uleb128 0x3f
 1038 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 36


 1039 0042 03       		.uleb128 0x3
 1040 0043 0E       		.uleb128 0xe
 1041 0044 3A       		.uleb128 0x3a
 1042 0045 0B       		.uleb128 0xb
 1043 0046 3B       		.uleb128 0x3b
 1044 0047 05       		.uleb128 0x5
 1045 0048 27       		.uleb128 0x27
 1046 0049 19       		.uleb128 0x19
 1047 004a 49       		.uleb128 0x49
 1048 004b 13       		.uleb128 0x13
 1049 004c 20       		.uleb128 0x20
 1050 004d 0B       		.uleb128 0xb
 1051 004e 00       		.byte	0
 1052 004f 00       		.byte	0
 1053 0050 07       		.uleb128 0x7
 1054 0051 2E       		.uleb128 0x2e
 1055 0052 01       		.byte	0x1
 1056 0053 3F       		.uleb128 0x3f
 1057 0054 19       		.uleb128 0x19
 1058 0055 03       		.uleb128 0x3
 1059 0056 0E       		.uleb128 0xe
 1060 0057 3A       		.uleb128 0x3a
 1061 0058 0B       		.uleb128 0xb
 1062 0059 3B       		.uleb128 0x3b
 1063 005a 05       		.uleb128 0x5
 1064 005b 27       		.uleb128 0x27
 1065 005c 19       		.uleb128 0x19
 1066 005d 20       		.uleb128 0x20
 1067 005e 0B       		.uleb128 0xb
 1068 005f 01       		.uleb128 0x1
 1069 0060 13       		.uleb128 0x13
 1070 0061 00       		.byte	0
 1071 0062 00       		.byte	0
 1072 0063 08       		.uleb128 0x8
 1073 0064 05       		.uleb128 0x5
 1074 0065 00       		.byte	0
 1075 0066 03       		.uleb128 0x3
 1076 0067 0E       		.uleb128 0xe
 1077 0068 3A       		.uleb128 0x3a
 1078 0069 0B       		.uleb128 0xb
 1079 006a 3B       		.uleb128 0x3b
 1080 006b 05       		.uleb128 0x5
 1081 006c 49       		.uleb128 0x49
 1082 006d 13       		.uleb128 0x13
 1083 006e 00       		.byte	0
 1084 006f 00       		.byte	0
 1085 0070 09       		.uleb128 0x9
 1086 0071 2E       		.uleb128 0x2e
 1087 0072 00       		.byte	0
 1088 0073 3F       		.uleb128 0x3f
 1089 0074 19       		.uleb128 0x19
 1090 0075 03       		.uleb128 0x3
 1091 0076 0E       		.uleb128 0xe
 1092 0077 3A       		.uleb128 0x3a
 1093 0078 0B       		.uleb128 0xb
 1094 0079 3B       		.uleb128 0x3b
 1095 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 37


 1096 007b 27       		.uleb128 0x27
 1097 007c 19       		.uleb128 0x19
 1098 007d 11       		.uleb128 0x11
 1099 007e 01       		.uleb128 0x1
 1100 007f 12       		.uleb128 0x12
 1101 0080 06       		.uleb128 0x6
 1102 0081 40       		.uleb128 0x40
 1103 0082 18       		.uleb128 0x18
 1104 0083 9742     		.uleb128 0x2117
 1105 0085 19       		.uleb128 0x19
 1106 0086 00       		.byte	0
 1107 0087 00       		.byte	0
 1108 0088 0A       		.uleb128 0xa
 1109 0089 2E       		.uleb128 0x2e
 1110 008a 01       		.byte	0x1
 1111 008b 31       		.uleb128 0x31
 1112 008c 13       		.uleb128 0x13
 1113 008d 11       		.uleb128 0x11
 1114 008e 01       		.uleb128 0x1
 1115 008f 12       		.uleb128 0x12
 1116 0090 06       		.uleb128 0x6
 1117 0091 40       		.uleb128 0x40
 1118 0092 18       		.uleb128 0x18
 1119 0093 9742     		.uleb128 0x2117
 1120 0095 19       		.uleb128 0x19
 1121 0096 01       		.uleb128 0x1
 1122 0097 13       		.uleb128 0x13
 1123 0098 00       		.byte	0
 1124 0099 00       		.byte	0
 1125 009a 0B       		.uleb128 0xb
 1126 009b 05       		.uleb128 0x5
 1127 009c 00       		.byte	0
 1128 009d 31       		.uleb128 0x31
 1129 009e 13       		.uleb128 0x13
 1130 009f 02       		.uleb128 0x2
 1131 00a0 18       		.uleb128 0x18
 1132 00a1 00       		.byte	0
 1133 00a2 00       		.byte	0
 1134 00a3 0C       		.uleb128 0xc
 1135 00a4 2E       		.uleb128 0x2e
 1136 00a5 00       		.byte	0
 1137 00a6 3F       		.uleb128 0x3f
 1138 00a7 19       		.uleb128 0x19
 1139 00a8 03       		.uleb128 0x3
 1140 00a9 0E       		.uleb128 0xe
 1141 00aa 3A       		.uleb128 0x3a
 1142 00ab 0B       		.uleb128 0xb
 1143 00ac 3B       		.uleb128 0x3b
 1144 00ad 05       		.uleb128 0x5
 1145 00ae 27       		.uleb128 0x27
 1146 00af 19       		.uleb128 0x19
 1147 00b0 49       		.uleb128 0x49
 1148 00b1 13       		.uleb128 0x13
 1149 00b2 11       		.uleb128 0x11
 1150 00b3 01       		.uleb128 0x1
 1151 00b4 12       		.uleb128 0x12
 1152 00b5 06       		.uleb128 0x6
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 38


 1153 00b6 40       		.uleb128 0x40
 1154 00b7 18       		.uleb128 0x18
 1155 00b8 9742     		.uleb128 0x2117
 1156 00ba 19       		.uleb128 0x19
 1157 00bb 00       		.byte	0
 1158 00bc 00       		.byte	0
 1159 00bd 0D       		.uleb128 0xd
 1160 00be 2E       		.uleb128 0x2e
 1161 00bf 01       		.byte	0x1
 1162 00c0 3F       		.uleb128 0x3f
 1163 00c1 19       		.uleb128 0x19
 1164 00c2 03       		.uleb128 0x3
 1165 00c3 0E       		.uleb128 0xe
 1166 00c4 3A       		.uleb128 0x3a
 1167 00c5 0B       		.uleb128 0xb
 1168 00c6 3B       		.uleb128 0x3b
 1169 00c7 05       		.uleb128 0x5
 1170 00c8 27       		.uleb128 0x27
 1171 00c9 19       		.uleb128 0x19
 1172 00ca 11       		.uleb128 0x11
 1173 00cb 01       		.uleb128 0x1
 1174 00cc 12       		.uleb128 0x12
 1175 00cd 06       		.uleb128 0x6
 1176 00ce 40       		.uleb128 0x40
 1177 00cf 18       		.uleb128 0x18
 1178 00d0 9742     		.uleb128 0x2117
 1179 00d2 19       		.uleb128 0x19
 1180 00d3 01       		.uleb128 0x1
 1181 00d4 13       		.uleb128 0x13
 1182 00d5 00       		.byte	0
 1183 00d6 00       		.byte	0
 1184 00d7 0E       		.uleb128 0xe
 1185 00d8 1D       		.uleb128 0x1d
 1186 00d9 00       		.byte	0
 1187 00da 31       		.uleb128 0x31
 1188 00db 13       		.uleb128 0x13
 1189 00dc 11       		.uleb128 0x11
 1190 00dd 01       		.uleb128 0x1
 1191 00de 12       		.uleb128 0x12
 1192 00df 06       		.uleb128 0x6
 1193 00e0 58       		.uleb128 0x58
 1194 00e1 0B       		.uleb128 0xb
 1195 00e2 59       		.uleb128 0x59
 1196 00e3 05       		.uleb128 0x5
 1197 00e4 00       		.byte	0
 1198 00e5 00       		.byte	0
 1199 00e6 0F       		.uleb128 0xf
 1200 00e7 2E       		.uleb128 0x2e
 1201 00e8 01       		.byte	0x1
 1202 00e9 3F       		.uleb128 0x3f
 1203 00ea 19       		.uleb128 0x19
 1204 00eb 03       		.uleb128 0x3
 1205 00ec 0E       		.uleb128 0xe
 1206 00ed 3A       		.uleb128 0x3a
 1207 00ee 0B       		.uleb128 0xb
 1208 00ef 3B       		.uleb128 0x3b
 1209 00f0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 39


 1210 00f1 27       		.uleb128 0x27
 1211 00f2 19       		.uleb128 0x19
 1212 00f3 11       		.uleb128 0x11
 1213 00f4 01       		.uleb128 0x1
 1214 00f5 12       		.uleb128 0x12
 1215 00f6 06       		.uleb128 0x6
 1216 00f7 40       		.uleb128 0x40
 1217 00f8 18       		.uleb128 0x18
 1218 00f9 9742     		.uleb128 0x2117
 1219 00fb 19       		.uleb128 0x19
 1220 00fc 01       		.uleb128 0x1
 1221 00fd 13       		.uleb128 0x13
 1222 00fe 00       		.byte	0
 1223 00ff 00       		.byte	0
 1224 0100 10       		.uleb128 0x10
 1225 0101 34       		.uleb128 0x34
 1226 0102 00       		.byte	0
 1227 0103 03       		.uleb128 0x3
 1228 0104 0E       		.uleb128 0xe
 1229 0105 3A       		.uleb128 0x3a
 1230 0106 0B       		.uleb128 0xb
 1231 0107 3B       		.uleb128 0x3b
 1232 0108 0B       		.uleb128 0xb
 1233 0109 49       		.uleb128 0x49
 1234 010a 13       		.uleb128 0x13
 1235 010b 02       		.uleb128 0x2
 1236 010c 17       		.uleb128 0x17
 1237 010d 00       		.byte	0
 1238 010e 00       		.byte	0
 1239 010f 11       		.uleb128 0x11
 1240 0110 1D       		.uleb128 0x1d
 1241 0111 01       		.byte	0x1
 1242 0112 31       		.uleb128 0x31
 1243 0113 13       		.uleb128 0x13
 1244 0114 11       		.uleb128 0x11
 1245 0115 01       		.uleb128 0x1
 1246 0116 12       		.uleb128 0x12
 1247 0117 06       		.uleb128 0x6
 1248 0118 58       		.uleb128 0x58
 1249 0119 0B       		.uleb128 0xb
 1250 011a 59       		.uleb128 0x59
 1251 011b 0B       		.uleb128 0xb
 1252 011c 01       		.uleb128 0x1
 1253 011d 13       		.uleb128 0x13
 1254 011e 00       		.byte	0
 1255 011f 00       		.byte	0
 1256 0120 12       		.uleb128 0x12
 1257 0121 05       		.uleb128 0x5
 1258 0122 00       		.byte	0
 1259 0123 31       		.uleb128 0x31
 1260 0124 13       		.uleb128 0x13
 1261 0125 1C       		.uleb128 0x1c
 1262 0126 0D       		.uleb128 0xd
 1263 0127 00       		.byte	0
 1264 0128 00       		.byte	0
 1265 0129 13       		.uleb128 0x13
 1266 012a 05       		.uleb128 0x5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 40


 1267 012b 00       		.byte	0
 1268 012c 31       		.uleb128 0x31
 1269 012d 13       		.uleb128 0x13
 1270 012e 1C       		.uleb128 0x1c
 1271 012f 0B       		.uleb128 0xb
 1272 0130 00       		.byte	0
 1273 0131 00       		.byte	0
 1274 0132 14       		.uleb128 0x14
 1275 0133 898201   		.uleb128 0x4109
 1276 0136 00       		.byte	0
 1277 0137 11       		.uleb128 0x11
 1278 0138 01       		.uleb128 0x1
 1279 0139 31       		.uleb128 0x31
 1280 013a 13       		.uleb128 0x13
 1281 013b 00       		.byte	0
 1282 013c 00       		.byte	0
 1283 013d 15       		.uleb128 0x15
 1284 013e 2E       		.uleb128 0x2e
 1285 013f 00       		.byte	0
 1286 0140 31       		.uleb128 0x31
 1287 0141 13       		.uleb128 0x13
 1288 0142 11       		.uleb128 0x11
 1289 0143 01       		.uleb128 0x1
 1290 0144 12       		.uleb128 0x12
 1291 0145 06       		.uleb128 0x6
 1292 0146 40       		.uleb128 0x40
 1293 0147 18       		.uleb128 0x18
 1294 0148 9742     		.uleb128 0x2117
 1295 014a 19       		.uleb128 0x19
 1296 014b 00       		.byte	0
 1297 014c 00       		.byte	0
 1298 014d 16       		.uleb128 0x16
 1299 014e 2E       		.uleb128 0x2e
 1300 014f 01       		.byte	0x1
 1301 0150 3F       		.uleb128 0x3f
 1302 0151 19       		.uleb128 0x19
 1303 0152 03       		.uleb128 0x3
 1304 0153 0E       		.uleb128 0xe
 1305 0154 3A       		.uleb128 0x3a
 1306 0155 0B       		.uleb128 0xb
 1307 0156 3B       		.uleb128 0x3b
 1308 0157 05       		.uleb128 0x5
 1309 0158 27       		.uleb128 0x27
 1310 0159 19       		.uleb128 0x19
 1311 015a 49       		.uleb128 0x49
 1312 015b 13       		.uleb128 0x13
 1313 015c 11       		.uleb128 0x11
 1314 015d 01       		.uleb128 0x1
 1315 015e 12       		.uleb128 0x12
 1316 015f 06       		.uleb128 0x6
 1317 0160 40       		.uleb128 0x40
 1318 0161 18       		.uleb128 0x18
 1319 0162 9742     		.uleb128 0x2117
 1320 0164 19       		.uleb128 0x19
 1321 0165 01       		.uleb128 0x1
 1322 0166 13       		.uleb128 0x13
 1323 0167 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 41


 1324 0168 00       		.byte	0
 1325 0169 17       		.uleb128 0x17
 1326 016a 34       		.uleb128 0x34
 1327 016b 00       		.byte	0
 1328 016c 03       		.uleb128 0x3
 1329 016d 0E       		.uleb128 0xe
 1330 016e 3A       		.uleb128 0x3a
 1331 016f 0B       		.uleb128 0xb
 1332 0170 3B       		.uleb128 0x3b
 1333 0171 05       		.uleb128 0x5
 1334 0172 49       		.uleb128 0x49
 1335 0173 13       		.uleb128 0x13
 1336 0174 02       		.uleb128 0x2
 1337 0175 18       		.uleb128 0x18
 1338 0176 00       		.byte	0
 1339 0177 00       		.byte	0
 1340 0178 18       		.uleb128 0x18
 1341 0179 05       		.uleb128 0x5
 1342 017a 00       		.byte	0
 1343 017b 03       		.uleb128 0x3
 1344 017c 0E       		.uleb128 0xe
 1345 017d 3A       		.uleb128 0x3a
 1346 017e 0B       		.uleb128 0xb
 1347 017f 3B       		.uleb128 0x3b
 1348 0180 05       		.uleb128 0x5
 1349 0181 49       		.uleb128 0x49
 1350 0182 13       		.uleb128 0x13
 1351 0183 02       		.uleb128 0x2
 1352 0184 18       		.uleb128 0x18
 1353 0185 00       		.byte	0
 1354 0186 00       		.byte	0
 1355 0187 19       		.uleb128 0x19
 1356 0188 34       		.uleb128 0x34
 1357 0189 00       		.byte	0
 1358 018a 03       		.uleb128 0x3
 1359 018b 0E       		.uleb128 0xe
 1360 018c 3A       		.uleb128 0x3a
 1361 018d 0B       		.uleb128 0xb
 1362 018e 3B       		.uleb128 0x3b
 1363 018f 0B       		.uleb128 0xb
 1364 0190 49       		.uleb128 0x49
 1365 0191 13       		.uleb128 0x13
 1366 0192 3F       		.uleb128 0x3f
 1367 0193 19       		.uleb128 0x19
 1368 0194 02       		.uleb128 0x2
 1369 0195 18       		.uleb128 0x18
 1370 0196 00       		.byte	0
 1371 0197 00       		.byte	0
 1372 0198 1A       		.uleb128 0x1a
 1373 0199 2E       		.uleb128 0x2e
 1374 019a 00       		.byte	0
 1375 019b 3F       		.uleb128 0x3f
 1376 019c 19       		.uleb128 0x19
 1377 019d 03       		.uleb128 0x3
 1378 019e 0E       		.uleb128 0xe
 1379 019f 3A       		.uleb128 0x3a
 1380 01a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 42


 1381 01a1 3B       		.uleb128 0x3b
 1382 01a2 0B       		.uleb128 0xb
 1383 01a3 27       		.uleb128 0x27
 1384 01a4 19       		.uleb128 0x19
 1385 01a5 49       		.uleb128 0x49
 1386 01a6 13       		.uleb128 0x13
 1387 01a7 3C       		.uleb128 0x3c
 1388 01a8 19       		.uleb128 0x19
 1389 01a9 00       		.byte	0
 1390 01aa 00       		.byte	0
 1391 01ab 1B       		.uleb128 0x1b
 1392 01ac 2E       		.uleb128 0x2e
 1393 01ad 01       		.byte	0x1
 1394 01ae 3F       		.uleb128 0x3f
 1395 01af 19       		.uleb128 0x19
 1396 01b0 03       		.uleb128 0x3
 1397 01b1 0E       		.uleb128 0xe
 1398 01b2 3A       		.uleb128 0x3a
 1399 01b3 0B       		.uleb128 0xb
 1400 01b4 3B       		.uleb128 0x3b
 1401 01b5 0B       		.uleb128 0xb
 1402 01b6 27       		.uleb128 0x27
 1403 01b7 19       		.uleb128 0x19
 1404 01b8 3C       		.uleb128 0x3c
 1405 01b9 19       		.uleb128 0x19
 1406 01ba 00       		.byte	0
 1407 01bb 00       		.byte	0
 1408 01bc 1C       		.uleb128 0x1c
 1409 01bd 05       		.uleb128 0x5
 1410 01be 00       		.byte	0
 1411 01bf 49       		.uleb128 0x49
 1412 01c0 13       		.uleb128 0x13
 1413 01c1 00       		.byte	0
 1414 01c2 00       		.byte	0
 1415 01c3 00       		.byte	0
 1416              		.section	.debug_loc,"",%progbits
 1417              	.Ldebug_loc0:
 1418              	.LLST0:
 1419 0000 0A000000 		.4byte	.LVL1
 1420 0004 0C000000 		.4byte	.LVL2
 1421 0008 0600     		.2byte	0x6
 1422 000a 73       		.byte	0x73
 1423 000b 00       		.sleb128 0
 1424 000c 09       		.byte	0x9
 1425 000d C0       		.byte	0xc0
 1426 000e 1A       		.byte	0x1a
 1427 000f 9F       		.byte	0x9f
 1428 0010 00000000 		.4byte	0
 1429 0014 00000000 		.4byte	0
 1430              	.LLST1:
 1431 0018 34000000 		.4byte	.LVL7
 1432 001c 3F000000 		.4byte	.LVL8-1
 1433 0020 0100     		.2byte	0x1
 1434 0022 50       		.byte	0x50
 1435 0023 00000000 		.4byte	0
 1436 0027 00000000 		.4byte	0
 1437              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 43


 1438 0000 94000000 		.4byte	0x94
 1439 0004 0200     		.2byte	0x2
 1440 0006 00000000 		.4byte	.Ldebug_info0
 1441 000a 04       		.byte	0x4
 1442 000b 00       		.byte	0
 1443 000c 0000     		.2byte	0
 1444 000e 0000     		.2byte	0
 1445 0010 00000000 		.4byte	.LFB4
 1446 0014 10000000 		.4byte	.LFE4-.LFB4
 1447 0018 00000000 		.4byte	.LFB5
 1448 001c 10000000 		.4byte	.LFE5-.LFB5
 1449 0020 00000000 		.4byte	.LFB6
 1450 0024 0C000000 		.4byte	.LFE6-.LFB6
 1451 0028 00000000 		.4byte	.LFB7
 1452 002c 14000000 		.4byte	.LFE7-.LFB7
 1453 0030 00000000 		.4byte	.LFB8
 1454 0034 18000000 		.4byte	.LFE8-.LFB8
 1455 0038 00000000 		.4byte	.LFB3
 1456 003c 60000000 		.4byte	.LFE3-.LFB3
 1457 0040 00000000 		.4byte	.LFB2
 1458 0044 1C000000 		.4byte	.LFE2-.LFB2
 1459 0048 00000000 		.4byte	.LFB9
 1460 004c 0C000000 		.4byte	.LFE9-.LFB9
 1461 0050 00000000 		.4byte	.LFB10
 1462 0054 0C000000 		.4byte	.LFE10-.LFB10
 1463 0058 00000000 		.4byte	.LFB11
 1464 005c 0C000000 		.4byte	.LFE11-.LFB11
 1465 0060 00000000 		.4byte	.LFB12
 1466 0064 0C000000 		.4byte	.LFE12-.LFB12
 1467 0068 00000000 		.4byte	.LFB13
 1468 006c 0C000000 		.4byte	.LFE13-.LFB13
 1469 0070 00000000 		.4byte	.LFB14
 1470 0074 0C000000 		.4byte	.LFE14-.LFB14
 1471 0078 00000000 		.4byte	.LFB15
 1472 007c 0C000000 		.4byte	.LFE15-.LFB15
 1473 0080 00000000 		.4byte	.LFB16
 1474 0084 0C000000 		.4byte	.LFE16-.LFB16
 1475 0088 00000000 		.4byte	.LFB17
 1476 008c 0C000000 		.4byte	.LFE17-.LFB17
 1477 0090 00000000 		.4byte	0
 1478 0094 00000000 		.4byte	0
 1479              		.section	.debug_ranges,"",%progbits
 1480              	.Ldebug_ranges0:
 1481 0000 00000000 		.4byte	.LFB4
 1482 0004 10000000 		.4byte	.LFE4
 1483 0008 00000000 		.4byte	.LFB5
 1484 000c 10000000 		.4byte	.LFE5
 1485 0010 00000000 		.4byte	.LFB6
 1486 0014 0C000000 		.4byte	.LFE6
 1487 0018 00000000 		.4byte	.LFB7
 1488 001c 14000000 		.4byte	.LFE7
 1489 0020 00000000 		.4byte	.LFB8
 1490 0024 18000000 		.4byte	.LFE8
 1491 0028 00000000 		.4byte	.LFB3
 1492 002c 60000000 		.4byte	.LFE3
 1493 0030 00000000 		.4byte	.LFB2
 1494 0034 1C000000 		.4byte	.LFE2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 44


 1495 0038 00000000 		.4byte	.LFB9
 1496 003c 0C000000 		.4byte	.LFE9
 1497 0040 00000000 		.4byte	.LFB10
 1498 0044 0C000000 		.4byte	.LFE10
 1499 0048 00000000 		.4byte	.LFB11
 1500 004c 0C000000 		.4byte	.LFE11
 1501 0050 00000000 		.4byte	.LFB12
 1502 0054 0C000000 		.4byte	.LFE12
 1503 0058 00000000 		.4byte	.LFB13
 1504 005c 0C000000 		.4byte	.LFE13
 1505 0060 00000000 		.4byte	.LFB14
 1506 0064 0C000000 		.4byte	.LFE14
 1507 0068 00000000 		.4byte	.LFB15
 1508 006c 0C000000 		.4byte	.LFE15
 1509 0070 00000000 		.4byte	.LFB16
 1510 0074 0C000000 		.4byte	.LFE16
 1511 0078 00000000 		.4byte	.LFB17
 1512 007c 0C000000 		.4byte	.LFE17
 1513 0080 00000000 		.4byte	0
 1514 0084 00000000 		.4byte	0
 1515              		.section	.debug_line,"",%progbits
 1516              	.Ldebug_line0:
 1517 0000 D2010000 		.section	.debug_str,"MS",%progbits,1
 1517      02004B00 
 1517      00000201 
 1517      FB0E0D00 
 1517      01010101 
 1518              	.LASF40:
 1519 0000 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\vesion 2\\fw\\fin"
 1519      79707265 
 1519      73735C73 
 1519      79737465 
 1519      6D2D7374 
 1520 002e 6973685C 		.ascii	"ish\\sandbox\\v9_testmode\\fin_v9testmode.cydsn\000"
 1520      73616E64 
 1520      626F785C 
 1520      76395F74 
 1520      6573746D 
 1521              	.LASF38:
 1522 005b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1522      4320342E 
 1522      392E3320 
 1522      32303135 
 1522      30333033 
 1523 008e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1523      20726576 
 1523      6973696F 
 1523      6E203232 
 1523      31323230 
 1524 00c1 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1524      66756E63 
 1524      74696F6E 
 1524      2D736563 
 1524      74696F6E 
 1525              	.LASF35:
 1526 00e9 70776D5F 		.ascii	"pwm_ReadCompare\000"
 1526      52656164 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 45


 1526      436F6D70 
 1526      61726500 
 1527              	.LASF20:
 1528 00f9 70657269 		.ascii	"period\000"
 1528      6F6400
 1529              	.LASF3:
 1530 0100 73686F72 		.ascii	"short unsigned int\000"
 1530      7420756E 
 1530      7369676E 
 1530      65642069 
 1530      6E7400
 1531              	.LASF27:
 1532 0113 70776D5F 		.ascii	"pwm_ClearFIFO\000"
 1532      436C6561 
 1532      72464946 
 1532      4F00
 1533              	.LASF16:
 1534 0121 70776D5F 		.ascii	"pwm_ReadStatusRegister\000"
 1534      52656164 
 1534      53746174 
 1534      75735265 
 1534      67697374 
 1535              	.LASF41:
 1536 0138 70776D5F 		.ascii	"pwm_ReadControlRegister\000"
 1536      52656164 
 1536      436F6E74 
 1536      726F6C52 
 1536      65676973 
 1537              	.LASF15:
 1538 0150 70776D5F 		.ascii	"pwm_ReadCapture\000"
 1538      52656164 
 1538      43617074 
 1538      75726500 
 1539              	.LASF9:
 1540 0160 666C6F61 		.ascii	"float\000"
 1540      7400
 1541              	.LASF19:
 1542 0166 636F756E 		.ascii	"counter\000"
 1542      74657200 
 1543              	.LASF7:
 1544 016e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1544      206C6F6E 
 1544      6720756E 
 1544      7369676E 
 1544      65642069 
 1545              	.LASF21:
 1546 0185 70776D5F 		.ascii	"pwm_WriteCompare\000"
 1546      57726974 
 1546      65436F6D 
 1546      70617265 
 1546      00
 1547              	.LASF1:
 1548 0196 756E7369 		.ascii	"unsigned char\000"
 1548      676E6564 
 1548      20636861 
 1548      7200
 1549              	.LASF13:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 46


 1550 01a4 72656738 		.ascii	"reg8\000"
 1550      00
 1551              	.LASF5:
 1552 01a9 6C6F6E67 		.ascii	"long unsigned int\000"
 1552      20756E73 
 1552      69676E65 
 1552      6420696E 
 1552      7400
 1553              	.LASF43:
 1554 01bb 70776D5F 		.ascii	"pwm_initVar\000"
 1554      696E6974 
 1554      56617200 
 1555              	.LASF12:
 1556 01c7 75696E74 		.ascii	"uint8\000"
 1556      3800
 1557              	.LASF42:
 1558 01cd 636F6E74 		.ascii	"control\000"
 1558      726F6C00 
 1559              	.LASF34:
 1560 01d5 70776D5F 		.ascii	"pwm_ReadCounter\000"
 1560      52656164 
 1560      436F756E 
 1560      74657200 
 1561              	.LASF28:
 1562 01e5 70776D5F 		.ascii	"pwm_Init\000"
 1562      496E6974 
 1562      00
 1563              	.LASF10:
 1564 01ee 646F7562 		.ascii	"double\000"
 1564      6C6500
 1565              	.LASF37:
 1566 01f5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1566      74657243 
 1566      72697469 
 1566      63616C53 
 1566      65637469 
 1567              	.LASF8:
 1568 020c 756E7369 		.ascii	"unsigned int\000"
 1568      676E6564 
 1568      20696E74 
 1568      00
 1569              	.LASF39:
 1570 0219 47656E65 		.ascii	"Generated_Source\\PSoC4\\pwm.c\000"
 1570      72617465 
 1570      645F536F 
 1570      75726365 
 1570      5C50536F 
 1571              	.LASF44:
 1572 0236 43794578 		.ascii	"CyExitCriticalSection\000"
 1572      69744372 
 1572      69746963 
 1572      616C5365 
 1572      6374696F 
 1573              	.LASF32:
 1574 024c 72657375 		.ascii	"result\000"
 1574      6C7400
 1575              	.LASF17:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 47


 1576 0253 70776D5F 		.ascii	"pwm_WriteCounter\000"
 1576      57726974 
 1576      65436F75 
 1576      6E746572 
 1576      00
 1577              	.LASF33:
 1578 0264 70776D5F 		.ascii	"pwm_WriteControlRegister\000"
 1578      57726974 
 1578      65436F6E 
 1578      74726F6C 
 1578      52656769 
 1579              	.LASF29:
 1580 027d 6374726C 		.ascii	"ctrl\000"
 1580      00
 1581              	.LASF14:
 1582 0282 73697A65 		.ascii	"sizetype\000"
 1582      74797065 
 1582      00
 1583              	.LASF6:
 1584 028b 6C6F6E67 		.ascii	"long long int\000"
 1584      206C6F6E 
 1584      6720696E 
 1584      7400
 1585              	.LASF18:
 1586 0299 70776D5F 		.ascii	"pwm_WritePeriod\000"
 1586      57726974 
 1586      65506572 
 1586      696F6400 
 1587              	.LASF24:
 1588 02a9 696E7465 		.ascii	"interruptMode\000"
 1588      72727570 
 1588      744D6F64 
 1588      6500
 1589              	.LASF26:
 1590 02b7 70776D5F 		.ascii	"pwm_Stop\000"
 1590      53746F70 
 1590      00
 1591              	.LASF2:
 1592 02c0 73686F72 		.ascii	"short int\000"
 1592      7420696E 
 1592      7400
 1593              	.LASF25:
 1594 02ca 70776D5F 		.ascii	"pwm_Enable\000"
 1594      456E6162 
 1594      6C6500
 1595              	.LASF36:
 1596 02d5 70776D5F 		.ascii	"pwm_ReadPeriod\000"
 1596      52656164 
 1596      50657269 
 1596      6F6400
 1597              	.LASF23:
 1598 02e4 70776D5F 		.ascii	"pwm_SetInterruptMode\000"
 1598      53657449 
 1598      6E746572 
 1598      72757074 
 1598      4D6F6465 
 1599              	.LASF4:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccASRRph.s 			page 48


 1600 02f9 6C6F6E67 		.ascii	"long int\000"
 1600      20696E74 
 1600      00
 1601              	.LASF11:
 1602 0302 63686172 		.ascii	"char\000"
 1602      00
 1603              	.LASF31:
 1604 0307 70776D5F 		.ascii	"pwm_Start\000"
 1604      53746172 
 1604      7400
 1605              	.LASF0:
 1606 0311 7369676E 		.ascii	"signed char\000"
 1606      65642063 
 1606      68617200 
 1607              	.LASF22:
 1608 031d 636F6D70 		.ascii	"compare\000"
 1608      61726500 
 1609              	.LASF30:
 1610 0325 70776D5F 		.ascii	"pwm_interruptState\000"
 1610      696E7465 
 1610      72727570 
 1610      74537461 
 1610      746500
 1611              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
