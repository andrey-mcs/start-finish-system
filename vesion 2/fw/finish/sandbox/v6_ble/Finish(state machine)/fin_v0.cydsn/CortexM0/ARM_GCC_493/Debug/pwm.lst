ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"pwm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	pwm_initVar
  18              		.bss
  19              		.type	pwm_initVar, %object
  20              		.size	pwm_initVar, 1
  21              	pwm_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.pwm_Start,"ax",%progbits
  24              		.align	2
  25              		.global	pwm_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	pwm_Start, %function
  29              	pwm_Start:
  30              	.LFB2:
  31              		.file 1 "Generated_Source\\PSoC4\\pwm.c"
   1:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/pwm.c **** * File Name: pwm.c
   3:Generated_Source\PSoC4/pwm.c **** * Version 3.30
   4:Generated_Source\PSoC4/pwm.c **** *
   5:Generated_Source\PSoC4/pwm.c **** * Description:
   6:Generated_Source\PSoC4/pwm.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/pwm.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/pwm.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/pwm.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/pwm.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/pwm.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/pwm.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/pwm.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/pwm.c **** *
  15:Generated_Source\PSoC4/pwm.c **** * Note:
  16:Generated_Source\PSoC4/pwm.c **** *
  17:Generated_Source\PSoC4/pwm.c **** *******************************************************************************
  18:Generated_Source\PSoC4/pwm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/pwm.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/pwm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/pwm.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/pwm.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/pwm.c **** 
  24:Generated_Source\PSoC4/pwm.c **** #include "pwm.h"
  25:Generated_Source\PSoC4/pwm.c **** 
  26:Generated_Source\PSoC4/pwm.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 2


  27:Generated_Source\PSoC4/pwm.c **** #ifdef pwm_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/pwm.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/pwm.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/pwm.c **** #endif /* pwm_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/pwm.c **** 
  32:Generated_Source\PSoC4/pwm.c **** uint8 pwm_initVar = 0u;
  33:Generated_Source\PSoC4/pwm.c **** 
  34:Generated_Source\PSoC4/pwm.c **** 
  35:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Start
  37:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  38:Generated_Source\PSoC4/pwm.c **** *
  39:Generated_Source\PSoC4/pwm.c **** * Summary:
  40:Generated_Source\PSoC4/pwm.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/pwm.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/pwm.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/pwm.c **** *
  44:Generated_Source\PSoC4/pwm.c **** * Parameters:
  45:Generated_Source\PSoC4/pwm.c **** *  None
  46:Generated_Source\PSoC4/pwm.c **** *
  47:Generated_Source\PSoC4/pwm.c **** * Return:
  48:Generated_Source\PSoC4/pwm.c **** *  None
  49:Generated_Source\PSoC4/pwm.c **** *
  50:Generated_Source\PSoC4/pwm.c **** * Global variables:
  51:Generated_Source\PSoC4/pwm.c **** *  pwm_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/pwm.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/pwm.c **** *
  54:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/pwm.c **** void pwm_Start(void) 
  56:Generated_Source\PSoC4/pwm.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/pwm.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/pwm.c ****     if(pwm_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/pwm.c ****     {
  60:Generated_Source\PSoC4/pwm.c ****         pwm_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	pwm_Init
  61:Generated_Source\PSoC4/pwm.c ****         pwm_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:Generated_Source\PSoC4/pwm.c ****     }
  63:Generated_Source\PSoC4/pwm.c ****     pwm_Enable();
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	pwm_Enable
  64:Generated_Source\PSoC4/pwm.c **** 
  65:Generated_Source\PSoC4/pwm.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	pwm_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	pwm_Start, .-pwm_Start
  65              		.section	.text.pwm_Init,"ax",%progbits
  66              		.align	2
  67              		.global	pwm_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	pwm_Init, %function
  71              	pwm_Init:
  72              	.LFB3:
  66:Generated_Source\PSoC4/pwm.c **** 
  67:Generated_Source\PSoC4/pwm.c **** 
  68:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Init
  70:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  71:Generated_Source\PSoC4/pwm.c **** *
  72:Generated_Source\PSoC4/pwm.c **** * Summary:
  73:Generated_Source\PSoC4/pwm.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/pwm.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/pwm.c **** *  pwm_Start().
  76:Generated_Source\PSoC4/pwm.c **** *
  77:Generated_Source\PSoC4/pwm.c **** * Parameters:
  78:Generated_Source\PSoC4/pwm.c **** *  None
  79:Generated_Source\PSoC4/pwm.c **** *
  80:Generated_Source\PSoC4/pwm.c **** * Return:
  81:Generated_Source\PSoC4/pwm.c **** *  None
  82:Generated_Source\PSoC4/pwm.c **** *
  83:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/pwm.c **** void pwm_Init(void) 
  85:Generated_Source\PSoC4/pwm.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
  87:Generated_Source\PSoC4/pwm.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction || pwm_UseControl) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 4


  89:Generated_Source\PSoC4/pwm.c **** 
  90:Generated_Source\PSoC4/pwm.c ****     #if(!pwm_UsingFixedFunction)
  91:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
  92:Generated_Source\PSoC4/pwm.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/pwm.c ****             uint8 pwm_interruptState;
  94:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
  95:Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
  96:Generated_Source\PSoC4/pwm.c **** 
  97:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
  98:Generated_Source\PSoC4/pwm.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CFG0_MODE;
 100:Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBand2_4)
 101:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= pwm_CFG0_DB;
 102:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBand2_4) */
 103:Generated_Source\PSoC4/pwm.c **** 
 104:Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL3 & ((uint8 )(~pwm_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL3 = ctrl | pwm_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/pwm.c **** 
 107:Generated_Source\PSoC4/pwm.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_RT1_MASK));
 109:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNC;
 110:Generated_Source\PSoC4/pwm.c **** 
 111:Generated_Source\PSoC4/pwm.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNCDSI_EN;
 114:Generated_Source\PSoC4/pwm.c **** 
 115:Generated_Source\PSoC4/pwm.c ****     #elif (pwm_UseControl)
 116:Generated_Source\PSoC4/pwm.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL & ((uint8)(~pwm_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 1C4B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL = ctrl | pwm_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 184A     		ldr	r2, .L6
  94 0016 FB1D     		add	r3, r7, #7
  95 0018 1B78     		ldrb	r3, [r3]
  96 001a 0921     		mov	r1, #9
  97 001c 0B43     		orr	r3, r1
  98 001e DBB2     		uxtb	r3, r3
  99 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/pwm.c ****                                    pwm_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 122:Generated_Source\PSoC4/pwm.c **** 
 123:Generated_Source\PSoC4/pwm.c ****     #if (!pwm_UsingFixedFunction)
 124:Generated_Source\PSoC4/pwm.c ****         #if (pwm_Resolution == 8)
 125:Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 0022 164A     		ldr	r2, .L6+4
 102 0024 154B     		ldr	r3, .L6+4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 5


 103 0026 1B78     		ldrb	r3, [r3]
 104 0028 DBB2     		uxtb	r3, r3
 105 002a 0121     		mov	r1, #1
 106 002c 0B43     		orr	r3, r1
 107 002e DBB2     		uxtb	r3, r3
 108 0030 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/pwm.c ****         #else /* (pwm_Resolution == 16)*/
 128:Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP1 |= (pwm_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_Resolution == 8) */
 132:Generated_Source\PSoC4/pwm.c **** 
 133:Generated_Source\PSoC4/pwm.c ****         pwm_WriteCounter(pwm_INIT_PERIOD_VALUE);
 109              		.loc 1 133 0
 110 0032 FF20     		mov	r0, #255
 111 0034 FFF7FEFF 		bl	pwm_WriteCounter
 134:Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
 135:Generated_Source\PSoC4/pwm.c **** 
 136:Generated_Source\PSoC4/pwm.c ****     pwm_WritePeriod(pwm_INIT_PERIOD_VALUE);
 112              		.loc 1 136 0
 113 0038 FF20     		mov	r0, #255
 114 003a FFF7FEFF 		bl	pwm_WritePeriod
 137:Generated_Source\PSoC4/pwm.c **** 
 138:Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseOneCompareMode)
 139:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare(pwm_INIT_COMPARE_VALUE1);
 115              		.loc 1 139 0
 116 003e 7F20     		mov	r0, #127
 117 0040 FFF7FEFF 		bl	pwm_WriteCompare
 140:Generated_Source\PSoC4/pwm.c ****         #else
 141:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare1(pwm_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare2(pwm_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseOneCompareMode) */
 144:Generated_Source\PSoC4/pwm.c **** 
 145:Generated_Source\PSoC4/pwm.c ****         #if (pwm_KillModeMinTime)
 146:Generated_Source\PSoC4/pwm.c ****             pwm_WriteKillTime(pwm_MinimumKillTime);
 147:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_KillModeMinTime) */
 148:Generated_Source\PSoC4/pwm.c **** 
 149:Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBandUsed)
 150:Generated_Source\PSoC4/pwm.c ****             pwm_WriteDeadTime(pwm_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBandUsed) */
 152:Generated_Source\PSoC4/pwm.c **** 
 153:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus || pwm_UsingFixedFunction)
 154:Generated_Source\PSoC4/pwm.c ****         pwm_SetInterruptMode(pwm_INIT_INTERRUPTS_MODE);
 118              		.loc 1 154 0
 119 0044 0020     		mov	r0, #0
 120 0046 FFF7FEFF 		bl	pwm_SetInterruptMode
 155:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 156:Generated_Source\PSoC4/pwm.c **** 
 157:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 158:Generated_Source\PSoC4/pwm.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/pwm.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL2 |= pwm_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/pwm.c ****     #else
 163:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
 164:Generated_Source\PSoC4/pwm.c **** 
 165:Generated_Source\PSoC4/pwm.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 6


 166:Generated_Source\PSoC4/pwm.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/pwm.c ****             pwm_interruptState = CyEnterCriticalSection();
 121              		.loc 1 167 0
 122 004a BC1D     		add	r4, r7, #6
 123 004c FFF7FEFF 		bl	CyEnterCriticalSection
 124 0050 031C     		mov	r3, r0
 125 0052 2370     		strb	r3, [r4]
 168:Generated_Source\PSoC4/pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/pwm.c ****             pwm_STATUS_AUX_CTRL |= pwm_STATUS_ACTL_INT_EN_MASK;
 126              		.loc 1 169 0
 127 0054 094A     		ldr	r2, .L6+4
 128 0056 094B     		ldr	r3, .L6+4
 129 0058 1B78     		ldrb	r3, [r3]
 130 005a DBB2     		uxtb	r3, r3
 131 005c 1021     		mov	r1, #16
 132 005e 0B43     		orr	r3, r1
 133 0060 DBB2     		uxtb	r3, r3
 134 0062 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC4/pwm.c **** 
 171:Generated_Source\PSoC4/pwm.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/pwm.c ****             CyExitCriticalSection(pwm_interruptState);
 135              		.loc 1 172 0
 136 0064 BB1D     		add	r3, r7, #6
 137 0066 1B78     		ldrb	r3, [r3]
 138 0068 181C     		mov	r0, r3
 139 006a FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC4/pwm.c **** 
 174:Generated_Source\PSoC4/pwm.c ****             /* Clear the FIFO to enable the pwm_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/pwm.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/pwm.c ****             pwm_ClearFIFO();
 140              		.loc 1 176 0
 141 006e FFF7FEFF 		bl	pwm_ClearFIFO
 177:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
 178:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 179:Generated_Source\PSoC4/pwm.c **** }
 142              		.loc 1 179 0
 143 0072 BD46     		mov	sp, r7
 144 0074 03B0     		add	sp, sp, #12
 145              		@ sp needed
 146 0076 90BD     		pop	{r4, r7, pc}
 147              	.L7:
 148              		.align	2
 149              	.L6:
 150 0078 73000F40 		.word	1074724979
 151 007c 93000F40 		.word	1074725011
 152              		.cfi_endproc
 153              	.LFE3:
 154              		.size	pwm_Init, .-pwm_Init
 155              		.section	.text.pwm_Enable,"ax",%progbits
 156              		.align	2
 157              		.global	pwm_Enable
 158              		.code	16
 159              		.thumb_func
 160              		.type	pwm_Enable, %function
 161              	pwm_Enable:
 162              	.LFB4:
 180:Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 7


 181:Generated_Source\PSoC4/pwm.c **** 
 182:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Enable
 184:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 185:Generated_Source\PSoC4/pwm.c **** *
 186:Generated_Source\PSoC4/pwm.c **** * Summary:
 187:Generated_Source\PSoC4/pwm.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/pwm.c **** *
 189:Generated_Source\PSoC4/pwm.c **** * Parameters:
 190:Generated_Source\PSoC4/pwm.c **** *  None
 191:Generated_Source\PSoC4/pwm.c **** *
 192:Generated_Source\PSoC4/pwm.c **** * Return:
 193:Generated_Source\PSoC4/pwm.c **** *  None
 194:Generated_Source\PSoC4/pwm.c **** *
 195:Generated_Source\PSoC4/pwm.c **** * Side Effects:
 196:Generated_Source\PSoC4/pwm.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/pwm.c **** *
 198:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/pwm.c **** void pwm_Enable(void) 
 200:Generated_Source\PSoC4/pwm.c **** {
 163              		.loc 1 200 0
 164              		.cfi_startproc
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/pwm.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 203:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE |= pwm_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 206:Generated_Source\PSoC4/pwm.c **** 
 207:Generated_Source\PSoC4/pwm.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 209:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CTRL_ENABLE;
 171              		.loc 1 209 0
 172 0004 0549     		ldr	r1, .L9
 173 0006 054B     		ldr	r3, .L9
 174 0008 1B78     		ldrb	r3, [r3]
 175 000a DBB2     		uxtb	r3, r3
 176 000c 8022     		mov	r2, #128
 177 000e 5242     		neg	r2, r2
 178 0010 1343     		orr	r3, r2
 179 0012 DBB2     		uxtb	r3, r3
 180 0014 0B70     		strb	r3, [r1]
 210:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 211:Generated_Source\PSoC4/pwm.c **** }
 181              		.loc 1 211 0
 182 0016 BD46     		mov	sp, r7
 183              		@ sp needed
 184 0018 80BD     		pop	{r7, pc}
 185              	.L10:
 186 001a C046     		.align	2
 187              	.L9:
 188 001c 73000F40 		.word	1074724979
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 8


 189              		.cfi_endproc
 190              	.LFE4:
 191              		.size	pwm_Enable, .-pwm_Enable
 192              		.section	.text.pwm_Stop,"ax",%progbits
 193              		.align	2
 194              		.global	pwm_Stop
 195              		.code	16
 196              		.thumb_func
 197              		.type	pwm_Stop, %function
 198              	pwm_Stop:
 199              	.LFB5:
 212:Generated_Source\PSoC4/pwm.c **** 
 213:Generated_Source\PSoC4/pwm.c **** 
 214:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Stop
 216:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 217:Generated_Source\PSoC4/pwm.c **** *
 218:Generated_Source\PSoC4/pwm.c **** * Summary:
 219:Generated_Source\PSoC4/pwm.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/pwm.c **** *  interrupts.
 221:Generated_Source\PSoC4/pwm.c **** *
 222:Generated_Source\PSoC4/pwm.c **** * Parameters:
 223:Generated_Source\PSoC4/pwm.c **** *  None
 224:Generated_Source\PSoC4/pwm.c **** *
 225:Generated_Source\PSoC4/pwm.c **** * Return:
 226:Generated_Source\PSoC4/pwm.c **** *  None
 227:Generated_Source\PSoC4/pwm.c **** *
 228:Generated_Source\PSoC4/pwm.c **** * Side Effects:
 229:Generated_Source\PSoC4/pwm.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/pwm.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/pwm.c **** *
 232:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/pwm.c **** void pwm_Stop(void) 
 234:Generated_Source\PSoC4/pwm.c **** {
 200              		.loc 1 234 0
 201              		.cfi_startproc
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 236:Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL &= ((uint8)(~pwm_CTRL_ENABLE));
 208              		.loc 1 236 0
 209 0004 044A     		ldr	r2, .L12
 210 0006 044B     		ldr	r3, .L12
 211 0008 1B78     		ldrb	r3, [r3]
 212 000a DBB2     		uxtb	r3, r3
 213 000c 7F21     		mov	r1, #127
 214 000e 0B40     		and	r3, r1
 215 0010 DBB2     		uxtb	r3, r3
 216 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 238:Generated_Source\PSoC4/pwm.c **** 
 239:Generated_Source\PSoC4/pwm.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 9


 241:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE &= ((uint8)(~pwm_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE &= ((uint8)(~pwm_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 244:Generated_Source\PSoC4/pwm.c **** }
 217              		.loc 1 244 0
 218 0014 BD46     		mov	sp, r7
 219              		@ sp needed
 220 0016 80BD     		pop	{r7, pc}
 221              	.L13:
 222              		.align	2
 223              	.L12:
 224 0018 73000F40 		.word	1074724979
 225              		.cfi_endproc
 226              	.LFE5:
 227              		.size	pwm_Stop, .-pwm_Stop
 228              		.section	.text.pwm_WriteCounter,"ax",%progbits
 229              		.align	2
 230              		.global	pwm_WriteCounter
 231              		.code	16
 232              		.thumb_func
 233              		.type	pwm_WriteCounter, %function
 234              	pwm_WriteCounter:
 235              	.LFB6:
 245:Generated_Source\PSoC4/pwm.c **** 
 246:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 247:Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 248:Generated_Source\PSoC4/pwm.c **** 
 249:Generated_Source\PSoC4/pwm.c **** 
 250:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode
 252:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/pwm.c ****         *
 254:Generated_Source\PSoC4/pwm.c ****         * Summary:
 255:Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/pwm.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/pwm.c ****         *
 258:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 259:Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/pwm.c ****         *
 262:Generated_Source\PSoC4/pwm.c ****         * Return:
 263:Generated_Source\PSoC4/pwm.c ****         *  None
 264:Generated_Source\PSoC4/pwm.c ****         *
 265:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/pwm.c ****         {
 268:Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 269:Generated_Source\PSoC4/pwm.c **** 
 270:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIF
 272:Generated_Source\PSoC4/pwm.c ****                 #else
 273:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/pwm.c **** 
 276:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 10


 279:Generated_Source\PSoC4/pwm.c ****             #elif (pwm_UseControl)
 280:Generated_Source\PSoC4/pwm.c **** 
 281:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHI
 283:Generated_Source\PSoC4/pwm.c ****                                                 pwm_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/pwm.c ****                 #else
 285:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/pwm.c **** 
 288:Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHI
 290:Generated_Source\PSoC4/pwm.c ****                                                pwm_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/pwm.c ****                 #else
 292:Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/pwm.c **** 
 295:Generated_Source\PSoC4/pwm.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~(pwm_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/pwm.c ****                                             pwm_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/pwm.c **** 
 300:Generated_Source\PSoC4/pwm.c ****             #else
 301:Generated_Source\PSoC4/pwm.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 303:Generated_Source\PSoC4/pwm.c ****         }
 304:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 305:Generated_Source\PSoC4/pwm.c **** 
 306:Generated_Source\PSoC4/pwm.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/pwm.c **** 
 308:Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 309:Generated_Source\PSoC4/pwm.c **** 
 310:Generated_Source\PSoC4/pwm.c **** 
 311:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode1
 313:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/pwm.c ****         *
 315:Generated_Source\PSoC4/pwm.c ****         * Summary:
 316:Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/pwm.c ****         *
 318:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 319:Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/pwm.c ****         *
 322:Generated_Source\PSoC4/pwm.c ****         * Return:
 323:Generated_Source\PSoC4/pwm.c ****         *  None
 324:Generated_Source\PSoC4/pwm.c ****         *
 325:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/pwm.c ****         {
 328:Generated_Source\PSoC4/pwm.c ****             #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIFT)) 
 330:Generated_Source\PSoC4/pwm.c ****                                            pwm_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/pwm.c ****             #else
 332:Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/pwm.c ****             #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/pwm.c **** 
 335:Generated_Source\PSoC4/pwm.c ****             #if (pwm_UseControl)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 11


 336:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UseControl) */
 339:Generated_Source\PSoC4/pwm.c ****         }
 340:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 341:Generated_Source\PSoC4/pwm.c **** 
 342:Generated_Source\PSoC4/pwm.c **** #if (pwm_CompareMode2SW)
 343:Generated_Source\PSoC4/pwm.c **** 
 344:Generated_Source\PSoC4/pwm.c **** 
 345:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetCompareMode2
 347:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/pwm.c ****     *
 349:Generated_Source\PSoC4/pwm.c ****     * Summary:
 350:Generated_Source\PSoC4/pwm.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/pwm.c ****     *
 352:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 353:Generated_Source\PSoC4/pwm.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/pwm.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/pwm.c ****     *
 356:Generated_Source\PSoC4/pwm.c ****     * Return:
 357:Generated_Source\PSoC4/pwm.c ****     *  None
 358:Generated_Source\PSoC4/pwm.c ****     *
 359:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/pwm.c ****     void pwm_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/pwm.c ****     {
 362:Generated_Source\PSoC4/pwm.c **** 
 363:Generated_Source\PSoC4/pwm.c ****         #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/pwm.c ****                                                  pwm_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/pwm.c ****         #else
 367:Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/pwm.c ****         #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/pwm.c **** 
 370:Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseControl)
 371:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseControl) */
 374:Generated_Source\PSoC4/pwm.c ****     }
 375:Generated_Source\PSoC4/pwm.c ****     #endif /*pwm_CompareMode2SW */
 376:Generated_Source\PSoC4/pwm.c **** 
 377:Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/pwm.c **** 
 379:Generated_Source\PSoC4/pwm.c **** 
 380:Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 381:Generated_Source\PSoC4/pwm.c **** 
 382:Generated_Source\PSoC4/pwm.c **** 
 383:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCounter
 385:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/pwm.c ****     *
 387:Generated_Source\PSoC4/pwm.c ****     * Summary:
 388:Generated_Source\PSoC4/pwm.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/pwm.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/pwm.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/pwm.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/pwm.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 12


 393:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 394:Generated_Source\PSoC4/pwm.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/pwm.c ****     *
 396:Generated_Source\PSoC4/pwm.c ****     * Return:
 397:Generated_Source\PSoC4/pwm.c ****     *  None
 398:Generated_Source\PSoC4/pwm.c ****     *
 399:Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 400:Generated_Source\PSoC4/pwm.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/pwm.c ****     *
 402:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/pwm.c ****                                        
 405:Generated_Source\PSoC4/pwm.c ****     {
 236              		.loc 1 405 0
 237              		.cfi_startproc
 238 0000 80B5     		push	{r7, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 82B0     		sub	sp, sp, #8
 243              		.cfi_def_cfa_offset 16
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
 246 0006 021C     		mov	r2, r0
 247 0008 FB1D     		add	r3, r7, #7
 248 000a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_COUNTER_LSB_PTR, counter);
 249              		.loc 1 406 0
 250 000c 034A     		ldr	r2, .L15
 251 000e FB1D     		add	r3, r7, #7
 252 0010 1B78     		ldrb	r3, [r3]
 253 0012 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC4/pwm.c ****     }
 254              		.loc 1 407 0
 255 0014 BD46     		mov	sp, r7
 256 0016 02B0     		add	sp, sp, #8
 257              		@ sp needed
 258 0018 80BD     		pop	{r7, pc}
 259              	.L16:
 260 001a C046     		.align	2
 261              	.L15:
 262 001c 03000F40 		.word	1074724867
 263              		.cfi_endproc
 264              	.LFE6:
 265              		.size	pwm_WriteCounter, .-pwm_WriteCounter
 266              		.section	.text.pwm_ReadCounter,"ax",%progbits
 267              		.align	2
 268              		.global	pwm_ReadCounter
 269              		.code	16
 270              		.thumb_func
 271              		.type	pwm_ReadCounter, %function
 272              	pwm_ReadCounter:
 273              	.LFB7:
 408:Generated_Source\PSoC4/pwm.c **** 
 409:Generated_Source\PSoC4/pwm.c **** 
 410:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCounter
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 13


 412:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/pwm.c ****     *
 414:Generated_Source\PSoC4/pwm.c ****     * Summary:
 415:Generated_Source\PSoC4/pwm.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/pwm.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/pwm.c ****     *
 418:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 419:Generated_Source\PSoC4/pwm.c ****     *  None
 420:Generated_Source\PSoC4/pwm.c ****     *
 421:Generated_Source\PSoC4/pwm.c ****     * Return:
 422:Generated_Source\PSoC4/pwm.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/pwm.c ****     *
 424:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCounter(void) 
 426:Generated_Source\PSoC4/pwm.c ****     {
 274              		.loc 1 426 0
 275              		.cfi_startproc
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/pwm.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/pwm.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/pwm.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/pwm.c ****           (void)CY_GET_REG8(pwm_COUNTERCAP_LSB_PTR_8BIT);
 282              		.loc 1 430 0
 283 0004 034B     		ldr	r3, .L19
 284 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/pwm.c **** 
 432:Generated_Source\PSoC4/pwm.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 285              		.loc 1 433 0
 286 0008 034B     		ldr	r3, .L19+4
 287 000a 1B78     		ldrb	r3, [r3]
 288 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC4/pwm.c ****     }
 289              		.loc 1 434 0
 290 000e 181C     		mov	r0, r3
 291 0010 BD46     		mov	sp, r7
 292              		@ sp needed
 293 0012 80BD     		pop	{r7, pc}
 294              	.L20:
 295              		.align	2
 296              	.L19:
 297 0014 13000F40 		.word	1074724883
 298 0018 53000F40 		.word	1074724947
 299              		.cfi_endproc
 300              	.LFE7:
 301              		.size	pwm_ReadCounter, .-pwm_ReadCounter
 302              		.section	.text.pwm_ClearFIFO,"ax",%progbits
 303              		.align	2
 304              		.global	pwm_ClearFIFO
 305              		.code	16
 306              		.thumb_func
 307              		.type	pwm_ClearFIFO, %function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 14


 308              	pwm_ClearFIFO:
 309              	.LFB8:
 435:Generated_Source\PSoC4/pwm.c **** 
 436:Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus)
 437:Generated_Source\PSoC4/pwm.c **** 
 438:Generated_Source\PSoC4/pwm.c **** 
 439:Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_ClearFIFO
 441:Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/pwm.c ****         *
 443:Generated_Source\PSoC4/pwm.c ****         * Summary:
 444:Generated_Source\PSoC4/pwm.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/pwm.c ****         *
 446:Generated_Source\PSoC4/pwm.c ****         * Parameters:
 447:Generated_Source\PSoC4/pwm.c ****         *  None
 448:Generated_Source\PSoC4/pwm.c ****         *
 449:Generated_Source\PSoC4/pwm.c ****         * Return:
 450:Generated_Source\PSoC4/pwm.c ****         *  None
 451:Generated_Source\PSoC4/pwm.c ****         *
 452:Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/pwm.c ****         void pwm_ClearFIFO(void) 
 454:Generated_Source\PSoC4/pwm.c ****         {
 310              		.loc 1 454 0
 311              		.cfi_startproc
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 318              		.loc 1 455 0
 319 0004 01E0     		b	.L22
 320              	.L23:
 456:Generated_Source\PSoC4/pwm.c ****             {
 457:Generated_Source\PSoC4/pwm.c ****                 (void)pwm_ReadCapture();
 321              		.loc 1 457 0
 322 0006 FFF7FEFF 		bl	pwm_ReadCapture
 323              	.L22:
 455:Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 324              		.loc 1 455 0
 325 000a FFF7FEFF 		bl	pwm_ReadStatusRegister
 326 000e 031C     		mov	r3, r0
 327 0010 1A1C     		mov	r2, r3
 328 0012 1023     		mov	r3, #16
 329 0014 1340     		and	r3, r2
 330 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC4/pwm.c ****             }
 459:Generated_Source\PSoC4/pwm.c ****         }
 331              		.loc 1 459 0
 332 0018 BD46     		mov	sp, r7
 333              		@ sp needed
 334 001a 80BD     		pop	{r7, pc}
 335              		.cfi_endproc
 336              	.LFE8:
 337              		.size	pwm_ClearFIFO, .-pwm_ClearFIFO
 338              		.section	.text.pwm_WritePeriod,"ax",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 15


 339              		.align	2
 340              		.global	pwm_WritePeriod
 341              		.code	16
 342              		.thumb_func
 343              		.type	pwm_WritePeriod, %function
 344              	pwm_WritePeriod:
 345              	.LFB9:
 460:Generated_Source\PSoC4/pwm.c **** 
 461:Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_UseStatus */
 462:Generated_Source\PSoC4/pwm.c **** 
 463:Generated_Source\PSoC4/pwm.c **** #endif /* !pwm_UsingFixedFunction */
 464:Generated_Source\PSoC4/pwm.c **** 
 465:Generated_Source\PSoC4/pwm.c **** 
 466:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_WritePeriod
 468:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 469:Generated_Source\PSoC4/pwm.c **** *
 470:Generated_Source\PSoC4/pwm.c **** * Summary:
 471:Generated_Source\PSoC4/pwm.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/pwm.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/pwm.c **** *
 474:Generated_Source\PSoC4/pwm.c **** * Parameters:
 475:Generated_Source\PSoC4/pwm.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/pwm.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/pwm.c **** *
 478:Generated_Source\PSoC4/pwm.c **** * Return:
 479:Generated_Source\PSoC4/pwm.c **** *  None
 480:Generated_Source\PSoC4/pwm.c **** *
 481:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/pwm.c **** void pwm_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/pwm.c **** {
 346              		.loc 1 483 0
 347              		.cfi_startproc
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 82B0     		sub	sp, sp, #8
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 021C     		mov	r2, r0
 357 0008 FB1D     		add	r3, r7, #7
 358 000a 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 485:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG16(pwm_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/pwm.c ****     #else
 487:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_PERIOD_LSB_PTR, period);
 359              		.loc 1 487 0
 360 000c 034A     		ldr	r2, .L25
 361 000e FB1D     		add	r3, r7, #7
 362 0010 1B78     		ldrb	r3, [r3]
 363 0012 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 489:Generated_Source\PSoC4/pwm.c **** }
 364              		.loc 1 489 0
 365 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 16


 366 0016 02B0     		add	sp, sp, #8
 367              		@ sp needed
 368 0018 80BD     		pop	{r7, pc}
 369              	.L26:
 370 001a C046     		.align	2
 371              	.L25:
 372 001c 43000F40 		.word	1074724931
 373              		.cfi_endproc
 374              	.LFE9:
 375              		.size	pwm_WritePeriod, .-pwm_WritePeriod
 376              		.section	.text.pwm_WriteCompare,"ax",%progbits
 377              		.align	2
 378              		.global	pwm_WriteCompare
 379              		.code	16
 380              		.thumb_func
 381              		.type	pwm_WriteCompare, %function
 382              	pwm_WriteCompare:
 383              	.LFB10:
 490:Generated_Source\PSoC4/pwm.c **** 
 491:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 492:Generated_Source\PSoC4/pwm.c **** 
 493:Generated_Source\PSoC4/pwm.c **** 
 494:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare
 496:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/pwm.c ****     *
 498:Generated_Source\PSoC4/pwm.c ****     * Summary:
 499:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/pwm.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/pwm.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/pwm.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/pwm.c ****     *
 505:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 506:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/pwm.c ****     *
 508:Generated_Source\PSoC4/pwm.c ****     * Return:
 509:Generated_Source\PSoC4/pwm.c ****     *  None
 510:Generated_Source\PSoC4/pwm.c ****     *
 511:Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 512:Generated_Source\PSoC4/pwm.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/pwm.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/pwm.c ****     *
 515:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/pwm.c ****                                        
 518:Generated_Source\PSoC4/pwm.c ****     {
 384              		.loc 1 518 0
 385              		.cfi_startproc
 386 0000 80B5     		push	{r7, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 82B0     		sub	sp, sp, #8
 391              		.cfi_def_cfa_offset 16
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 17


 394 0006 021C     		mov	r2, r0
 395 0008 FB1D     		add	r3, r7, #7
 396 000a 1A70     		strb	r2, [r3]
 519:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 520:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/pwm.c ****         #else
 522:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE1_LSB_PTR, compare);
 397              		.loc 1 522 0
 398 000c 034A     		ldr	r2, .L28
 399 000e FB1D     		add	r3, r7, #7
 400 0010 1B78     		ldrb	r3, [r3]
 401 0012 1370     		strb	r3, [r2]
 523:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 524:Generated_Source\PSoC4/pwm.c **** 
 525:Generated_Source\PSoC4/pwm.c ****         #if (pwm_PWMMode == pwm__B_PWM__DITHER)
 526:Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 527:Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG16(pwm_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/pwm.c ****             #else
 529:Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG8(pwm_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 531:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_PWMMode == pwm__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/pwm.c ****     }
 402              		.loc 1 532 0
 403 0014 BD46     		mov	sp, r7
 404 0016 02B0     		add	sp, sp, #8
 405              		@ sp needed
 406 0018 80BD     		pop	{r7, pc}
 407              	.L29:
 408 001a C046     		.align	2
 409              	.L28:
 410 001c 23000F40 		.word	1074724899
 411              		.cfi_endproc
 412              	.LFE10:
 413              		.size	pwm_WriteCompare, .-pwm_WriteCompare
 414              		.section	.text.pwm_SetInterruptMode,"ax",%progbits
 415              		.align	2
 416              		.global	pwm_SetInterruptMode
 417              		.code	16
 418              		.thumb_func
 419              		.type	pwm_SetInterruptMode, %function
 420              	pwm_SetInterruptMode:
 421              	.LFB11:
 533:Generated_Source\PSoC4/pwm.c **** 
 534:Generated_Source\PSoC4/pwm.c **** 
 535:Generated_Source\PSoC4/pwm.c **** #else
 536:Generated_Source\PSoC4/pwm.c **** 
 537:Generated_Source\PSoC4/pwm.c **** 
 538:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare1
 540:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/pwm.c ****     *
 542:Generated_Source\PSoC4/pwm.c ****     * Summary:
 543:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/pwm.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/pwm.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/pwm.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/pwm.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 18


 548:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 549:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/pwm.c ****     *
 551:Generated_Source\PSoC4/pwm.c ****     * Return:
 552:Generated_Source\PSoC4/pwm.c ****     *  None
 553:Generated_Source\PSoC4/pwm.c ****     *
 554:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/pwm.c ****                                         
 557:Generated_Source\PSoC4/pwm.c ****     {
 558:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 559:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/pwm.c ****         #else
 561:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 563:Generated_Source\PSoC4/pwm.c ****     }
 564:Generated_Source\PSoC4/pwm.c **** 
 565:Generated_Source\PSoC4/pwm.c **** 
 566:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare2
 568:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/pwm.c ****     *
 570:Generated_Source\PSoC4/pwm.c ****     * Summary:
 571:Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/pwm.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/pwm.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/pwm.c ****     *  mode.
 576:Generated_Source\PSoC4/pwm.c ****     *
 577:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 578:Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/pwm.c ****     *
 580:Generated_Source\PSoC4/pwm.c ****     * Return:
 581:Generated_Source\PSoC4/pwm.c ****     *  None
 582:Generated_Source\PSoC4/pwm.c ****     *
 583:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/pwm.c ****                                         
 586:Generated_Source\PSoC4/pwm.c ****     {
 587:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 588:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/pwm.c ****         #else
 590:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 592:Generated_Source\PSoC4/pwm.c ****     }
 593:Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/pwm.c **** 
 595:Generated_Source\PSoC4/pwm.c **** #if (pwm_DeadBandUsed)
 596:Generated_Source\PSoC4/pwm.c **** 
 597:Generated_Source\PSoC4/pwm.c **** 
 598:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteDeadTime
 600:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/pwm.c ****     *
 602:Generated_Source\PSoC4/pwm.c ****     * Summary:
 603:Generated_Source\PSoC4/pwm.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/pwm.c ****     *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 19


 605:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 606:Generated_Source\PSoC4/pwm.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/pwm.c ****     *
 608:Generated_Source\PSoC4/pwm.c ****     * Return:
 609:Generated_Source\PSoC4/pwm.c ****     *  None
 610:Generated_Source\PSoC4/pwm.c ****     *
 611:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/pwm.c ****     {
 614:Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 616:Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/pwm.c ****         #else
 618:Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/pwm.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/pwm.c ****             pwm_DEADBAND_COUNT &= ((uint8)(~pwm_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/pwm.c **** 
 622:Generated_Source\PSoC4/pwm.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << pwm_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/pwm.c ****                                                     pwm_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/pwm.c ****             #else
 627:Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= deadtime & pwm_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/pwm.c **** 
 630:Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 631:Generated_Source\PSoC4/pwm.c ****     }
 632:Generated_Source\PSoC4/pwm.c **** 
 633:Generated_Source\PSoC4/pwm.c **** 
 634:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadDeadTime
 636:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/pwm.c ****     *
 638:Generated_Source\PSoC4/pwm.c ****     * Summary:
 639:Generated_Source\PSoC4/pwm.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/pwm.c ****     *
 641:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 642:Generated_Source\PSoC4/pwm.c ****     *  None
 643:Generated_Source\PSoC4/pwm.c ****     *
 644:Generated_Source\PSoC4/pwm.c ****     * Return:
 645:Generated_Source\PSoC4/pwm.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/pwm.c ****     *
 647:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/pwm.c ****     {
 650:Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 652:Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/pwm.c ****         #else
 654:Generated_Source\PSoC4/pwm.c **** 
 655:Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/pwm.c ****                 return ((uint8)(((uint8)(pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/pwm.c ****                                                                            pwm_DEADBAND_COUNT_SHIFT
 659:Generated_Source\PSoC4/pwm.c ****             #else
 660:Generated_Source\PSoC4/pwm.c ****                 return (pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 20


 662:Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 663:Generated_Source\PSoC4/pwm.c ****     }
 664:Generated_Source\PSoC4/pwm.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/pwm.c **** 
 666:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseStatus || pwm_UsingFixedFunction)
 667:Generated_Source\PSoC4/pwm.c **** 
 668:Generated_Source\PSoC4/pwm.c **** 
 669:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetInterruptMode
 671:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/pwm.c ****     *
 673:Generated_Source\PSoC4/pwm.c ****     * Summary:
 674:Generated_Source\PSoC4/pwm.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/pwm.c ****     *  source status register.
 676:Generated_Source\PSoC4/pwm.c ****     *
 677:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 678:Generated_Source\PSoC4/pwm.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/pwm.c ****     *
 680:Generated_Source\PSoC4/pwm.c ****     * Return:
 681:Generated_Source\PSoC4/pwm.c ****     *  None
 682:Generated_Source\PSoC4/pwm.c ****     *
 683:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/pwm.c ****     void pwm_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/pwm.c ****     {
 422              		.loc 1 685 0
 423              		.cfi_startproc
 424 0000 80B5     		push	{r7, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 82B0     		sub	sp, sp, #8
 429              		.cfi_def_cfa_offset 16
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 432 0006 021C     		mov	r2, r0
 433 0008 FB1D     		add	r3, r7, #7
 434 000a 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_STATUS_MASK_PTR, interruptMode);
 435              		.loc 1 686 0
 436 000c 034A     		ldr	r2, .L31
 437 000e FB1D     		add	r3, r7, #7
 438 0010 1B78     		ldrb	r3, [r3]
 439 0012 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/pwm.c ****     }
 440              		.loc 1 687 0
 441 0014 BD46     		mov	sp, r7
 442 0016 02B0     		add	sp, sp, #8
 443              		@ sp needed
 444 0018 80BD     		pop	{r7, pc}
 445              	.L32:
 446 001a C046     		.align	2
 447              	.L31:
 448 001c 83000F40 		.word	1074724995
 449              		.cfi_endproc
 450              	.LFE11:
 451              		.size	pwm_SetInterruptMode, .-pwm_SetInterruptMode
 452              		.section	.text.pwm_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 21


 453              		.align	2
 454              		.global	pwm_ReadStatusRegister
 455              		.code	16
 456              		.thumb_func
 457              		.type	pwm_ReadStatusRegister, %function
 458              	pwm_ReadStatusRegister:
 459              	.LFB12:
 688:Generated_Source\PSoC4/pwm.c **** 
 689:Generated_Source\PSoC4/pwm.c **** 
 690:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadStatusRegister
 692:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/pwm.c ****     *
 694:Generated_Source\PSoC4/pwm.c ****     * Summary:
 695:Generated_Source\PSoC4/pwm.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/pwm.c ****     *
 697:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 698:Generated_Source\PSoC4/pwm.c ****     *  None
 699:Generated_Source\PSoC4/pwm.c ****     *
 700:Generated_Source\PSoC4/pwm.c ****     * Return:
 701:Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/pwm.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/pwm.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/pwm.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/pwm.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/pwm.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/pwm.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/pwm.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/pwm.c ****     *
 710:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/pwm.c ****     {
 460              		.loc 1 712 0
 461              		.cfi_startproc
 462 0000 80B5     		push	{r7, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 00AF     		add	r7, sp, #0
 467              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_STATUS_PTR));
 468              		.loc 1 713 0
 469 0004 024B     		ldr	r3, .L35
 470 0006 1B78     		ldrb	r3, [r3]
 471 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC4/pwm.c ****     }
 472              		.loc 1 714 0
 473 000a 181C     		mov	r0, r3
 474 000c BD46     		mov	sp, r7
 475              		@ sp needed
 476 000e 80BD     		pop	{r7, pc}
 477              	.L36:
 478              		.align	2
 479              	.L35:
 480 0010 63000F40 		.word	1074724963
 481              		.cfi_endproc
 482              	.LFE12:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 22


 483              		.size	pwm_ReadStatusRegister, .-pwm_ReadStatusRegister
 484              		.section	.text.pwm_ReadControlRegister,"ax",%progbits
 485              		.align	2
 486              		.global	pwm_ReadControlRegister
 487              		.code	16
 488              		.thumb_func
 489              		.type	pwm_ReadControlRegister, %function
 490              	pwm_ReadControlRegister:
 491              	.LFB13:
 715:Generated_Source\PSoC4/pwm.c **** 
 716:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 717:Generated_Source\PSoC4/pwm.c **** 
 718:Generated_Source\PSoC4/pwm.c **** 
 719:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseControl)
 720:Generated_Source\PSoC4/pwm.c **** 
 721:Generated_Source\PSoC4/pwm.c **** 
 722:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadControlRegister
 724:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/pwm.c ****     *
 726:Generated_Source\PSoC4/pwm.c ****     * Summary:
 727:Generated_Source\PSoC4/pwm.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/pwm.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/pwm.c ****     *
 730:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 731:Generated_Source\PSoC4/pwm.c ****     *  None
 732:Generated_Source\PSoC4/pwm.c ****     *
 733:Generated_Source\PSoC4/pwm.c ****     * Return:
 734:Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/pwm.c ****     *
 736:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/pwm.c ****     {
 492              		.loc 1 738 0
 493              		.cfi_startproc
 494 0000 80B5     		push	{r7, lr}
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 82B0     		sub	sp, sp, #8
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/pwm.c ****         uint8 result;
 740:Generated_Source\PSoC4/pwm.c **** 
 741:Generated_Source\PSoC4/pwm.c ****         result = CY_GET_REG8(pwm_CONTROL_PTR);
 502              		.loc 1 741 0
 503 0006 054A     		ldr	r2, .L39
 504 0008 FB1D     		add	r3, r7, #7
 505 000a 1278     		ldrb	r2, [r2]
 506 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/pwm.c ****         return (result);
 507              		.loc 1 742 0
 508 000e FB1D     		add	r3, r7, #7
 509 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/pwm.c ****     }
 510              		.loc 1 743 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 23


 511 0012 181C     		mov	r0, r3
 512 0014 BD46     		mov	sp, r7
 513 0016 02B0     		add	sp, sp, #8
 514              		@ sp needed
 515 0018 80BD     		pop	{r7, pc}
 516              	.L40:
 517 001a C046     		.align	2
 518              	.L39:
 519 001c 73000F40 		.word	1074724979
 520              		.cfi_endproc
 521              	.LFE13:
 522              		.size	pwm_ReadControlRegister, .-pwm_ReadControlRegister
 523              		.section	.text.pwm_WriteControlRegister,"ax",%progbits
 524              		.align	2
 525              		.global	pwm_WriteControlRegister
 526              		.code	16
 527              		.thumb_func
 528              		.type	pwm_WriteControlRegister, %function
 529              	pwm_WriteControlRegister:
 530              	.LFB14:
 744:Generated_Source\PSoC4/pwm.c **** 
 745:Generated_Source\PSoC4/pwm.c **** 
 746:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteControlRegister
 748:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/pwm.c ****     *
 750:Generated_Source\PSoC4/pwm.c ****     * Summary:
 751:Generated_Source\PSoC4/pwm.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/pwm.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/pwm.c ****     *
 754:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 755:Generated_Source\PSoC4/pwm.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/pwm.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/pwm.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/pwm.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/pwm.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/pwm.c ****     *
 761:Generated_Source\PSoC4/pwm.c ****     * Return:
 762:Generated_Source\PSoC4/pwm.c ****     *  None
 763:Generated_Source\PSoC4/pwm.c ****     *
 764:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/pwm.c ****     void pwm_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/pwm.c ****     {
 531              		.loc 1 766 0
 532              		.cfi_startproc
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 82B0     		sub	sp, sp, #8
 538              		.cfi_def_cfa_offset 16
 539 0004 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 541 0006 021C     		mov	r2, r0
 542 0008 FB1D     		add	r3, r7, #7
 543 000a 1A70     		strb	r2, [r3]
 767:Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_CONTROL_PTR, control);
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 24


 544              		.loc 1 767 0
 545 000c 034A     		ldr	r2, .L42
 546 000e FB1D     		add	r3, r7, #7
 547 0010 1B78     		ldrb	r3, [r3]
 548 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/pwm.c ****     }
 549              		.loc 1 768 0
 550 0014 BD46     		mov	sp, r7
 551 0016 02B0     		add	sp, sp, #8
 552              		@ sp needed
 553 0018 80BD     		pop	{r7, pc}
 554              	.L43:
 555 001a C046     		.align	2
 556              	.L42:
 557 001c 73000F40 		.word	1074724979
 558              		.cfi_endproc
 559              	.LFE14:
 560              		.size	pwm_WriteControlRegister, .-pwm_WriteControlRegister
 561              		.section	.text.pwm_ReadCapture,"ax",%progbits
 562              		.align	2
 563              		.global	pwm_ReadCapture
 564              		.code	16
 565              		.thumb_func
 566              		.type	pwm_ReadCapture, %function
 567              	pwm_ReadCapture:
 568              	.LFB15:
 769:Generated_Source\PSoC4/pwm.c **** 
 770:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseControl) */
 771:Generated_Source\PSoC4/pwm.c **** 
 772:Generated_Source\PSoC4/pwm.c **** 
 773:Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 774:Generated_Source\PSoC4/pwm.c **** 
 775:Generated_Source\PSoC4/pwm.c **** 
 776:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCapture
 778:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/pwm.c ****     *
 780:Generated_Source\PSoC4/pwm.c ****     * Summary:
 781:Generated_Source\PSoC4/pwm.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/pwm.c ****     *
 783:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 784:Generated_Source\PSoC4/pwm.c ****     *  None
 785:Generated_Source\PSoC4/pwm.c ****     *
 786:Generated_Source\PSoC4/pwm.c ****     * Return:
 787:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/pwm.c ****     *
 789:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCapture(void) 
 791:Generated_Source\PSoC4/pwm.c ****     {
 569              		.loc 1 791 0
 570              		.cfi_startproc
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 25


 792:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_CAPTURE_LSB_PTR));
 577              		.loc 1 792 0
 578 0004 024B     		ldr	r3, .L46
 579 0006 1B78     		ldrb	r3, [r3]
 580 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC4/pwm.c ****     }
 581              		.loc 1 793 0
 582 000a 181C     		mov	r0, r3
 583 000c BD46     		mov	sp, r7
 584              		@ sp needed
 585 000e 80BD     		pop	{r7, pc}
 586              	.L47:
 587              		.align	2
 588              	.L46:
 589 0010 53000F40 		.word	1074724947
 590              		.cfi_endproc
 591              	.LFE15:
 592              		.size	pwm_ReadCapture, .-pwm_ReadCapture
 593              		.section	.text.pwm_ReadCompare,"ax",%progbits
 594              		.align	2
 595              		.global	pwm_ReadCompare
 596              		.code	16
 597              		.thumb_func
 598              		.type	pwm_ReadCompare, %function
 599              	pwm_ReadCompare:
 600              	.LFB16:
 794:Generated_Source\PSoC4/pwm.c **** 
 795:Generated_Source\PSoC4/pwm.c **** #endif /* (!pwm_UsingFixedFunction) */
 796:Generated_Source\PSoC4/pwm.c **** 
 797:Generated_Source\PSoC4/pwm.c **** 
 798:Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 799:Generated_Source\PSoC4/pwm.c **** 
 800:Generated_Source\PSoC4/pwm.c **** 
 801:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare
 803:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/pwm.c ****     *
 805:Generated_Source\PSoC4/pwm.c ****     * Summary:
 806:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/pwm.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/pwm.c ****     *
 809:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 810:Generated_Source\PSoC4/pwm.c ****     *  None
 811:Generated_Source\PSoC4/pwm.c ****     *
 812:Generated_Source\PSoC4/pwm.c ****     * Return:
 813:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/pwm.c ****     *
 815:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare(void) 
 817:Generated_Source\PSoC4/pwm.c ****     {
 601              		.loc 1 817 0
 602              		.cfi_startproc
 603 0000 80B5     		push	{r7, lr}
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 26


 608              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 819:Generated_Source\PSoC4/pwm.c ****             return ((uint8)CY_GET_REG16(pwm_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/pwm.c ****         #else
 821:Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_COMPARE1_LSB_PTR));
 609              		.loc 1 821 0
 610 0004 024B     		ldr	r3, .L50
 611 0006 1B78     		ldrb	r3, [r3]
 612 0008 DBB2     		uxtb	r3, r3
 822:Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 823:Generated_Source\PSoC4/pwm.c ****     }
 613              		.loc 1 823 0
 614 000a 181C     		mov	r0, r3
 615 000c BD46     		mov	sp, r7
 616              		@ sp needed
 617 000e 80BD     		pop	{r7, pc}
 618              	.L51:
 619              		.align	2
 620              	.L50:
 621 0010 23000F40 		.word	1074724899
 622              		.cfi_endproc
 623              	.LFE16:
 624              		.size	pwm_ReadCompare, .-pwm_ReadCompare
 625              		.section	.text.pwm_ReadPeriod,"ax",%progbits
 626              		.align	2
 627              		.global	pwm_ReadPeriod
 628              		.code	16
 629              		.thumb_func
 630              		.type	pwm_ReadPeriod, %function
 631              	pwm_ReadPeriod:
 632              	.LFB17:
 824:Generated_Source\PSoC4/pwm.c **** 
 825:Generated_Source\PSoC4/pwm.c **** #else
 826:Generated_Source\PSoC4/pwm.c **** 
 827:Generated_Source\PSoC4/pwm.c **** 
 828:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare1
 830:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/pwm.c ****     *
 832:Generated_Source\PSoC4/pwm.c ****     * Summary:
 833:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/pwm.c ****     *
 835:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 836:Generated_Source\PSoC4/pwm.c ****     *  None
 837:Generated_Source\PSoC4/pwm.c ****     *
 838:Generated_Source\PSoC4/pwm.c ****     * Return:
 839:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/pwm.c ****     *
 841:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare1(void) 
 843:Generated_Source\PSoC4/pwm.c ****     {
 844:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/pwm.c ****     }
 846:Generated_Source\PSoC4/pwm.c **** 
 847:Generated_Source\PSoC4/pwm.c **** 
 848:Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 27


 850:Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/pwm.c ****     *
 852:Generated_Source\PSoC4/pwm.c ****     * Summary:
 853:Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/pwm.c ****     *
 855:Generated_Source\PSoC4/pwm.c ****     * Parameters:
 856:Generated_Source\PSoC4/pwm.c ****     *  None
 857:Generated_Source\PSoC4/pwm.c ****     *
 858:Generated_Source\PSoC4/pwm.c ****     * Return:
 859:Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/pwm.c ****     *
 861:Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadCompare2(void) 
 863:Generated_Source\PSoC4/pwm.c ****     {
 864:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC4/pwm.c ****     }
 866:Generated_Source\PSoC4/pwm.c **** 
 867:Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseOneCompareMode) */
 868:Generated_Source\PSoC4/pwm.c **** 
 869:Generated_Source\PSoC4/pwm.c **** 
 870:Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_ReadPeriod
 872:Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 873:Generated_Source\PSoC4/pwm.c **** *
 874:Generated_Source\PSoC4/pwm.c **** * Summary:
 875:Generated_Source\PSoC4/pwm.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/pwm.c **** *
 877:Generated_Source\PSoC4/pwm.c **** * Parameters:
 878:Generated_Source\PSoC4/pwm.c **** *  None
 879:Generated_Source\PSoC4/pwm.c **** *
 880:Generated_Source\PSoC4/pwm.c **** * Return:
 881:Generated_Source\PSoC4/pwm.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/pwm.c **** *
 883:Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/pwm.c **** uint8 pwm_ReadPeriod(void) 
 885:Generated_Source\PSoC4/pwm.c **** {
 633              		.loc 1 885 0
 634              		.cfi_startproc
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 887:Generated_Source\PSoC4/pwm.c ****         return ((uint8)CY_GET_REG16(pwm_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/pwm.c ****     #else
 889:Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_PERIOD_LSB_PTR));
 641              		.loc 1 889 0
 642 0004 024B     		ldr	r3, .L54
 643 0006 1B78     		ldrb	r3, [r3]
 644 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 891:Generated_Source\PSoC4/pwm.c **** }
 645              		.loc 1 891 0
 646 000a 181C     		mov	r0, r3
 647 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 28


 648              		@ sp needed
 649 000e 80BD     		pop	{r7, pc}
 650              	.L55:
 651              		.align	2
 652              	.L54:
 653 0010 43000F40 		.word	1074724931
 654              		.cfi_endproc
 655              	.LFE17:
 656              		.size	pwm_ReadPeriod, .-pwm_ReadPeriod
 657              		.text
 658              	.Letext0:
 659              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 660              		.section	.debug_info,"",%progbits
 661              	.Ldebug_info0:
 662 0000 7F020000 		.4byte	0x27f
 663 0004 0400     		.2byte	0x4
 664 0006 00000000 		.4byte	.Ldebug_abbrev0
 665 000a 04       		.byte	0x4
 666 000b 01       		.uleb128 0x1
 667 000c 59010000 		.4byte	.LASF38
 668 0010 01       		.byte	0x1
 669 0011 F4010000 		.4byte	.LASF39
 670 0015 4F000000 		.4byte	.LASF40
 671 0019 00000000 		.4byte	.Ldebug_ranges0+0
 672 001d 00000000 		.4byte	0
 673 0021 00000000 		.4byte	.Ldebug_line0
 674 0025 02       		.uleb128 0x2
 675 0026 01       		.byte	0x1
 676 0027 06       		.byte	0x6
 677 0028 ED020000 		.4byte	.LASF0
 678 002c 02       		.uleb128 0x2
 679 002d 01       		.byte	0x1
 680 002e 08       		.byte	0x8
 681 002f FA000000 		.4byte	.LASF1
 682 0033 02       		.uleb128 0x2
 683 0034 02       		.byte	0x2
 684 0035 05       		.byte	0x5
 685 0036 9C020000 		.4byte	.LASF2
 686 003a 02       		.uleb128 0x2
 687 003b 02       		.byte	0x2
 688 003c 07       		.byte	0x7
 689 003d 17000000 		.4byte	.LASF3
 690 0041 02       		.uleb128 0x2
 691 0042 04       		.byte	0x4
 692 0043 05       		.byte	0x5
 693 0044 D5020000 		.4byte	.LASF4
 694 0048 02       		.uleb128 0x2
 695 0049 04       		.byte	0x4
 696 004a 07       		.byte	0x7
 697 004b 0D010000 		.4byte	.LASF5
 698 004f 02       		.uleb128 0x2
 699 0050 08       		.byte	0x8
 700 0051 05       		.byte	0x5
 701 0052 67020000 		.4byte	.LASF6
 702 0056 02       		.uleb128 0x2
 703 0057 08       		.byte	0x8
 704 0058 07       		.byte	0x7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 29


 705 0059 11020000 		.4byte	.LASF7
 706 005d 03       		.uleb128 0x3
 707 005e 04       		.byte	0x4
 708 005f 05       		.byte	0x5
 709 0060 696E7400 		.ascii	"int\000"
 710 0064 02       		.uleb128 0x2
 711 0065 04       		.byte	0x4
 712 0066 07       		.byte	0x7
 713 0067 E7010000 		.4byte	.LASF8
 714 006b 04       		.uleb128 0x4
 715 006c 2B010000 		.4byte	.LASF12
 716 0070 02       		.byte	0x2
 717 0071 9801     		.2byte	0x198
 718 0073 2C000000 		.4byte	0x2c
 719 0077 02       		.uleb128 0x2
 720 0078 04       		.byte	0x4
 721 0079 04       		.byte	0x4
 722 007a DB000000 		.4byte	.LASF9
 723 007e 02       		.uleb128 0x2
 724 007f 08       		.byte	0x8
 725 0080 04       		.byte	0x4
 726 0081 52010000 		.4byte	.LASF10
 727 0085 02       		.uleb128 0x2
 728 0086 01       		.byte	0x1
 729 0087 08       		.byte	0x8
 730 0088 DE020000 		.4byte	.LASF11
 731 008c 04       		.uleb128 0x4
 732 008d 08010000 		.4byte	.LASF13
 733 0091 02       		.byte	0x2
 734 0092 4202     		.2byte	0x242
 735 0094 98000000 		.4byte	0x98
 736 0098 05       		.uleb128 0x5
 737 0099 6B000000 		.4byte	0x6b
 738 009d 02       		.uleb128 0x2
 739 009e 04       		.byte	0x4
 740 009f 07       		.byte	0x7
 741 00a0 5E020000 		.4byte	.LASF14
 742 00a4 06       		.uleb128 0x6
 743 00a5 E3020000 		.4byte	.LASF17
 744 00a9 01       		.byte	0x1
 745 00aa 37       		.byte	0x37
 746 00ab 00000000 		.4byte	.LFB2
 747 00af 24000000 		.4byte	.LFE2-.LFB2
 748 00b3 01       		.uleb128 0x1
 749 00b4 9C       		.byte	0x9c
 750 00b5 07       		.uleb128 0x7
 751 00b6 49010000 		.4byte	.LASF20
 752 00ba 01       		.byte	0x1
 753 00bb 54       		.byte	0x54
 754 00bc 00000000 		.4byte	.LFB3
 755 00c0 80000000 		.4byte	.LFE3-.LFB3
 756 00c4 01       		.uleb128 0x1
 757 00c5 9C       		.byte	0x9c
 758 00c6 E7000000 		.4byte	0xe7
 759 00ca 08       		.uleb128 0x8
 760 00cb 59020000 		.4byte	.LASF15
 761 00cf 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 30


 762 00d0 57       		.byte	0x57
 763 00d1 6B000000 		.4byte	0x6b
 764 00d5 02       		.uleb128 0x2
 765 00d6 91       		.byte	0x91
 766 00d7 6F       		.sleb128 -17
 767 00d8 08       		.uleb128 0x8
 768 00d9 01030000 		.4byte	.LASF16
 769 00dd 01       		.byte	0x1
 770 00de 5D       		.byte	0x5d
 771 00df 6B000000 		.4byte	0x6b
 772 00e3 02       		.uleb128 0x2
 773 00e4 91       		.byte	0x91
 774 00e5 6E       		.sleb128 -18
 775 00e6 00       		.byte	0
 776 00e7 09       		.uleb128 0x9
 777 00e8 A6020000 		.4byte	.LASF18
 778 00ec 01       		.byte	0x1
 779 00ed C7       		.byte	0xc7
 780 00ee 00000000 		.4byte	.LFB4
 781 00f2 20000000 		.4byte	.LFE4-.LFB4
 782 00f6 01       		.uleb128 0x1
 783 00f7 9C       		.byte	0x9c
 784 00f8 09       		.uleb128 0x9
 785 00f9 93020000 		.4byte	.LASF19
 786 00fd 01       		.byte	0x1
 787 00fe E9       		.byte	0xe9
 788 00ff 00000000 		.4byte	.LFB5
 789 0103 1C000000 		.4byte	.LFE5-.LFB5
 790 0107 01       		.uleb128 0x1
 791 0108 9C       		.byte	0x9c
 792 0109 0A       		.uleb128 0xa
 793 010a 2F020000 		.4byte	.LASF21
 794 010e 01       		.byte	0x1
 795 010f 9301     		.2byte	0x193
 796 0111 00000000 		.4byte	.LFB6
 797 0115 20000000 		.4byte	.LFE6-.LFB6
 798 0119 01       		.uleb128 0x1
 799 011a 9C       		.byte	0x9c
 800 011b 2F010000 		.4byte	0x12f
 801 011f 0B       		.uleb128 0xb
 802 0120 E1000000 		.4byte	.LASF24
 803 0124 01       		.byte	0x1
 804 0125 9301     		.2byte	0x193
 805 0127 6B000000 		.4byte	0x6b
 806 012b 02       		.uleb128 0x2
 807 012c 91       		.byte	0x91
 808 012d 77       		.sleb128 -9
 809 012e 00       		.byte	0
 810 012f 0C       		.uleb128 0xc
 811 0130 39010000 		.4byte	.LASF30
 812 0134 01       		.byte	0x1
 813 0135 A901     		.2byte	0x1a9
 814 0137 6B000000 		.4byte	0x6b
 815 013b 00000000 		.4byte	.LFB7
 816 013f 1C000000 		.4byte	.LFE7-.LFB7
 817 0143 01       		.uleb128 0x1
 818 0144 9C       		.byte	0x9c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 31


 819 0145 0D       		.uleb128 0xd
 820 0146 2A000000 		.4byte	.LASF22
 821 014a 01       		.byte	0x1
 822 014b C501     		.2byte	0x1c5
 823 014d 00000000 		.4byte	.LFB8
 824 0151 1C000000 		.4byte	.LFE8-.LFB8
 825 0155 01       		.uleb128 0x1
 826 0156 9C       		.byte	0x9c
 827 0157 0A       		.uleb128 0xa
 828 0158 75020000 		.4byte	.LASF23
 829 015c 01       		.byte	0x1
 830 015d E201     		.2byte	0x1e2
 831 015f 00000000 		.4byte	.LFB9
 832 0163 20000000 		.4byte	.LFE9-.LFB9
 833 0167 01       		.uleb128 0x1
 834 0168 9C       		.byte	0x9c
 835 0169 7D010000 		.4byte	0x17d
 836 016d 0B       		.uleb128 0xb
 837 016e 10000000 		.4byte	.LASF25
 838 0172 01       		.byte	0x1
 839 0173 E201     		.2byte	0x1e2
 840 0175 6B000000 		.4byte	0x6b
 841 0179 02       		.uleb128 0x2
 842 017a 91       		.byte	0x91
 843 017b 77       		.sleb128 -9
 844 017c 00       		.byte	0
 845 017d 0A       		.uleb128 0xa
 846 017e E9000000 		.4byte	.LASF26
 847 0182 01       		.byte	0x1
 848 0183 0402     		.2byte	0x204
 849 0185 00000000 		.4byte	.LFB10
 850 0189 20000000 		.4byte	.LFE10-.LFB10
 851 018d 01       		.uleb128 0x1
 852 018e 9C       		.byte	0x9c
 853 018f A3010000 		.4byte	0x1a3
 854 0193 0B       		.uleb128 0xb
 855 0194 F9020000 		.4byte	.LASF27
 856 0198 01       		.byte	0x1
 857 0199 0402     		.2byte	0x204
 858 019b 6B000000 		.4byte	0x6b
 859 019f 02       		.uleb128 0x2
 860 01a0 91       		.byte	0x91
 861 01a1 77       		.sleb128 -9
 862 01a2 00       		.byte	0
 863 01a3 0A       		.uleb128 0xa
 864 01a4 C0020000 		.4byte	.LASF28
 865 01a8 01       		.byte	0x1
 866 01a9 AC02     		.2byte	0x2ac
 867 01ab 00000000 		.4byte	.LFB11
 868 01af 20000000 		.4byte	.LFE11-.LFB11
 869 01b3 01       		.uleb128 0x1
 870 01b4 9C       		.byte	0x9c
 871 01b5 C9010000 		.4byte	0x1c9
 872 01b9 0B       		.uleb128 0xb
 873 01ba 85020000 		.4byte	.LASF29
 874 01be 01       		.byte	0x1
 875 01bf AC02     		.2byte	0x2ac
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 32


 876 01c1 6B000000 		.4byte	0x6b
 877 01c5 02       		.uleb128 0x2
 878 01c6 91       		.byte	0x91
 879 01c7 77       		.sleb128 -9
 880 01c8 00       		.byte	0
 881 01c9 0C       		.uleb128 0xc
 882 01ca 38000000 		.4byte	.LASF31
 883 01ce 01       		.byte	0x1
 884 01cf C702     		.2byte	0x2c7
 885 01d1 6B000000 		.4byte	0x6b
 886 01d5 00000000 		.4byte	.LFB12
 887 01d9 14000000 		.4byte	.LFE12-.LFB12
 888 01dd 01       		.uleb128 0x1
 889 01de 9C       		.byte	0x9c
 890 01df 0E       		.uleb128 0xe
 891 01e0 B3000000 		.4byte	.LASF41
 892 01e4 01       		.byte	0x1
 893 01e5 E102     		.2byte	0x2e1
 894 01e7 6B000000 		.4byte	0x6b
 895 01eb 00000000 		.4byte	.LFB13
 896 01ef 20000000 		.4byte	.LFE13-.LFB13
 897 01f3 01       		.uleb128 0x1
 898 01f4 9C       		.byte	0x9c
 899 01f5 09020000 		.4byte	0x209
 900 01f9 0F       		.uleb128 0xf
 901 01fa 28020000 		.4byte	.LASF32
 902 01fe 01       		.byte	0x1
 903 01ff E302     		.2byte	0x2e3
 904 0201 6B000000 		.4byte	0x6b
 905 0205 02       		.uleb128 0x2
 906 0206 91       		.byte	0x91
 907 0207 77       		.sleb128 -9
 908 0208 00       		.byte	0
 909 0209 0A       		.uleb128 0xa
 910 020a 40020000 		.4byte	.LASF33
 911 020e 01       		.byte	0x1
 912 020f FD02     		.2byte	0x2fd
 913 0211 00000000 		.4byte	.LFB14
 914 0215 20000000 		.4byte	.LFE14-.LFB14
 915 0219 01       		.uleb128 0x1
 916 021a 9C       		.byte	0x9c
 917 021b 2F020000 		.4byte	0x22f
 918 021f 0B       		.uleb128 0xb
 919 0220 31010000 		.4byte	.LASF34
 920 0224 01       		.byte	0x1
 921 0225 FD02     		.2byte	0x2fd
 922 0227 6B000000 		.4byte	0x6b
 923 022b 02       		.uleb128 0x2
 924 022c 91       		.byte	0x91
 925 022d 77       		.sleb128 -9
 926 022e 00       		.byte	0
 927 022f 0C       		.uleb128 0xc
 928 0230 CB000000 		.4byte	.LASF35
 929 0234 01       		.byte	0x1
 930 0235 1603     		.2byte	0x316
 931 0237 6B000000 		.4byte	0x6b
 932 023b 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 33


 933 023f 14000000 		.4byte	.LFE15-.LFB15
 934 0243 01       		.uleb128 0x1
 935 0244 9C       		.byte	0x9c
 936 0245 0C       		.uleb128 0xc
 937 0246 00000000 		.4byte	.LASF36
 938 024a 01       		.byte	0x1
 939 024b 3003     		.2byte	0x330
 940 024d 6B000000 		.4byte	0x6b
 941 0251 00000000 		.4byte	.LFB16
 942 0255 14000000 		.4byte	.LFE16-.LFB16
 943 0259 01       		.uleb128 0x1
 944 025a 9C       		.byte	0x9c
 945 025b 0C       		.uleb128 0xc
 946 025c B1020000 		.4byte	.LASF37
 947 0260 01       		.byte	0x1
 948 0261 7403     		.2byte	0x374
 949 0263 6B000000 		.4byte	0x6b
 950 0267 00000000 		.4byte	.LFB17
 951 026b 14000000 		.4byte	.LFE17-.LFB17
 952 026f 01       		.uleb128 0x1
 953 0270 9C       		.byte	0x9c
 954 0271 10       		.uleb128 0x10
 955 0272 1F010000 		.4byte	.LASF42
 956 0276 01       		.byte	0x1
 957 0277 20       		.byte	0x20
 958 0278 6B000000 		.4byte	0x6b
 959 027c 05       		.uleb128 0x5
 960 027d 03       		.byte	0x3
 961 027e 00000000 		.4byte	pwm_initVar
 962 0282 00       		.byte	0
 963              		.section	.debug_abbrev,"",%progbits
 964              	.Ldebug_abbrev0:
 965 0000 01       		.uleb128 0x1
 966 0001 11       		.uleb128 0x11
 967 0002 01       		.byte	0x1
 968 0003 25       		.uleb128 0x25
 969 0004 0E       		.uleb128 0xe
 970 0005 13       		.uleb128 0x13
 971 0006 0B       		.uleb128 0xb
 972 0007 03       		.uleb128 0x3
 973 0008 0E       		.uleb128 0xe
 974 0009 1B       		.uleb128 0x1b
 975 000a 0E       		.uleb128 0xe
 976 000b 55       		.uleb128 0x55
 977 000c 17       		.uleb128 0x17
 978 000d 11       		.uleb128 0x11
 979 000e 01       		.uleb128 0x1
 980 000f 10       		.uleb128 0x10
 981 0010 17       		.uleb128 0x17
 982 0011 00       		.byte	0
 983 0012 00       		.byte	0
 984 0013 02       		.uleb128 0x2
 985 0014 24       		.uleb128 0x24
 986 0015 00       		.byte	0
 987 0016 0B       		.uleb128 0xb
 988 0017 0B       		.uleb128 0xb
 989 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 34


 990 0019 0B       		.uleb128 0xb
 991 001a 03       		.uleb128 0x3
 992 001b 0E       		.uleb128 0xe
 993 001c 00       		.byte	0
 994 001d 00       		.byte	0
 995 001e 03       		.uleb128 0x3
 996 001f 24       		.uleb128 0x24
 997 0020 00       		.byte	0
 998 0021 0B       		.uleb128 0xb
 999 0022 0B       		.uleb128 0xb
 1000 0023 3E       		.uleb128 0x3e
 1001 0024 0B       		.uleb128 0xb
 1002 0025 03       		.uleb128 0x3
 1003 0026 08       		.uleb128 0x8
 1004 0027 00       		.byte	0
 1005 0028 00       		.byte	0
 1006 0029 04       		.uleb128 0x4
 1007 002a 16       		.uleb128 0x16
 1008 002b 00       		.byte	0
 1009 002c 03       		.uleb128 0x3
 1010 002d 0E       		.uleb128 0xe
 1011 002e 3A       		.uleb128 0x3a
 1012 002f 0B       		.uleb128 0xb
 1013 0030 3B       		.uleb128 0x3b
 1014 0031 05       		.uleb128 0x5
 1015 0032 49       		.uleb128 0x49
 1016 0033 13       		.uleb128 0x13
 1017 0034 00       		.byte	0
 1018 0035 00       		.byte	0
 1019 0036 05       		.uleb128 0x5
 1020 0037 35       		.uleb128 0x35
 1021 0038 00       		.byte	0
 1022 0039 49       		.uleb128 0x49
 1023 003a 13       		.uleb128 0x13
 1024 003b 00       		.byte	0
 1025 003c 00       		.byte	0
 1026 003d 06       		.uleb128 0x6
 1027 003e 2E       		.uleb128 0x2e
 1028 003f 00       		.byte	0
 1029 0040 3F       		.uleb128 0x3f
 1030 0041 19       		.uleb128 0x19
 1031 0042 03       		.uleb128 0x3
 1032 0043 0E       		.uleb128 0xe
 1033 0044 3A       		.uleb128 0x3a
 1034 0045 0B       		.uleb128 0xb
 1035 0046 3B       		.uleb128 0x3b
 1036 0047 0B       		.uleb128 0xb
 1037 0048 27       		.uleb128 0x27
 1038 0049 19       		.uleb128 0x19
 1039 004a 11       		.uleb128 0x11
 1040 004b 01       		.uleb128 0x1
 1041 004c 12       		.uleb128 0x12
 1042 004d 06       		.uleb128 0x6
 1043 004e 40       		.uleb128 0x40
 1044 004f 18       		.uleb128 0x18
 1045 0050 9642     		.uleb128 0x2116
 1046 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 35


 1047 0053 00       		.byte	0
 1048 0054 00       		.byte	0
 1049 0055 07       		.uleb128 0x7
 1050 0056 2E       		.uleb128 0x2e
 1051 0057 01       		.byte	0x1
 1052 0058 3F       		.uleb128 0x3f
 1053 0059 19       		.uleb128 0x19
 1054 005a 03       		.uleb128 0x3
 1055 005b 0E       		.uleb128 0xe
 1056 005c 3A       		.uleb128 0x3a
 1057 005d 0B       		.uleb128 0xb
 1058 005e 3B       		.uleb128 0x3b
 1059 005f 0B       		.uleb128 0xb
 1060 0060 27       		.uleb128 0x27
 1061 0061 19       		.uleb128 0x19
 1062 0062 11       		.uleb128 0x11
 1063 0063 01       		.uleb128 0x1
 1064 0064 12       		.uleb128 0x12
 1065 0065 06       		.uleb128 0x6
 1066 0066 40       		.uleb128 0x40
 1067 0067 18       		.uleb128 0x18
 1068 0068 9642     		.uleb128 0x2116
 1069 006a 19       		.uleb128 0x19
 1070 006b 01       		.uleb128 0x1
 1071 006c 13       		.uleb128 0x13
 1072 006d 00       		.byte	0
 1073 006e 00       		.byte	0
 1074 006f 08       		.uleb128 0x8
 1075 0070 34       		.uleb128 0x34
 1076 0071 00       		.byte	0
 1077 0072 03       		.uleb128 0x3
 1078 0073 0E       		.uleb128 0xe
 1079 0074 3A       		.uleb128 0x3a
 1080 0075 0B       		.uleb128 0xb
 1081 0076 3B       		.uleb128 0x3b
 1082 0077 0B       		.uleb128 0xb
 1083 0078 49       		.uleb128 0x49
 1084 0079 13       		.uleb128 0x13
 1085 007a 02       		.uleb128 0x2
 1086 007b 18       		.uleb128 0x18
 1087 007c 00       		.byte	0
 1088 007d 00       		.byte	0
 1089 007e 09       		.uleb128 0x9
 1090 007f 2E       		.uleb128 0x2e
 1091 0080 00       		.byte	0
 1092 0081 3F       		.uleb128 0x3f
 1093 0082 19       		.uleb128 0x19
 1094 0083 03       		.uleb128 0x3
 1095 0084 0E       		.uleb128 0xe
 1096 0085 3A       		.uleb128 0x3a
 1097 0086 0B       		.uleb128 0xb
 1098 0087 3B       		.uleb128 0x3b
 1099 0088 0B       		.uleb128 0xb
 1100 0089 27       		.uleb128 0x27
 1101 008a 19       		.uleb128 0x19
 1102 008b 11       		.uleb128 0x11
 1103 008c 01       		.uleb128 0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 36


 1104 008d 12       		.uleb128 0x12
 1105 008e 06       		.uleb128 0x6
 1106 008f 40       		.uleb128 0x40
 1107 0090 18       		.uleb128 0x18
 1108 0091 9742     		.uleb128 0x2117
 1109 0093 19       		.uleb128 0x19
 1110 0094 00       		.byte	0
 1111 0095 00       		.byte	0
 1112 0096 0A       		.uleb128 0xa
 1113 0097 2E       		.uleb128 0x2e
 1114 0098 01       		.byte	0x1
 1115 0099 3F       		.uleb128 0x3f
 1116 009a 19       		.uleb128 0x19
 1117 009b 03       		.uleb128 0x3
 1118 009c 0E       		.uleb128 0xe
 1119 009d 3A       		.uleb128 0x3a
 1120 009e 0B       		.uleb128 0xb
 1121 009f 3B       		.uleb128 0x3b
 1122 00a0 05       		.uleb128 0x5
 1123 00a1 27       		.uleb128 0x27
 1124 00a2 19       		.uleb128 0x19
 1125 00a3 11       		.uleb128 0x11
 1126 00a4 01       		.uleb128 0x1
 1127 00a5 12       		.uleb128 0x12
 1128 00a6 06       		.uleb128 0x6
 1129 00a7 40       		.uleb128 0x40
 1130 00a8 18       		.uleb128 0x18
 1131 00a9 9742     		.uleb128 0x2117
 1132 00ab 19       		.uleb128 0x19
 1133 00ac 01       		.uleb128 0x1
 1134 00ad 13       		.uleb128 0x13
 1135 00ae 00       		.byte	0
 1136 00af 00       		.byte	0
 1137 00b0 0B       		.uleb128 0xb
 1138 00b1 05       		.uleb128 0x5
 1139 00b2 00       		.byte	0
 1140 00b3 03       		.uleb128 0x3
 1141 00b4 0E       		.uleb128 0xe
 1142 00b5 3A       		.uleb128 0x3a
 1143 00b6 0B       		.uleb128 0xb
 1144 00b7 3B       		.uleb128 0x3b
 1145 00b8 05       		.uleb128 0x5
 1146 00b9 49       		.uleb128 0x49
 1147 00ba 13       		.uleb128 0x13
 1148 00bb 02       		.uleb128 0x2
 1149 00bc 18       		.uleb128 0x18
 1150 00bd 00       		.byte	0
 1151 00be 00       		.byte	0
 1152 00bf 0C       		.uleb128 0xc
 1153 00c0 2E       		.uleb128 0x2e
 1154 00c1 00       		.byte	0
 1155 00c2 3F       		.uleb128 0x3f
 1156 00c3 19       		.uleb128 0x19
 1157 00c4 03       		.uleb128 0x3
 1158 00c5 0E       		.uleb128 0xe
 1159 00c6 3A       		.uleb128 0x3a
 1160 00c7 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 37


 1161 00c8 3B       		.uleb128 0x3b
 1162 00c9 05       		.uleb128 0x5
 1163 00ca 27       		.uleb128 0x27
 1164 00cb 19       		.uleb128 0x19
 1165 00cc 49       		.uleb128 0x49
 1166 00cd 13       		.uleb128 0x13
 1167 00ce 11       		.uleb128 0x11
 1168 00cf 01       		.uleb128 0x1
 1169 00d0 12       		.uleb128 0x12
 1170 00d1 06       		.uleb128 0x6
 1171 00d2 40       		.uleb128 0x40
 1172 00d3 18       		.uleb128 0x18
 1173 00d4 9742     		.uleb128 0x2117
 1174 00d6 19       		.uleb128 0x19
 1175 00d7 00       		.byte	0
 1176 00d8 00       		.byte	0
 1177 00d9 0D       		.uleb128 0xd
 1178 00da 2E       		.uleb128 0x2e
 1179 00db 00       		.byte	0
 1180 00dc 3F       		.uleb128 0x3f
 1181 00dd 19       		.uleb128 0x19
 1182 00de 03       		.uleb128 0x3
 1183 00df 0E       		.uleb128 0xe
 1184 00e0 3A       		.uleb128 0x3a
 1185 00e1 0B       		.uleb128 0xb
 1186 00e2 3B       		.uleb128 0x3b
 1187 00e3 05       		.uleb128 0x5
 1188 00e4 27       		.uleb128 0x27
 1189 00e5 19       		.uleb128 0x19
 1190 00e6 11       		.uleb128 0x11
 1191 00e7 01       		.uleb128 0x1
 1192 00e8 12       		.uleb128 0x12
 1193 00e9 06       		.uleb128 0x6
 1194 00ea 40       		.uleb128 0x40
 1195 00eb 18       		.uleb128 0x18
 1196 00ec 9642     		.uleb128 0x2116
 1197 00ee 19       		.uleb128 0x19
 1198 00ef 00       		.byte	0
 1199 00f0 00       		.byte	0
 1200 00f1 0E       		.uleb128 0xe
 1201 00f2 2E       		.uleb128 0x2e
 1202 00f3 01       		.byte	0x1
 1203 00f4 3F       		.uleb128 0x3f
 1204 00f5 19       		.uleb128 0x19
 1205 00f6 03       		.uleb128 0x3
 1206 00f7 0E       		.uleb128 0xe
 1207 00f8 3A       		.uleb128 0x3a
 1208 00f9 0B       		.uleb128 0xb
 1209 00fa 3B       		.uleb128 0x3b
 1210 00fb 05       		.uleb128 0x5
 1211 00fc 27       		.uleb128 0x27
 1212 00fd 19       		.uleb128 0x19
 1213 00fe 49       		.uleb128 0x49
 1214 00ff 13       		.uleb128 0x13
 1215 0100 11       		.uleb128 0x11
 1216 0101 01       		.uleb128 0x1
 1217 0102 12       		.uleb128 0x12
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 38


 1218 0103 06       		.uleb128 0x6
 1219 0104 40       		.uleb128 0x40
 1220 0105 18       		.uleb128 0x18
 1221 0106 9742     		.uleb128 0x2117
 1222 0108 19       		.uleb128 0x19
 1223 0109 01       		.uleb128 0x1
 1224 010a 13       		.uleb128 0x13
 1225 010b 00       		.byte	0
 1226 010c 00       		.byte	0
 1227 010d 0F       		.uleb128 0xf
 1228 010e 34       		.uleb128 0x34
 1229 010f 00       		.byte	0
 1230 0110 03       		.uleb128 0x3
 1231 0111 0E       		.uleb128 0xe
 1232 0112 3A       		.uleb128 0x3a
 1233 0113 0B       		.uleb128 0xb
 1234 0114 3B       		.uleb128 0x3b
 1235 0115 05       		.uleb128 0x5
 1236 0116 49       		.uleb128 0x49
 1237 0117 13       		.uleb128 0x13
 1238 0118 02       		.uleb128 0x2
 1239 0119 18       		.uleb128 0x18
 1240 011a 00       		.byte	0
 1241 011b 00       		.byte	0
 1242 011c 10       		.uleb128 0x10
 1243 011d 34       		.uleb128 0x34
 1244 011e 00       		.byte	0
 1245 011f 03       		.uleb128 0x3
 1246 0120 0E       		.uleb128 0xe
 1247 0121 3A       		.uleb128 0x3a
 1248 0122 0B       		.uleb128 0xb
 1249 0123 3B       		.uleb128 0x3b
 1250 0124 0B       		.uleb128 0xb
 1251 0125 49       		.uleb128 0x49
 1252 0126 13       		.uleb128 0x13
 1253 0127 3F       		.uleb128 0x3f
 1254 0128 19       		.uleb128 0x19
 1255 0129 02       		.uleb128 0x2
 1256 012a 18       		.uleb128 0x18
 1257 012b 00       		.byte	0
 1258 012c 00       		.byte	0
 1259 012d 00       		.byte	0
 1260              		.section	.debug_aranges,"",%progbits
 1261 0000 94000000 		.4byte	0x94
 1262 0004 0200     		.2byte	0x2
 1263 0006 00000000 		.4byte	.Ldebug_info0
 1264 000a 04       		.byte	0x4
 1265 000b 00       		.byte	0
 1266 000c 0000     		.2byte	0
 1267 000e 0000     		.2byte	0
 1268 0010 00000000 		.4byte	.LFB2
 1269 0014 24000000 		.4byte	.LFE2-.LFB2
 1270 0018 00000000 		.4byte	.LFB3
 1271 001c 80000000 		.4byte	.LFE3-.LFB3
 1272 0020 00000000 		.4byte	.LFB4
 1273 0024 20000000 		.4byte	.LFE4-.LFB4
 1274 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 39


 1275 002c 1C000000 		.4byte	.LFE5-.LFB5
 1276 0030 00000000 		.4byte	.LFB6
 1277 0034 20000000 		.4byte	.LFE6-.LFB6
 1278 0038 00000000 		.4byte	.LFB7
 1279 003c 1C000000 		.4byte	.LFE7-.LFB7
 1280 0040 00000000 		.4byte	.LFB8
 1281 0044 1C000000 		.4byte	.LFE8-.LFB8
 1282 0048 00000000 		.4byte	.LFB9
 1283 004c 20000000 		.4byte	.LFE9-.LFB9
 1284 0050 00000000 		.4byte	.LFB10
 1285 0054 20000000 		.4byte	.LFE10-.LFB10
 1286 0058 00000000 		.4byte	.LFB11
 1287 005c 20000000 		.4byte	.LFE11-.LFB11
 1288 0060 00000000 		.4byte	.LFB12
 1289 0064 14000000 		.4byte	.LFE12-.LFB12
 1290 0068 00000000 		.4byte	.LFB13
 1291 006c 20000000 		.4byte	.LFE13-.LFB13
 1292 0070 00000000 		.4byte	.LFB14
 1293 0074 20000000 		.4byte	.LFE14-.LFB14
 1294 0078 00000000 		.4byte	.LFB15
 1295 007c 14000000 		.4byte	.LFE15-.LFB15
 1296 0080 00000000 		.4byte	.LFB16
 1297 0084 14000000 		.4byte	.LFE16-.LFB16
 1298 0088 00000000 		.4byte	.LFB17
 1299 008c 14000000 		.4byte	.LFE17-.LFB17
 1300 0090 00000000 		.4byte	0
 1301 0094 00000000 		.4byte	0
 1302              		.section	.debug_ranges,"",%progbits
 1303              	.Ldebug_ranges0:
 1304 0000 00000000 		.4byte	.LFB2
 1305 0004 24000000 		.4byte	.LFE2
 1306 0008 00000000 		.4byte	.LFB3
 1307 000c 80000000 		.4byte	.LFE3
 1308 0010 00000000 		.4byte	.LFB4
 1309 0014 20000000 		.4byte	.LFE4
 1310 0018 00000000 		.4byte	.LFB5
 1311 001c 1C000000 		.4byte	.LFE5
 1312 0020 00000000 		.4byte	.LFB6
 1313 0024 20000000 		.4byte	.LFE6
 1314 0028 00000000 		.4byte	.LFB7
 1315 002c 1C000000 		.4byte	.LFE7
 1316 0030 00000000 		.4byte	.LFB8
 1317 0034 1C000000 		.4byte	.LFE8
 1318 0038 00000000 		.4byte	.LFB9
 1319 003c 20000000 		.4byte	.LFE9
 1320 0040 00000000 		.4byte	.LFB10
 1321 0044 20000000 		.4byte	.LFE10
 1322 0048 00000000 		.4byte	.LFB11
 1323 004c 20000000 		.4byte	.LFE11
 1324 0050 00000000 		.4byte	.LFB12
 1325 0054 14000000 		.4byte	.LFE12
 1326 0058 00000000 		.4byte	.LFB13
 1327 005c 20000000 		.4byte	.LFE13
 1328 0060 00000000 		.4byte	.LFB14
 1329 0064 20000000 		.4byte	.LFE14
 1330 0068 00000000 		.4byte	.LFB15
 1331 006c 14000000 		.4byte	.LFE15
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 40


 1332 0070 00000000 		.4byte	.LFB16
 1333 0074 14000000 		.4byte	.LFE16
 1334 0078 00000000 		.4byte	.LFB17
 1335 007c 14000000 		.4byte	.LFE17
 1336 0080 00000000 		.4byte	0
 1337 0084 00000000 		.4byte	0
 1338              		.section	.debug_line,"",%progbits
 1339              	.Ldebug_line0:
 1340 0000 80010000 		.section	.debug_str,"MS",%progbits,1
 1340      02004000 
 1340      00000201 
 1340      FB0E0D00 
 1340      01010101 
 1341              	.LASF36:
 1342 0000 70776D5F 		.ascii	"pwm_ReadCompare\000"
 1342      52656164 
 1342      436F6D70 
 1342      61726500 
 1343              	.LASF25:
 1344 0010 70657269 		.ascii	"period\000"
 1344      6F6400
 1345              	.LASF3:
 1346 0017 73686F72 		.ascii	"short unsigned int\000"
 1346      7420756E 
 1346      7369676E 
 1346      65642069 
 1346      6E7400
 1347              	.LASF22:
 1348 002a 70776D5F 		.ascii	"pwm_ClearFIFO\000"
 1348      436C6561 
 1348      72464946 
 1348      4F00
 1349              	.LASF31:
 1350 0038 70776D5F 		.ascii	"pwm_ReadStatusRegister\000"
 1350      52656164 
 1350      53746174 
 1350      75735265 
 1350      67697374 
 1351              	.LASF40:
 1352 004f 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\vesion 2\\fw\\fin"
 1352      79707265 
 1352      73735C73 
 1352      79737465 
 1352      6D2D7374 
 1353 007d 6973685C 		.ascii	"ish\\sandbox\\v6_ble\\Finish(state machine)\\fin_v0"
 1353      73616E64 
 1353      626F785C 
 1353      76365F62 
 1353      6C655C46 
 1354 00ac 2E637964 		.ascii	".cydsn\000"
 1354      736E00
 1355              	.LASF41:
 1356 00b3 70776D5F 		.ascii	"pwm_ReadControlRegister\000"
 1356      52656164 
 1356      436F6E74 
 1356      726F6C52 
 1356      65676973 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 41


 1357              	.LASF35:
 1358 00cb 70776D5F 		.ascii	"pwm_ReadCapture\000"
 1358      52656164 
 1358      43617074 
 1358      75726500 
 1359              	.LASF9:
 1360 00db 666C6F61 		.ascii	"float\000"
 1360      7400
 1361              	.LASF24:
 1362 00e1 636F756E 		.ascii	"counter\000"
 1362      74657200 
 1363              	.LASF26:
 1364 00e9 70776D5F 		.ascii	"pwm_WriteCompare\000"
 1364      57726974 
 1364      65436F6D 
 1364      70617265 
 1364      00
 1365              	.LASF1:
 1366 00fa 756E7369 		.ascii	"unsigned char\000"
 1366      676E6564 
 1366      20636861 
 1366      7200
 1367              	.LASF13:
 1368 0108 72656738 		.ascii	"reg8\000"
 1368      00
 1369              	.LASF5:
 1370 010d 6C6F6E67 		.ascii	"long unsigned int\000"
 1370      20756E73 
 1370      69676E65 
 1370      6420696E 
 1370      7400
 1371              	.LASF42:
 1372 011f 70776D5F 		.ascii	"pwm_initVar\000"
 1372      696E6974 
 1372      56617200 
 1373              	.LASF12:
 1374 012b 75696E74 		.ascii	"uint8\000"
 1374      3800
 1375              	.LASF34:
 1376 0131 636F6E74 		.ascii	"control\000"
 1376      726F6C00 
 1377              	.LASF30:
 1378 0139 70776D5F 		.ascii	"pwm_ReadCounter\000"
 1378      52656164 
 1378      436F756E 
 1378      74657200 
 1379              	.LASF20:
 1380 0149 70776D5F 		.ascii	"pwm_Init\000"
 1380      496E6974 
 1380      00
 1381              	.LASF10:
 1382 0152 646F7562 		.ascii	"double\000"
 1382      6C6500
 1383              	.LASF38:
 1384 0159 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1384      4320342E 
 1384      392E3320 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 42


 1384      32303135 
 1384      30333033 
 1385 018c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1385      20726576 
 1385      6973696F 
 1385      6E203232 
 1385      31323230 
 1386 01bf 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1386      66756E63 
 1386      74696F6E 
 1386      2D736563 
 1386      74696F6E 
 1387              	.LASF8:
 1388 01e7 756E7369 		.ascii	"unsigned int\000"
 1388      676E6564 
 1388      20696E74 
 1388      00
 1389              	.LASF39:
 1390 01f4 47656E65 		.ascii	"Generated_Source\\PSoC4\\pwm.c\000"
 1390      72617465 
 1390      645F536F 
 1390      75726365 
 1390      5C50536F 
 1391              	.LASF7:
 1392 0211 6C6F6E67 		.ascii	"long long unsigned int\000"
 1392      206C6F6E 
 1392      6720756E 
 1392      7369676E 
 1392      65642069 
 1393              	.LASF32:
 1394 0228 72657375 		.ascii	"result\000"
 1394      6C7400
 1395              	.LASF21:
 1396 022f 70776D5F 		.ascii	"pwm_WriteCounter\000"
 1396      57726974 
 1396      65436F75 
 1396      6E746572 
 1396      00
 1397              	.LASF33:
 1398 0240 70776D5F 		.ascii	"pwm_WriteControlRegister\000"
 1398      57726974 
 1398      65436F6E 
 1398      74726F6C 
 1398      52656769 
 1399              	.LASF15:
 1400 0259 6374726C 		.ascii	"ctrl\000"
 1400      00
 1401              	.LASF14:
 1402 025e 73697A65 		.ascii	"sizetype\000"
 1402      74797065 
 1402      00
 1403              	.LASF6:
 1404 0267 6C6F6E67 		.ascii	"long long int\000"
 1404      206C6F6E 
 1404      6720696E 
 1404      7400
 1405              	.LASF23:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 43


 1406 0275 70776D5F 		.ascii	"pwm_WritePeriod\000"
 1406      57726974 
 1406      65506572 
 1406      696F6400 
 1407              	.LASF29:
 1408 0285 696E7465 		.ascii	"interruptMode\000"
 1408      72727570 
 1408      744D6F64 
 1408      6500
 1409              	.LASF19:
 1410 0293 70776D5F 		.ascii	"pwm_Stop\000"
 1410      53746F70 
 1410      00
 1411              	.LASF2:
 1412 029c 73686F72 		.ascii	"short int\000"
 1412      7420696E 
 1412      7400
 1413              	.LASF18:
 1414 02a6 70776D5F 		.ascii	"pwm_Enable\000"
 1414      456E6162 
 1414      6C6500
 1415              	.LASF37:
 1416 02b1 70776D5F 		.ascii	"pwm_ReadPeriod\000"
 1416      52656164 
 1416      50657269 
 1416      6F6400
 1417              	.LASF28:
 1418 02c0 70776D5F 		.ascii	"pwm_SetInterruptMode\000"
 1418      53657449 
 1418      6E746572 
 1418      72757074 
 1418      4D6F6465 
 1419              	.LASF4:
 1420 02d5 6C6F6E67 		.ascii	"long int\000"
 1420      20696E74 
 1420      00
 1421              	.LASF11:
 1422 02de 63686172 		.ascii	"char\000"
 1422      00
 1423              	.LASF17:
 1424 02e3 70776D5F 		.ascii	"pwm_Start\000"
 1424      53746172 
 1424      7400
 1425              	.LASF0:
 1426 02ed 7369676E 		.ascii	"signed char\000"
 1426      65642063 
 1426      68617200 
 1427              	.LASF27:
 1428 02f9 636F6D70 		.ascii	"compare\000"
 1428      61726500 
 1429              	.LASF16:
 1430 0301 70776D5F 		.ascii	"pwm_interruptState\000"
 1430      696E7465 
 1430      72727570 
 1430      74537461 
 1430      746500
 1431              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccVDHcBc.s 			page 44


