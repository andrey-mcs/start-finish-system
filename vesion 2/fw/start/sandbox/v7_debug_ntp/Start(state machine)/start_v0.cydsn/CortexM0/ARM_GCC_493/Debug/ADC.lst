ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_initVar
  18              		.bss
  19              		.type	ADC_initVar, %object
  20              		.size	ADC_initVar, 1
  21              	ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_offset,2,4
  24              		.comm	ADC_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_channelsConfig, %object
  28              		.size	ADC_channelsConfig, 4
  29              	ADC_channelsConfig:
  30 0000 00000000 		.space	4
  31              		.section	.text.ADC_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_Start, %function
  37              	ADC_Start:
  38              	.LFB2:
  39              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 2


  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_Start, .-ADC_Start
  73              		.global	__aeabi_idiv
  74              		.section	.text.ADC_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_Init, %function
  80              	ADC_Init:
  81              	.LFB3:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 4


  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 5


 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  92              		.loc 1 172 0
  93 0006 0F20     		mov	r0, #15
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  96              		.loc 1 173 0
  97 000e 564B     		ldr	r3, .L17
  98 0010 0F20     		mov	r0, #15
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 101              		.loc 1 177 0
 102 0018 544B     		ldr	r3, .L17+4
 103 001a 0122     		mov	r2, #1
 104 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 105              		.loc 1 180 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 6


 106 001e 544B     		ldr	r3, .L17+8
 107 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 108              		.loc 1 178 0
 109 0022 002B     		cmp	r3, #0
 110 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0 is_stmt 0 discriminator 1
 112 0026 5349     		ldr	r1, .L17+12
 113 0028 00E0     		b	.L7
 114              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0 discriminator 2
 116 002a 5349     		ldr	r1, .L17+16
 117              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 4
 119 002c 534B     		ldr	r3, .L17+20
 120 002e 534A     		ldr	r2, .L17+20
 121 0030 1268     		ldr	r2, [r2]
 122 0032 0A43     		orr	r2, r1
 123 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 124              		.loc 1 182 0 is_stmt 1 discriminator 4
 125 0036 524B     		ldr	r3, .L17+24
 126 0038 524A     		ldr	r2, .L17+28
 127 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 128              		.loc 1 183 0 discriminator 4
 129 003c 524B     		ldr	r3, .L17+32
 130 003e 534A     		ldr	r2, .L17+36
 131 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 132              		.loc 1 184 0 discriminator 4
 133 0042 534B     		ldr	r3, .L17+40
 134 0044 0022     		mov	r2, #0
 135 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 136              		.loc 1 185 0 discriminator 4
 137 0048 524B     		ldr	r3, .L17+44
 138 004a 534A     		ldr	r2, .L17+48
 139 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 140              		.loc 1 186 0 discriminator 4
 141 004e 534B     		ldr	r3, .L17+52
 142 0050 514A     		ldr	r2, .L17+48
 143 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 144              		.loc 1 190 0 discriminator 4
 145 0054 524B     		ldr	r3, .L17+56
 146 0056 524A     		ldr	r2, .L17+56
 147 0058 1268     		ldr	r2, [r2]
 148 005a 8021     		mov	r1, #128
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 7


 149 005c 4902     		lsl	r1, r1, #9
 150 005e 0A43     		orr	r2, r1
 151 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 152              		.loc 1 197 0 discriminator 4
 153 0062 504B     		ldr	r3, .L17+60
 154 0064 0022     		mov	r2, #0
 155 0066 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 156              		.loc 1 198 0 discriminator 4
 157 0068 4F4B     		ldr	r3, .L17+64
 158 006a 0022     		mov	r2, #0
 159 006c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 160              		.loc 1 199 0 discriminator 4
 161 006e 4F4B     		ldr	r3, .L17+68
 162 0070 0122     		mov	r2, #1
 163 0072 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 164              		.loc 1 206 0 discriminator 4
 165 0074 4E4B     		ldr	r3, .L17+72
 166 0076 1B68     		ldr	r3, [r3]
 167 0078 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 168              		.loc 1 207 0 discriminator 4
 169 007a 7B68     		ldr	r3, [r7, #4]
 170 007c 4D4A     		ldr	r2, .L17+76
 171 007e 1340     		and	r3, r2
 172 0080 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 173              		.loc 1 220 0 discriminator 4
 174 0082 7B68     		ldr	r3, [r7, #4]
 175 0084 8022     		mov	r2, #128
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 8


 176 0086 9205     		lsl	r2, r2, #22
 177 0088 1343     		orr	r3, r2
 178 008a 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 179              		.loc 1 221 0 discriminator 4
 180 008c 7B68     		ldr	r3, [r7, #4]
 181 008e 0122     		mov	r2, #1
 182 0090 9343     		bic	r3, r2
 183 0092 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 184              		.loc 1 226 0 discriminator 4
 185 0094 464B     		ldr	r3, .L17+72
 186 0096 7A68     		ldr	r2, [r7, #4]
 187 0098 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 188              		.loc 1 232 0 discriminator 4
 189 009a 0023     		mov	r3, #0
 190 009c FB60     		str	r3, [r7, #12]
 191 009e 5CE0     		b	.L8
 192              	.L16:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 193              		.loc 1 234 0
 194 00a0 0022     		mov	r2, #0
 195 00a2 DC23     		mov	r3, #220
 196 00a4 9B01     		lsl	r3, r3, #6
 197 00a6 1340     		and	r3, r2
 198 00a8 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 199              		.loc 1 253 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 9


 200 00aa FB68     		ldr	r3, [r7, #12]
 201 00ac 9B00     		lsl	r3, r3, #2
 202 00ae 424A     		ldr	r2, .L17+80
 203 00b0 9446     		mov	ip, r2
 204 00b2 6344     		add	r3, r3, ip
 205 00b4 7A68     		ldr	r2, [r7, #4]
 206 00b6 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 207              		.loc 1 255 0
 208 00b8 0022     		mov	r2, #0
 209 00ba 0123     		mov	r3, #1
 210 00bc 1340     		and	r3, r2
 211 00be 09D0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 212              		.loc 1 257 0
 213 00c0 384B     		ldr	r3, .L17+60
 214 00c2 384A     		ldr	r2, .L17+60
 215 00c4 1268     		ldr	r2, [r2]
 216 00c6 F968     		ldr	r1, [r7, #12]
 217 00c8 0120     		mov	r0, #1
 218 00ca 8840     		lsl	r0, r0, r1
 219 00cc 011C     		mov	r1, r0
 220 00ce 89B2     		uxth	r1, r1
 221 00d0 0A43     		orr	r2, r1
 222 00d2 1A60     		str	r2, [r3]
 223              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 224              		.loc 1 260 0
 225 00d4 0022     		mov	r2, #0
 226 00d6 0223     		mov	r3, #2
 227 00d8 1340     		and	r3, r2
 228 00da 09D0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 229              		.loc 1 262 0
 230 00dc 324B     		ldr	r3, .L17+64
 231 00de 324A     		ldr	r2, .L17+64
 232 00e0 1268     		ldr	r2, [r2]
 233 00e2 F968     		ldr	r1, [r7, #12]
 234 00e4 0120     		mov	r0, #1
 235 00e6 8840     		lsl	r0, r0, r1
 236 00e8 011C     		mov	r1, r0
 237 00ea 89B2     		uxth	r1, r1
 238 00ec 0A43     		orr	r2, r1
 239 00ee 1A60     		str	r2, [r3]
 240              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 10


 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 241              		.loc 1 282 0
 242 00f0 0022     		mov	r2, #0
 243 00f2 8023     		mov	r3, #128
 244 00f4 9B00     		lsl	r3, r3, #2
 245 00f6 1340     		and	r3, r2
 246 00f8 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 247              		.loc 1 284 0
 248 00fa 8023     		mov	r3, #128
 249 00fc 5B00     		lsl	r3, r3, #1
 250 00fe BB60     		str	r3, [r7, #8]
 251 0100 02E0     		b	.L12
 252              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 253              		.loc 1 288 0
 254 0102 8023     		mov	r3, #128
 255 0104 5B01     		lsl	r3, r3, #5
 256 0106 BB60     		str	r3, [r7, #8]
 257              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 258              		.loc 1 291 0
 259 0108 0022     		mov	r2, #0
 260 010a 8023     		mov	r3, #128
 261 010c 5B00     		lsl	r3, r3, #1
 262 010e 1340     		and	r3, r2
 263 0110 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 264              		.loc 1 298 0
 265 0112 2A4B     		ldr	r3, .L17+84
 266 0114 FA68     		ldr	r2, [r7, #12]
 267 0116 5200     		lsl	r2, r2, #1
 268 0118 0021     		mov	r1, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 11


 269 011a D152     		strh	r1, [r2, r3]
 270 011c 09E0     		b	.L14
 271              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 272              		.loc 1 305 0
 273 011e BB68     		ldr	r3, [r7, #8]
 274 0120 002B     		cmp	r3, #0
 275 0122 00DA     		bge	.L15
 276 0124 0133     		add	r3, r3, #1
 277              	.L15:
 278 0126 5B10     		asr	r3, r3, #1
 279 0128 99B2     		uxth	r1, r3
 280 012a 244B     		ldr	r3, .L17+84
 281 012c FA68     		ldr	r2, [r7, #12]
 282 012e 5200     		lsl	r2, r2, #1
 283 0130 D152     		strh	r1, [r2, r3]
 284              	.L14:
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 285              		.loc 1 311 0 discriminator 2
 286 0132 BB68     		ldr	r3, [r7, #8]
 287 0134 224A     		ldr	r2, .L17+88
 288 0136 5343     		mul	r3, r2
 289 0138 224A     		ldr	r2, .L17+92
 290 013a 9446     		mov	ip, r2
 291 013c 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 292              		.loc 1 312 0 discriminator 2
 293 013e 181C     		mov	r0, r3
 294 0140 2149     		ldr	r1, .L17+96
 295 0142 FFF7FEFF 		bl	__aeabi_idiv
 296 0146 031C     		mov	r3, r0
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 297              		.loc 1 311 0 discriminator 2
 298 0148 9BB2     		uxth	r3, r3
 299 014a 19B2     		sxth	r1, r3
 300 014c 1F4B     		ldr	r3, .L17+100
 301 014e FA68     		ldr	r2, [r7, #12]
 302 0150 9200     		lsl	r2, r2, #2
 303 0152 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 304              		.loc 1 232 0 discriminator 2
 305 0154 FB68     		ldr	r3, [r7, #12]
 306 0156 0133     		add	r3, r3, #1
 307 0158 FB60     		str	r3, [r7, #12]
 308              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 12


 309              		.loc 1 232 0 is_stmt 0 discriminator 1
 310 015a FB68     		ldr	r3, [r7, #12]
 311 015c 002B     		cmp	r3, #0
 312 015e 9FD0     		beq	.L16
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 313              		.loc 1 314 0 is_stmt 1
 314 0160 BD46     		mov	sp, r7
 315 0162 04B0     		add	sp, sp, #16
 316              		@ sp needed
 317 0164 80BD     		pop	{r7, pc}
 318              	.L18:
 319 0166 C046     		.align	2
 320              	.L17:
 321 0168 00000000 		.word	ADC_ISR
 322 016c 20003A40 		.word	1077542944
 323 0170 80033A40 		.word	1077543808
 324 0174 70021051 		.word	1360003696
 325 0178 70020051 		.word	1358955120
 326 017c 00003A40 		.word	1077542912
 327 0180 04003A40 		.word	1077542916
 328 0184 84000080 		.word	-2147483516
 329 0188 18003A40 		.word	1077542936
 330 018c 0000FF07 		.word	134152192
 331 0190 1C003A40 		.word	1077542940
 332 0194 10003A40 		.word	1077542928
 333 0198 04000400 		.word	262148
 334 019c 14003A40 		.word	1077542932
 335 01a0 00033A40 		.word	1077543680
 336 01a4 28023A40 		.word	1077543464
 337 01a8 38023A40 		.word	1077543480
 338 01ac 18023A40 		.word	1077543448
 339 01b0 30003A40 		.word	1077542960
 340 01b4 FFFFFFDF 		.word	-536870913
 341 01b8 80003A40 		.word	1077543040
 342 01bc 00000000 		.word	ADC_offset
 343 01c0 10270000 		.word	10000
 344 01c4 E40C0000 		.word	3300
 345 01c8 C8190000 		.word	6600
 346 01cc 00000000 		.word	ADC_countsPer10Volt
 347              		.cfi_endproc
 348              	.LFE3:
 349              		.size	ADC_Init, .-ADC_Init
 350              		.section	.text.ADC_Enable,"ax",%progbits
 351              		.align	2
 352              		.global	ADC_Enable
 353              		.code	16
 354              		.thumb_func
 355              		.type	ADC_Enable, %function
 356              	ADC_Enable:
 357              	.LFB4:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 13


 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 358              		.loc 1 331 0
 359              		.cfi_startproc
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 366              		.loc 1 332 0
 367 0004 0A4B     		ldr	r3, .L22
 368 0006 1B68     		ldr	r3, [r3]
 369 0008 002B     		cmp	r3, #0
 370 000a 0EDB     		blt	.L19
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 371              		.loc 1 336 0
 372 000c C046     		mov	r8, r8
 373              	.L21:
 374              		.loc 1 336 0 is_stmt 0 discriminator 1
 375 000e 094B     		ldr	r3, .L22+4
 376 0010 1B68     		ldr	r3, [r3]
 377 0012 002B     		cmp	r3, #0
 378 0014 FBDB     		blt	.L21
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 379              		.loc 1 342 0 is_stmt 1
 380 0016 064B     		ldr	r3, .L22
 381 0018 054A     		ldr	r2, .L22
 382 001a 1268     		ldr	r2, [r2]
 383 001c 8021     		mov	r1, #128
 384 001e 0906     		lsl	r1, r1, #24
 385 0020 0A43     		orr	r2, r1
 386 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 387              		.loc 1 345 0
 388 0024 0A20     		mov	r0, #10
 389 0026 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 14


 390              	.L19:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 391              		.loc 1 347 0
 392 002a BD46     		mov	sp, r7
 393              		@ sp needed
 394 002c 80BD     		pop	{r7, pc}
 395              	.L23:
 396 002e C046     		.align	2
 397              	.L22:
 398 0030 00003A40 		.word	1077542912
 399 0034 08023A40 		.word	1077543432
 400              		.cfi_endproc
 401              	.LFE4:
 402              		.size	ADC_Enable, .-ADC_Enable
 403              		.section	.text.ADC_Stop,"ax",%progbits
 404              		.align	2
 405              		.global	ADC_Stop
 406              		.code	16
 407              		.thumb_func
 408              		.type	ADC_Stop, %function
 409              	ADC_Stop:
 410              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 411              		.loc 1 366 0
 412              		.cfi_startproc
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 419              		.loc 1 367 0
 420 0004 034B     		ldr	r3, .L25
 421 0006 034A     		ldr	r2, .L25
 422 0008 1268     		ldr	r2, [r2]
 423 000a 5200     		lsl	r2, r2, #1
 424 000c 5208     		lsr	r2, r2, #1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 15


 425 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 426              		.loc 1 368 0
 427 0010 BD46     		mov	sp, r7
 428              		@ sp needed
 429 0012 80BD     		pop	{r7, pc}
 430              	.L26:
 431              		.align	2
 432              	.L25:
 433 0014 00003A40 		.word	1077542912
 434              		.cfi_endproc
 435              	.LFE5:
 436              		.size	ADC_Stop, .-ADC_Stop
 437              		.section	.text.ADC_StartConvert,"ax",%progbits
 438              		.align	2
 439              		.global	ADC_StartConvert
 440              		.code	16
 441              		.thumb_func
 442              		.type	ADC_StartConvert, %function
 443              	ADC_StartConvert:
 444              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 445              		.loc 1 392 0
 446              		.cfi_startproc
 447 0000 80B5     		push	{r7, lr}
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 453              		.loc 1 394 0
 454 0004 044B     		ldr	r3, .L28
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 16


 455 0006 044A     		ldr	r2, .L28
 456 0008 1268     		ldr	r2, [r2]
 457 000a 8021     		mov	r1, #128
 458 000c 4902     		lsl	r1, r1, #9
 459 000e 0A43     		orr	r2, r1
 460 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 461              		.loc 1 399 0
 462 0012 BD46     		mov	sp, r7
 463              		@ sp needed
 464 0014 80BD     		pop	{r7, pc}
 465              	.L29:
 466 0016 C046     		.align	2
 467              	.L28:
 468 0018 04003A40 		.word	1077542916
 469              		.cfi_endproc
 470              	.LFE6:
 471              		.size	ADC_StartConvert, .-ADC_StartConvert
 472              		.section	.text.ADC_StopConvert,"ax",%progbits
 473              		.align	2
 474              		.global	ADC_StopConvert
 475              		.code	16
 476              		.thumb_func
 477              		.type	ADC_StopConvert, %function
 478              	ADC_StopConvert:
 479              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 480              		.loc 1 417 0
 481              		.cfi_startproc
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 17


 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 488              		.loc 1 419 0
 489 0004 034B     		ldr	r3, .L31
 490 0006 034A     		ldr	r2, .L31
 491 0008 1268     		ldr	r2, [r2]
 492 000a 0349     		ldr	r1, .L31+4
 493 000c 0A40     		and	r2, r1
 494 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 495              		.loc 1 421 0
 496 0010 BD46     		mov	sp, r7
 497              		@ sp needed
 498 0012 80BD     		pop	{r7, pc}
 499              	.L32:
 500              		.align	2
 501              	.L31:
 502 0014 04003A40 		.word	1077542916
 503 0018 FFFFFEFF 		.word	-65537
 504              		.cfi_endproc
 505              	.LFE7:
 506              		.size	ADC_StopConvert, .-ADC_StopConvert
 507              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 508              		.align	2
 509              		.global	ADC_IsEndConversion
 510              		.code	16
 511              		.thumb_func
 512              		.type	ADC_IsEndConversion, %function
 513              	ADC_IsEndConversion:
 514              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 18


 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 515              		.loc 1 451 0
 516              		.cfi_startproc
 517 0000 80B5     		push	{r7, lr}
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 84B0     		sub	sp, sp, #16
 522              		.cfi_def_cfa_offset 24
 523 0004 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 525 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 526              		.loc 1 452 0
 527 0008 0023     		mov	r3, #0
 528 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 529              		.loc 1 454 0
 530 000c 7B68     		ldr	r3, [r7, #4]
 531 000e 0322     		mov	r2, #3
 532 0010 1340     		and	r3, r2
 533 0012 11D0     		beq	.L34
 534              	.L36:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 535              		.loc 1 458 0 discriminator 2
 536 0014 0B4B     		ldr	r3, .L38
 537 0016 1B68     		ldr	r3, [r3]
 538 0018 0122     		mov	r2, #1
 539 001a 1340     		and	r3, r2
 540 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 541              		.loc 1 459 0 discriminator 2
 542 001e FB68     		ldr	r3, [r7, #12]
 543 0020 002B     		cmp	r3, #0
 544 0022 03D1     		bne	.L35
 545              		.loc 1 459 0 is_stmt 0 discriminator 1
 546 0024 7B68     		ldr	r3, [r7, #4]
 547 0026 0222     		mov	r2, #2
 548 0028 1340     		and	r3, r2
 549 002a F3D1     		bne	.L36
 550              	.L35:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 551              		.loc 1 461 0 is_stmt 1
 552 002c FB68     		ldr	r3, [r7, #12]
 553 002e 002B     		cmp	r3, #0
 554 0030 02D0     		beq	.L34
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 555              		.loc 1 464 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 19


 556 0032 044B     		ldr	r3, .L38
 557 0034 0122     		mov	r2, #1
 558 0036 1A60     		str	r2, [r3]
 559              	.L34:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 560              		.loc 1 485 0
 561 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 562              		.loc 1 486 0
 563 003a 181C     		mov	r0, r3
 564 003c BD46     		mov	sp, r7
 565 003e 04B0     		add	sp, sp, #16
 566              		@ sp needed
 567 0040 80BD     		pop	{r7, pc}
 568              	.L39:
 569 0042 C046     		.align	2
 570              	.L38:
 571 0044 10023A40 		.word	1077543440
 572              		.cfi_endproc
 573              	.LFE8:
 574              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 575              		.section	.text.ADC_GetResult16,"ax",%progbits
 576              		.align	2
 577              		.global	ADC_GetResult16
 578              		.code	16
 579              		.thumb_func
 580              		.type	ADC_GetResult16, %function
 581              	ADC_GetResult16:
 582              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 20


 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 583              		.loc 1 505 0
 584              		.cfi_startproc
 585 0000 80B5     		push	{r7, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 84B0     		sub	sp, sp, #16
 590              		.cfi_def_cfa_offset 24
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 593 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 594              		.loc 1 509 0
 595 0008 7B68     		ldr	r3, [r7, #4]
 596 000a 002B     		cmp	r3, #0
 597 000c 02D0     		beq	.L41
 598              		.loc 1 509 0 is_stmt 0 discriminator 1
 599 000e 0020     		mov	r0, #0
 600 0010 FFF7FEFF 		bl	CyHalt
 601              	.L41:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 602              		.loc 1 511 0 is_stmt 1
 603 0014 7B68     		ldr	r3, [r7, #4]
 604 0016 002B     		cmp	r3, #0
 605 0018 09D1     		bne	.L42
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 606              		.loc 1 513 0
 607 001a 7B68     		ldr	r3, [r7, #4]
 608 001c 9B00     		lsl	r3, r3, #2
 609 001e 084A     		ldr	r2, .L45
 610 0020 9446     		mov	ip, r2
 611 0022 6344     		add	r3, r3, ip
 612 0024 1B68     		ldr	r3, [r3]
 613 0026 1B04     		lsl	r3, r3, #16
 614 0028 1B0C     		lsr	r3, r3, #16
 615 002a FB60     		str	r3, [r7, #12]
 616 002c 01E0     		b	.L43
 617              	.L42:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 21


 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 618              		.loc 1 521 0
 619 002e 0023     		mov	r3, #0
 620 0030 FB60     		str	r3, [r7, #12]
 621              	.L43:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 622              		.loc 1 525 0
 623 0032 FB68     		ldr	r3, [r7, #12]
 624 0034 9BB2     		uxth	r3, r3
 625 0036 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 626              		.loc 1 526 0
 627 0038 181C     		mov	r0, r3
 628 003a BD46     		mov	sp, r7
 629 003c 04B0     		add	sp, sp, #16
 630              		@ sp needed
 631 003e 80BD     		pop	{r7, pc}
 632              	.L46:
 633              		.align	2
 634              	.L45:
 635 0040 80013A40 		.word	1077543296
 636              		.cfi_endproc
 637              	.LFE9:
 638              		.size	ADC_GetResult16, .-ADC_GetResult16
 639              		.section	.text.ADC_SetChanMask,"ax",%progbits
 640              		.align	2
 641              		.global	ADC_SetChanMask
 642              		.code	16
 643              		.thumb_func
 644              		.type	ADC_SetChanMask, %function
 645              	ADC_SetChanMask:
 646              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 22


 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 647              		.loc 1 550 0
 648              		.cfi_startproc
 649 0000 80B5     		push	{r7, lr}
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 7, -8
 652              		.cfi_offset 14, -4
 653 0002 82B0     		sub	sp, sp, #8
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 657 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 658              		.loc 1 551 0
 659 0008 034B     		ldr	r3, .L48
 660 000a 7A68     		ldr	r2, [r7, #4]
 661 000c 0121     		mov	r1, #1
 662 000e 0A40     		and	r2, r1
 663 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 664              		.loc 1 552 0
 665 0012 BD46     		mov	sp, r7
 666 0014 02B0     		add	sp, sp, #8
 667              		@ sp needed
 668 0016 80BD     		pop	{r7, pc}
 669              	.L49:
 670              		.align	2
 671              	.L48:
 672 0018 20003A40 		.word	1077542944
 673              		.cfi_endproc
 674              	.LFE10:
 675              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 676              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 677              		.align	2
 678              		.global	ADC_SetLowLimit
 679              		.code	16
 680              		.thumb_func
 681              		.type	ADC_SetLowLimit, %function
 682              	ADC_SetLowLimit:
 683              	.LFB11:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 23


 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 684              		.loc 1 594 0
 685              		.cfi_startproc
 686 0000 80B5     		push	{r7, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 82B0     		sub	sp, sp, #8
 691              		.cfi_def_cfa_offset 16
 692 0004 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 695              		.loc 1 595 0
 696 0008 084B     		ldr	r3, .L51
 697 000a 084A     		ldr	r2, .L51
 698 000c 1268     		ldr	r2, [r2]
 699 000e 120C     		lsr	r2, r2, #16
 700 0010 1204     		lsl	r2, r2, #16
 701 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 702              		.loc 1 596 0
 703 0014 054B     		ldr	r3, .L51
 704 0016 054A     		ldr	r2, .L51
 705 0018 1168     		ldr	r1, [r2]
 706 001a 7A68     		ldr	r2, [r7, #4]
 707 001c 1204     		lsl	r2, r2, #16
 708 001e 120C     		lsr	r2, r2, #16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 24


 709 0020 0A43     		orr	r2, r1
 710 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 711              		.loc 1 597 0
 712 0024 BD46     		mov	sp, r7
 713 0026 02B0     		add	sp, sp, #8
 714              		@ sp needed
 715 0028 80BD     		pop	{r7, pc}
 716              	.L52:
 717 002a C046     		.align	2
 718              	.L51:
 719 002c 18003A40 		.word	1077542936
 720              		.cfi_endproc
 721              	.LFE11:
 722              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 723              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 724              		.align	2
 725              		.global	ADC_SetHighLimit
 726              		.code	16
 727              		.thumb_func
 728              		.type	ADC_SetHighLimit, %function
 729              	ADC_SetHighLimit:
 730              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 731              		.loc 1 615 0
 732              		.cfi_startproc
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              		.cfi_def_cfa_register 7
 741 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 742              		.loc 1 616 0
 743 0008 074B     		ldr	r3, .L54
 744 000a 074A     		ldr	r2, .L54
 745 000c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 25


 746 000e 1204     		lsl	r2, r2, #16
 747 0010 120C     		lsr	r2, r2, #16
 748 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 749              		.loc 1 617 0
 750 0014 044B     		ldr	r3, .L54
 751 0016 044A     		ldr	r2, .L54
 752 0018 1168     		ldr	r1, [r2]
 753 001a 7A68     		ldr	r2, [r7, #4]
 754 001c 1204     		lsl	r2, r2, #16
 755 001e 0A43     		orr	r2, r1
 756 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 757              		.loc 1 618 0
 758 0022 BD46     		mov	sp, r7
 759 0024 02B0     		add	sp, sp, #8
 760              		@ sp needed
 761 0026 80BD     		pop	{r7, pc}
 762              	.L55:
 763              		.align	2
 764              	.L54:
 765 0028 18003A40 		.word	1077542936
 766              		.cfi_endproc
 767              	.LFE12:
 768              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 769              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 770              		.align	2
 771              		.global	ADC_SetLimitMask
 772              		.code	16
 773              		.thumb_func
 774              		.type	ADC_SetLimitMask, %function
 775              	ADC_SetLimitMask:
 776              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 777              		.loc 1 639 0
 778              		.cfi_startproc
 779 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 26


 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 82B0     		sub	sp, sp, #8
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 787 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 788              		.loc 1 640 0
 789 0008 034B     		ldr	r3, .L57
 790 000a 7A68     		ldr	r2, [r7, #4]
 791 000c 0121     		mov	r1, #1
 792 000e 0A40     		and	r2, r1
 793 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 794              		.loc 1 641 0
 795 0012 BD46     		mov	sp, r7
 796 0014 02B0     		add	sp, sp, #8
 797              		@ sp needed
 798 0016 80BD     		pop	{r7, pc}
 799              	.L58:
 800              		.align	2
 801              	.L57:
 802 0018 38023A40 		.word	1077543480
 803              		.cfi_endproc
 804              	.LFE13:
 805              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 806              		.section	.text.ADC_SetSatMask,"ax",%progbits
 807              		.align	2
 808              		.global	ADC_SetSatMask
 809              		.code	16
 810              		.thumb_func
 811              		.type	ADC_SetSatMask, %function
 812              	ADC_SetSatMask:
 813              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 27


 814              		.loc 1 662 0
 815              		.cfi_startproc
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 82B0     		sub	sp, sp, #8
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 825              		.loc 1 663 0
 826 0008 034B     		ldr	r3, .L60
 827 000a 7A68     		ldr	r2, [r7, #4]
 828 000c 0121     		mov	r1, #1
 829 000e 0A40     		and	r2, r1
 830 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 831              		.loc 1 664 0
 832 0012 BD46     		mov	sp, r7
 833 0014 02B0     		add	sp, sp, #8
 834              		@ sp needed
 835 0016 80BD     		pop	{r7, pc}
 836              	.L61:
 837              		.align	2
 838              	.L60:
 839 0018 28023A40 		.word	1077543464
 840              		.cfi_endproc
 841              	.LFE14:
 842              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 843              		.section	.text.ADC_SetOffset,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_SetOffset
 846              		.code	16
 847              		.thumb_func
 848              		.type	ADC_SetOffset, %function
 849              	ADC_SetOffset:
 850              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 28


 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 851              		.loc 1 690 0
 852              		.cfi_startproc
 853 0000 80B5     		push	{r7, lr}
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              		.cfi_def_cfa_offset 16
 859 0004 00AF     		add	r7, sp, #0
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 862 0008 0A1C     		mov	r2, r1
 863 000a BB1C     		add	r3, r7, #2
 864 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 865              		.loc 1 692 0
 866 000e 7B68     		ldr	r3, [r7, #4]
 867 0010 002B     		cmp	r3, #0
 868 0012 02D0     		beq	.L63
 869              		.loc 1 692 0 is_stmt 0 discriminator 1
 870 0014 0020     		mov	r0, #0
 871 0016 FFF7FEFF 		bl	CyHalt
 872              	.L63:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 873              		.loc 1 694 0 is_stmt 1
 874 001a 044B     		ldr	r3, .L64
 875 001c 7A68     		ldr	r2, [r7, #4]
 876 001e 5200     		lsl	r2, r2, #1
 877 0020 B91C     		add	r1, r7, #2
 878 0022 0988     		ldrh	r1, [r1]
 879 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 880              		.loc 1 695 0
 881 0026 BD46     		mov	sp, r7
 882 0028 02B0     		add	sp, sp, #8
 883              		@ sp needed
 884 002a 80BD     		pop	{r7, pc}
 885              	.L65:
 886              		.align	2
 887              	.L64:
 888 002c 00000000 		.word	ADC_offset
 889              		.cfi_endproc
 890              	.LFE15:
 891              		.size	ADC_SetOffset, .-ADC_SetOffset
 892              		.section	.text.ADC_SetGain,"ax",%progbits
 893              		.align	2
 894              		.global	ADC_SetGain
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 29


 895              		.code	16
 896              		.thumb_func
 897              		.type	ADC_SetGain, %function
 898              	ADC_SetGain:
 899              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 900              		.loc 1 724 0
 901              		.cfi_startproc
 902 0000 80B5     		push	{r7, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 82B0     		sub	sp, sp, #8
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 911 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 912              		.loc 1 726 0
 913 000a 7B68     		ldr	r3, [r7, #4]
 914 000c 002B     		cmp	r3, #0
 915 000e 02D0     		beq	.L67
 916              		.loc 1 726 0 is_stmt 0 discriminator 1
 917 0010 0020     		mov	r0, #0
 918 0012 FFF7FEFF 		bl	CyHalt
 919              	.L67:
 727:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 30


 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 920              		.loc 1 728 0 is_stmt 1
 921 0016 044B     		ldr	r3, .L68
 922 0018 7A68     		ldr	r2, [r7, #4]
 923 001a 9200     		lsl	r2, r2, #2
 924 001c 3968     		ldr	r1, [r7]
 925 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 926              		.loc 1 729 0
 927 0020 BD46     		mov	sp, r7
 928 0022 02B0     		add	sp, sp, #8
 929              		@ sp needed
 930 0024 80BD     		pop	{r7, pc}
 931              	.L69:
 932 0026 C046     		.align	2
 933              	.L68:
 934 0028 00000000 		.word	ADC_countsPer10Volt
 935              		.cfi_endproc
 936              	.LFE16:
 937              		.size	ADC_SetGain, .-ADC_SetGain
 938              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 939              		.align	2
 940              		.global	ADC_CountsTo_mVolts
 941              		.code	16
 942              		.thumb_func
 943              		.type	ADC_CountsTo_mVolts, %function
 944              	ADC_CountsTo_mVolts:
 945              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 946              		.loc 1 757 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 31


 947              		.cfi_startproc
 948 0000 80B5     		push	{r7, lr}
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 84B0     		sub	sp, sp, #16
 953              		.cfi_def_cfa_offset 24
 954 0004 00AF     		add	r7, sp, #0
 955              		.cfi_def_cfa_register 7
 956 0006 7860     		str	r0, [r7, #4]
 957 0008 0A1C     		mov	r2, r1
 958 000a BB1C     		add	r3, r7, #2
 959 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 960              		.loc 1 761 0
 961 000e 7B68     		ldr	r3, [r7, #4]
 962 0010 002B     		cmp	r3, #0
 963 0012 02D0     		beq	.L71
 964              		.loc 1 761 0 is_stmt 0 discriminator 1
 965 0014 0020     		mov	r0, #0
 966 0016 FFF7FEFF 		bl	CyHalt
 967              	.L71:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 968              		.loc 1 772 0 is_stmt 1
 969 001a 1F4B     		ldr	r3, .L77
 970 001c 7A68     		ldr	r2, [r7, #4]
 971 001e 5200     		lsl	r2, r2, #1
 972 0020 D35A     		ldrh	r3, [r2, r3]
 973 0022 99B2     		uxth	r1, r3
 974 0024 BB1C     		add	r3, r7, #2
 975 0026 1A88     		ldrh	r2, [r3]
 976 0028 8BB2     		uxth	r3, r1
 977 002a D31A     		sub	r3, r2, r3
 978 002c 9AB2     		uxth	r2, r3
 979 002e BB1C     		add	r3, r7, #2
 980 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 981              		.loc 1 774 0
 982 0032 BB1C     		add	r3, r7, #2
 983 0034 0022     		mov	r2, #0
 984 0036 9B5E     		ldrsh	r3, [r3, r2]
 985 0038 184A     		ldr	r2, .L77+4
 986 003a 5A43     		mul	r2, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 32


 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 987              		.loc 1 775 0
 988 003c BB1C     		add	r3, r7, #2
 989 003e 0021     		mov	r1, #0
 990 0040 5B5E     		ldrsh	r3, [r3, r1]
 991 0042 002B     		cmp	r3, #0
 992 0044 08DD     		ble	.L72
 993              		.loc 1 775 0 is_stmt 0 discriminator 1
 994 0046 164B     		ldr	r3, .L77+8
 995 0048 7968     		ldr	r1, [r7, #4]
 996 004a 8900     		lsl	r1, r1, #2
 997 004c CB58     		ldr	r3, [r1, r3]
 998 004e 002B     		cmp	r3, #0
 999 0050 00DA     		bge	.L73
 1000 0052 0133     		add	r3, r3, #1
 1001              	.L73:
 1002 0054 5B10     		asr	r3, r3, #1
 1003 0056 08E0     		b	.L74
 1004              	.L72:
 1005              		.loc 1 775 0 discriminator 2
 1006 0058 114B     		ldr	r3, .L77+8
 1007 005a 7968     		ldr	r1, [r7, #4]
 1008 005c 8900     		lsl	r1, r1, #2
 1009 005e CB58     		ldr	r3, [r1, r3]
 1010 0060 002B     		cmp	r3, #0
 1011 0062 00DA     		bge	.L75
 1012 0064 0133     		add	r3, r3, #1
 1013              	.L75:
 1014 0066 5B10     		asr	r3, r3, #1
 1015 0068 5B42     		neg	r3, r3
 1016              	.L74:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1017              		.loc 1 774 0 is_stmt 1
 1018 006a D118     		add	r1, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1019              		.loc 1 776 0
 1020 006c 0C4B     		ldr	r3, .L77+8
 1021 006e 7A68     		ldr	r2, [r7, #4]
 1022 0070 9200     		lsl	r2, r2, #2
 1023 0072 D358     		ldr	r3, [r2, r3]
 1024 0074 081C     		mov	r0, r1
 1025 0076 191C     		mov	r1, r3
 1026 0078 FFF7FEFF 		bl	__aeabi_idiv
 1027 007c 031C     		mov	r3, r0
 1028 007e 1A1C     		mov	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1029              		.loc 1 774 0
 1030 0080 0E23     		mov	r3, #14
 1031 0082 FB18     		add	r3, r7, r3
 1032 0084 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1033              		.loc 1 778 0
 1034 0086 0E23     		mov	r3, #14
 1035 0088 FB18     		add	r3, r7, r3
 1036 008a 1B88     		ldrh	r3, [r3]
 1037 008c 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 33


 779:Generated_Source\PSoC4/ADC.c ****     }
 1038              		.loc 1 779 0
 1039 008e 181C     		mov	r0, r3
 1040 0090 BD46     		mov	sp, r7
 1041 0092 04B0     		add	sp, sp, #16
 1042              		@ sp needed
 1043 0094 80BD     		pop	{r7, pc}
 1044              	.L78:
 1045 0096 C046     		.align	2
 1046              	.L77:
 1047 0098 00000000 		.word	ADC_offset
 1048 009c 10270000 		.word	10000
 1049 00a0 00000000 		.word	ADC_countsPer10Volt
 1050              		.cfi_endproc
 1051              	.LFE17:
 1052              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1053              		.global	__aeabi_lmul
 1054              		.global	__aeabi_ldivmod
 1055              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1056              		.align	2
 1057              		.global	ADC_CountsTo_uVolts
 1058              		.code	16
 1059              		.thumb_func
 1060              		.type	ADC_CountsTo_uVolts, %function
 1061              	ADC_CountsTo_uVolts:
 1062              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 34


 811:Generated_Source\PSoC4/ADC.c ****     {
 1063              		.loc 1 811 0
 1064              		.cfi_startproc
 1065 0000 B0B5     		push	{r4, r5, r7, lr}
 1066              		.cfi_def_cfa_offset 16
 1067              		.cfi_offset 4, -16
 1068              		.cfi_offset 5, -12
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 86B0     		sub	sp, sp, #24
 1072              		.cfi_def_cfa_offset 40
 1073 0004 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
 1075 0006 F860     		str	r0, [r7, #12]
 1076 0008 0A1C     		mov	r2, r1
 1077 000a 0A23     		mov	r3, #10
 1078 000c FB18     		add	r3, r7, r3
 1079 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1080              		.loc 1 815 0
 1081 0010 FB68     		ldr	r3, [r7, #12]
 1082 0012 002B     		cmp	r3, #0
 1083 0014 02D0     		beq	.L80
 1084              		.loc 1 815 0 is_stmt 0 discriminator 1
 1085 0016 0020     		mov	r0, #0
 1086 0018 FFF7FEFF 		bl	CyHalt
 1087              	.L80:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1088              		.loc 1 826 0 is_stmt 1
 1089 001c 194B     		ldr	r3, .L82
 1090 001e FA68     		ldr	r2, [r7, #12]
 1091 0020 5200     		lsl	r2, r2, #1
 1092 0022 D35A     		ldrh	r3, [r2, r3]
 1093 0024 99B2     		uxth	r1, r3
 1094 0026 0A23     		mov	r3, #10
 1095 0028 FB18     		add	r3, r7, r3
 1096 002a 1A88     		ldrh	r2, [r3]
 1097 002c 8BB2     		uxth	r3, r1
 1098 002e D31A     		sub	r3, r2, r3
 1099 0030 9AB2     		uxth	r2, r3
 1100 0032 0A23     		mov	r3, #10
 1101 0034 FB18     		add	r3, r7, r3
 1102 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 35


 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1103              		.loc 1 828 0
 1104 0038 0A23     		mov	r3, #10
 1105 003a FB18     		add	r3, r7, r3
 1106 003c 1B88     		ldrh	r3, [r3]
 1107 003e 1BB2     		sxth	r3, r3
 1108 0040 3B60     		str	r3, [r7]
 1109 0042 DB17     		asr	r3, r3, #31
 1110 0044 7B60     		str	r3, [r7, #4]
 1111 0046 3868     		ldr	r0, [r7]
 1112 0048 7968     		ldr	r1, [r7, #4]
 1113 004a 0F4A     		ldr	r2, .L82+4
 1114 004c 0023     		mov	r3, #0
 1115 004e FFF7FEFF 		bl	__aeabi_lmul
 1116 0052 021C     		mov	r2, r0
 1117 0054 0B1C     		mov	r3, r1
 1118 0056 101C     		mov	r0, r2
 1119 0058 191C     		mov	r1, r3
 1120 005a 0C4B     		ldr	r3, .L82+8
 1121 005c FA68     		ldr	r2, [r7, #12]
 1122 005e 9200     		lsl	r2, r2, #2
 1123 0060 D358     		ldr	r3, [r2, r3]
 1124 0062 1C1C     		mov	r4, r3
 1125 0064 DB17     		asr	r3, r3, #31
 1126 0066 1D1C     		mov	r5, r3
 1127 0068 221C     		mov	r2, r4
 1128 006a 2B1C     		mov	r3, r5
 1129 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1130 0070 031C     		mov	r3, r0
 1131 0072 0C1C     		mov	r4, r1
 1132 0074 3B61     		str	r3, [r7, #16]
 1133 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1134              		.loc 1 830 0
 1135 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1136              		.loc 1 831 0
 1137 007a 181C     		mov	r0, r3
 1138 007c BD46     		mov	sp, r7
 1139 007e 06B0     		add	sp, sp, #24
 1140              		@ sp needed
 1141 0080 B0BD     		pop	{r4, r5, r7, pc}
 1142              	.L83:
 1143 0082 C046     		.align	2
 1144              	.L82:
 1145 0084 00000000 		.word	ADC_offset
 1146 0088 80969800 		.word	10000000
 1147 008c 00000000 		.word	ADC_countsPer10Volt
 1148              		.cfi_endproc
 1149              	.LFE18:
 1150              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1151              		.global	__aeabi_i2f
 1152              		.global	__aeabi_fmul
 1153              		.global	__aeabi_fdiv
 1154              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1155              		.align	2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 36


 1156              		.global	ADC_CountsTo_Volts
 1157              		.code	16
 1158              		.thumb_func
 1159              		.type	ADC_CountsTo_Volts, %function
 1160              	ADC_CountsTo_Volts:
 1161              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1162              		.loc 1 856 0
 1163              		.cfi_startproc
 1164 0000 90B5     		push	{r4, r7, lr}
 1165              		.cfi_def_cfa_offset 12
 1166              		.cfi_offset 4, -12
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 85B0     		sub	sp, sp, #20
 1170              		.cfi_def_cfa_offset 32
 1171 0004 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
 1173 0006 7860     		str	r0, [r7, #4]
 1174 0008 0A1C     		mov	r2, r1
 1175 000a BB1C     		add	r3, r7, #2
 1176 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1177              		.loc 1 860 0
 1178 000e 7B68     		ldr	r3, [r7, #4]
 1179 0010 002B     		cmp	r3, #0
 1180 0012 02D0     		beq	.L85
 1181              		.loc 1 860 0 is_stmt 0 discriminator 1
 1182 0014 0020     		mov	r0, #0
 1183 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 37


 1184              	.L85:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1185              		.loc 1 871 0 is_stmt 1
 1186 001a 164B     		ldr	r3, .L87
 1187 001c 7A68     		ldr	r2, [r7, #4]
 1188 001e 5200     		lsl	r2, r2, #1
 1189 0020 D35A     		ldrh	r3, [r2, r3]
 1190 0022 99B2     		uxth	r1, r3
 1191 0024 BB1C     		add	r3, r7, #2
 1192 0026 1A88     		ldrh	r2, [r3]
 1193 0028 8BB2     		uxth	r3, r1
 1194 002a D31A     		sub	r3, r2, r3
 1195 002c 9AB2     		uxth	r2, r3
 1196 002e BB1C     		add	r3, r7, #2
 1197 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1198              		.loc 1 873 0
 1199 0032 BB1C     		add	r3, r7, #2
 1200 0034 0022     		mov	r2, #0
 1201 0036 9B5E     		ldrsh	r3, [r3, r2]
 1202 0038 181C     		mov	r0, r3
 1203 003a FFF7FEFF 		bl	__aeabi_i2f
 1204 003e 031C     		add	r3, r0, #0
 1205 0040 181C     		add	r0, r3, #0
 1206 0042 0D49     		ldr	r1, .L87+4
 1207 0044 FFF7FEFF 		bl	__aeabi_fmul
 1208 0048 031C     		add	r3, r0, #0
 1209 004a 1C1C     		add	r4, r3, #0
 1210 004c 0B4B     		ldr	r3, .L87+8
 1211 004e 7A68     		ldr	r2, [r7, #4]
 1212 0050 9200     		lsl	r2, r2, #2
 1213 0052 D358     		ldr	r3, [r2, r3]
 1214 0054 181C     		mov	r0, r3
 1215 0056 FFF7FEFF 		bl	__aeabi_i2f
 1216 005a 031C     		add	r3, r0, #0
 1217 005c 201C     		add	r0, r4, #0
 1218 005e 191C     		add	r1, r3, #0
 1219 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1220 0064 031C     		add	r3, r0, #0
 1221 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1222              		.loc 1 875 0
 1223 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1224              		.loc 1 876 0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 38


 1225 006a 181C     		add	r0, r3, #0
 1226 006c BD46     		mov	sp, r7
 1227 006e 05B0     		add	sp, sp, #20
 1228              		@ sp needed
 1229 0070 90BD     		pop	{r4, r7, pc}
 1230              	.L88:
 1231 0072 C046     		.align	2
 1232              	.L87:
 1233 0074 00000000 		.word	ADC_offset
 1234 0078 00002041 		.word	1092616192
 1235 007c 00000000 		.word	ADC_countsPer10Volt
 1236              		.cfi_endproc
 1237              	.LFE19:
 1238              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1239              		.text
 1240              	.Letext0:
 1241              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1242              		.section	.debug_info,"",%progbits
 1243              	.Ldebug_info0:
 1244 0000 77040000 		.4byte	0x477
 1245 0004 0400     		.2byte	0x4
 1246 0006 00000000 		.4byte	.Ldebug_abbrev0
 1247 000a 04       		.byte	0x4
 1248 000b 01       		.uleb128 0x1
 1249 000c 27000000 		.4byte	.LASF59
 1250 0010 01       		.byte	0x1
 1251 0011 B6020000 		.4byte	.LASF60
 1252 0015 DE020000 		.4byte	.LASF61
 1253 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1254 001d 00000000 		.4byte	0
 1255 0021 00000000 		.4byte	.Ldebug_line0
 1256 0025 02       		.uleb128 0x2
 1257 0026 01       		.byte	0x1
 1258 0027 06       		.byte	0x6
 1259 0028 88030000 		.4byte	.LASF0
 1260 002c 02       		.uleb128 0x2
 1261 002d 01       		.byte	0x1
 1262 002e 08       		.byte	0x8
 1263 002f 52010000 		.4byte	.LASF1
 1264 0033 02       		.uleb128 0x2
 1265 0034 02       		.byte	0x2
 1266 0035 05       		.byte	0x5
 1267 0036 FA000000 		.4byte	.LASF2
 1268 003a 02       		.uleb128 0x2
 1269 003b 02       		.byte	0x2
 1270 003c 07       		.byte	0x7
 1271 003d E7000000 		.4byte	.LASF3
 1272 0041 02       		.uleb128 0x2
 1273 0042 04       		.byte	0x4
 1274 0043 05       		.byte	0x5
 1275 0044 7A030000 		.4byte	.LASF4
 1276 0048 02       		.uleb128 0x2
 1277 0049 04       		.byte	0x4
 1278 004a 07       		.byte	0x7
 1279 004b 77010000 		.4byte	.LASF5
 1280 004f 02       		.uleb128 0x2
 1281 0050 08       		.byte	0x8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 39


 1282 0051 05       		.byte	0x5
 1283 0052 00000000 		.4byte	.LASF6
 1284 0056 02       		.uleb128 0x2
 1285 0057 08       		.byte	0x8
 1286 0058 07       		.byte	0x7
 1287 0059 32020000 		.4byte	.LASF7
 1288 005d 03       		.uleb128 0x3
 1289 005e 04       		.byte	0x4
 1290 005f 05       		.byte	0x5
 1291 0060 696E7400 		.ascii	"int\000"
 1292 0064 02       		.uleb128 0x2
 1293 0065 04       		.byte	0x4
 1294 0066 07       		.byte	0x7
 1295 0067 13020000 		.4byte	.LASF8
 1296 006b 04       		.uleb128 0x4
 1297 006c 60030000 		.4byte	.LASF9
 1298 0070 02       		.byte	0x2
 1299 0071 9801     		.2byte	0x198
 1300 0073 2C000000 		.4byte	0x2c
 1301 0077 04       		.uleb128 0x4
 1302 0078 EA010000 		.4byte	.LASF10
 1303 007c 02       		.byte	0x2
 1304 007d 9901     		.2byte	0x199
 1305 007f 3A000000 		.4byte	0x3a
 1306 0083 04       		.uleb128 0x4
 1307 0084 FB010000 		.4byte	.LASF11
 1308 0088 02       		.byte	0x2
 1309 0089 9A01     		.2byte	0x19a
 1310 008b 48000000 		.4byte	0x48
 1311 008f 04       		.uleb128 0x4
 1312 0090 71010000 		.4byte	.LASF12
 1313 0094 02       		.byte	0x2
 1314 0095 9C01     		.2byte	0x19c
 1315 0097 33000000 		.4byte	0x33
 1316 009b 04       		.uleb128 0x4
 1317 009c 89010000 		.4byte	.LASF13
 1318 00a0 02       		.byte	0x2
 1319 00a1 9D01     		.2byte	0x19d
 1320 00a3 41000000 		.4byte	0x41
 1321 00a7 04       		.uleb128 0x4
 1322 00a8 29010000 		.4byte	.LASF14
 1323 00ac 02       		.byte	0x2
 1324 00ad 9E01     		.2byte	0x19e
 1325 00af B3000000 		.4byte	0xb3
 1326 00b3 02       		.uleb128 0x2
 1327 00b4 04       		.byte	0x4
 1328 00b5 04       		.byte	0x4
 1329 00b6 BC000000 		.4byte	.LASF15
 1330 00ba 02       		.uleb128 0x2
 1331 00bb 08       		.byte	0x8
 1332 00bc 04       		.byte	0x4
 1333 00bd D2010000 		.4byte	.LASF16
 1334 00c1 04       		.uleb128 0x4
 1335 00c2 A0030000 		.4byte	.LASF17
 1336 00c6 02       		.byte	0x2
 1337 00c7 A301     		.2byte	0x1a3
 1338 00c9 4F000000 		.4byte	0x4f
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 40


 1339 00cd 02       		.uleb128 0x2
 1340 00ce 01       		.byte	0x1
 1341 00cf 08       		.byte	0x8
 1342 00d0 83030000 		.4byte	.LASF18
 1343 00d4 04       		.uleb128 0x4
 1344 00d5 21000000 		.4byte	.LASF19
 1345 00d9 02       		.byte	0x2
 1346 00da 4402     		.2byte	0x244
 1347 00dc E0000000 		.4byte	0xe0
 1348 00e0 05       		.uleb128 0x5
 1349 00e1 83000000 		.4byte	0x83
 1350 00e5 02       		.uleb128 0x2
 1351 00e6 04       		.byte	0x4
 1352 00e7 07       		.byte	0x7
 1353 00e8 75020000 		.4byte	.LASF20
 1354 00ec 06       		.uleb128 0x6
 1355 00ed 50020000 		.4byte	.LASF24
 1356 00f1 01       		.byte	0x1
 1357 00f2 3F       		.byte	0x3f
 1358 00f3 00000000 		.4byte	.LFB2
 1359 00f7 24000000 		.4byte	.LFE2-.LFB2
 1360 00fb 01       		.uleb128 0x1
 1361 00fc 9C       		.byte	0x9c
 1362 00fd 07       		.uleb128 0x7
 1363 00fe 5A020000 		.4byte	.LASF35
 1364 0102 01       		.byte	0x1
 1365 0103 5E       		.byte	0x5e
 1366 0104 00000000 		.4byte	.LFB3
 1367 0108 D0010000 		.4byte	.LFE3-.LFB3
 1368 010c 01       		.uleb128 0x1
 1369 010d 9C       		.byte	0x9c
 1370 010e 3D010000 		.4byte	0x13d
 1371 0112 08       		.uleb128 0x8
 1372 0113 D8020000 		.4byte	.LASF21
 1373 0117 01       		.byte	0x1
 1374 0118 60       		.byte	0x60
 1375 0119 83000000 		.4byte	0x83
 1376 011d 02       		.uleb128 0x2
 1377 011e 91       		.byte	0x91
 1378 011f 74       		.sleb128 -12
 1379 0120 08       		.uleb128 0x8
 1380 0121 3C010000 		.4byte	.LASF22
 1381 0125 01       		.byte	0x1
 1382 0126 61       		.byte	0x61
 1383 0127 83000000 		.4byte	0x83
 1384 012b 02       		.uleb128 0x2
 1385 012c 91       		.byte	0x91
 1386 012d 6C       		.sleb128 -20
 1387 012e 08       		.uleb128 0x8
 1388 012f 2B020000 		.4byte	.LASF23
 1389 0133 01       		.byte	0x1
 1390 0134 62       		.byte	0x62
 1391 0135 9B000000 		.4byte	0x9b
 1392 0139 02       		.uleb128 0x2
 1393 013a 91       		.byte	0x91
 1394 013b 70       		.sleb128 -16
 1395 013c 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 41


 1396 013d 09       		.uleb128 0x9
 1397 013e 20020000 		.4byte	.LASF25
 1398 0142 01       		.byte	0x1
 1399 0143 4A01     		.2byte	0x14a
 1400 0145 00000000 		.4byte	.LFB4
 1401 0149 38000000 		.4byte	.LFE4-.LFB4
 1402 014d 01       		.uleb128 0x1
 1403 014e 9C       		.byte	0x9c
 1404 014f 0A       		.uleb128 0xa
 1405 0150 A6030000 		.4byte	.LASF26
 1406 0154 01       		.byte	0x1
 1407 0155 6D01     		.2byte	0x16d
 1408 0157 00000000 		.4byte	.LFB5
 1409 015b 18000000 		.4byte	.LFE5-.LFB5
 1410 015f 01       		.uleb128 0x1
 1411 0160 9C       		.byte	0x9c
 1412 0161 0A       		.uleb128 0xa
 1413 0162 A5020000 		.4byte	.LASF27
 1414 0166 01       		.byte	0x1
 1415 0167 8701     		.2byte	0x187
 1416 0169 00000000 		.4byte	.LFB6
 1417 016d 1C000000 		.4byte	.LFE6-.LFB6
 1418 0171 01       		.uleb128 0x1
 1419 0172 9C       		.byte	0x9c
 1420 0173 0A       		.uleb128 0xa
 1421 0174 50030000 		.4byte	.LASF28
 1422 0178 01       		.byte	0x1
 1423 0179 A001     		.2byte	0x1a0
 1424 017b 00000000 		.4byte	.LFB7
 1425 017f 1C000000 		.4byte	.LFE7-.LFB7
 1426 0183 01       		.uleb128 0x1
 1427 0184 9C       		.byte	0x9c
 1428 0185 0B       		.uleb128 0xb
 1429 0186 BE010000 		.4byte	.LASF30
 1430 018a 01       		.byte	0x1
 1431 018b C201     		.2byte	0x1c2
 1432 018d 83000000 		.4byte	0x83
 1433 0191 00000000 		.4byte	.LFB8
 1434 0195 48000000 		.4byte	.LFE8-.LFB8
 1435 0199 01       		.uleb128 0x1
 1436 019a 9C       		.byte	0x9c
 1437 019b BE010000 		.4byte	0x1be
 1438 019f 0C       		.uleb128 0xc
 1439 01a0 48030000 		.4byte	.LASF32
 1440 01a4 01       		.byte	0x1
 1441 01a5 C201     		.2byte	0x1c2
 1442 01a7 83000000 		.4byte	0x83
 1443 01ab 02       		.uleb128 0x2
 1444 01ac 91       		.byte	0x91
 1445 01ad 6C       		.sleb128 -20
 1446 01ae 0D       		.uleb128 0xd
 1447 01af 22010000 		.4byte	.LASF29
 1448 01b3 01       		.byte	0x1
 1449 01b4 C401     		.2byte	0x1c4
 1450 01b6 83000000 		.4byte	0x83
 1451 01ba 02       		.uleb128 0x2
 1452 01bb 91       		.byte	0x91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 42


 1453 01bc 74       		.sleb128 -12
 1454 01bd 00       		.byte	0
 1455 01be 0E       		.uleb128 0xe
 1456 01bf 8F010000 		.4byte	.LASF31
 1457 01c3 01       		.byte	0x1
 1458 01c4 F801     		.2byte	0x1f8
 1459 01c6 8F000000 		.4byte	0x8f
 1460 01ca 00000000 		.4byte	.LFB9
 1461 01ce 44000000 		.4byte	.LFE9-.LFB9
 1462 01d2 01       		.uleb128 0x1
 1463 01d3 9C       		.byte	0x9c
 1464 01d4 F7010000 		.4byte	0x1f7
 1465 01d8 0C       		.uleb128 0xc
 1466 01d9 69020000 		.4byte	.LASF33
 1467 01dd 01       		.byte	0x1
 1468 01de F801     		.2byte	0x1f8
 1469 01e0 83000000 		.4byte	0x83
 1470 01e4 02       		.uleb128 0x2
 1471 01e5 91       		.byte	0x91
 1472 01e6 6C       		.sleb128 -20
 1473 01e7 0D       		.uleb128 0xd
 1474 01e8 49020000 		.4byte	.LASF34
 1475 01ec 01       		.byte	0x1
 1476 01ed FA01     		.2byte	0x1fa
 1477 01ef 83000000 		.4byte	0x83
 1478 01f3 02       		.uleb128 0x2
 1479 01f4 91       		.byte	0x91
 1480 01f5 74       		.sleb128 -12
 1481 01f6 00       		.byte	0
 1482 01f7 0F       		.uleb128 0xf
 1483 01f8 9F010000 		.4byte	.LASF36
 1484 01fc 01       		.byte	0x1
 1485 01fd 2502     		.2byte	0x225
 1486 01ff 00000000 		.4byte	.LFB10
 1487 0203 1C000000 		.4byte	.LFE10-.LFB10
 1488 0207 01       		.uleb128 0x1
 1489 0208 9C       		.byte	0x9c
 1490 0209 1D020000 		.4byte	0x21d
 1491 020d 0C       		.uleb128 0xc
 1492 020e D3020000 		.4byte	.LASF37
 1493 0212 01       		.byte	0x1
 1494 0213 2502     		.2byte	0x225
 1495 0215 83000000 		.4byte	0x83
 1496 0219 02       		.uleb128 0x2
 1497 021a 91       		.byte	0x91
 1498 021b 74       		.sleb128 -12
 1499 021c 00       		.byte	0
 1500 021d 0F       		.uleb128 0xf
 1501 021e 12010000 		.4byte	.LASF38
 1502 0222 01       		.byte	0x1
 1503 0223 5102     		.2byte	0x251
 1504 0225 00000000 		.4byte	.LFB11
 1505 0229 30000000 		.4byte	.LFE11-.LFB11
 1506 022d 01       		.uleb128 0x1
 1507 022e 9C       		.byte	0x9c
 1508 022f 43020000 		.4byte	0x243
 1509 0233 0C       		.uleb128 0xc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 43


 1510 0234 D9010000 		.4byte	.LASF39
 1511 0238 01       		.byte	0x1
 1512 0239 5102     		.2byte	0x251
 1513 023b 83000000 		.4byte	0x83
 1514 023f 02       		.uleb128 0x2
 1515 0240 91       		.byte	0x91
 1516 0241 74       		.sleb128 -12
 1517 0242 00       		.byte	0
 1518 0243 0F       		.uleb128 0xf
 1519 0244 60010000 		.4byte	.LASF40
 1520 0248 01       		.byte	0x1
 1521 0249 6602     		.2byte	0x266
 1522 024b 00000000 		.4byte	.LFB12
 1523 024f 2C000000 		.4byte	.LFE12-.LFB12
 1524 0253 01       		.uleb128 0x1
 1525 0254 9C       		.byte	0x9c
 1526 0255 69020000 		.4byte	0x269
 1527 0259 0C       		.uleb128 0xc
 1528 025a C2000000 		.4byte	.LASF41
 1529 025e 01       		.byte	0x1
 1530 025f 6602     		.2byte	0x266
 1531 0261 83000000 		.4byte	0x83
 1532 0265 02       		.uleb128 0x2
 1533 0266 91       		.byte	0x91
 1534 0267 74       		.sleb128 -12
 1535 0268 00       		.byte	0
 1536 0269 0F       		.uleb128 0xf
 1537 026a 02020000 		.4byte	.LASF42
 1538 026e 01       		.byte	0x1
 1539 026f 7E02     		.2byte	0x27e
 1540 0271 00000000 		.4byte	.LFB13
 1541 0275 1C000000 		.4byte	.LFE13-.LFB13
 1542 0279 01       		.uleb128 0x1
 1543 027a 9C       		.byte	0x9c
 1544 027b 8F020000 		.4byte	0x28f
 1545 027f 0C       		.uleb128 0xc
 1546 0280 D3020000 		.4byte	.LASF37
 1547 0284 01       		.byte	0x1
 1548 0285 7E02     		.2byte	0x27e
 1549 0287 83000000 		.4byte	0x83
 1550 028b 02       		.uleb128 0x2
 1551 028c 91       		.byte	0x91
 1552 028d 74       		.sleb128 -12
 1553 028e 00       		.byte	0
 1554 028f 0F       		.uleb128 0xf
 1555 0290 AF010000 		.4byte	.LASF43
 1556 0294 01       		.byte	0x1
 1557 0295 9502     		.2byte	0x295
 1558 0297 00000000 		.4byte	.LFB14
 1559 029b 1C000000 		.4byte	.LFE14-.LFB14
 1560 029f 01       		.uleb128 0x1
 1561 02a0 9C       		.byte	0x9c
 1562 02a1 B5020000 		.4byte	0x2b5
 1563 02a5 0C       		.uleb128 0xc
 1564 02a6 D3020000 		.4byte	.LASF37
 1565 02aa 01       		.byte	0x1
 1566 02ab 9502     		.2byte	0x295
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 44


 1567 02ad 83000000 		.4byte	0x83
 1568 02b1 02       		.uleb128 0x2
 1569 02b2 91       		.byte	0x91
 1570 02b3 74       		.sleb128 -12
 1571 02b4 00       		.byte	0
 1572 02b5 10       		.uleb128 0x10
 1573 02b6 04010000 		.4byte	.LASF44
 1574 02ba 01       		.byte	0x1
 1575 02bb B102     		.2byte	0x2b1
 1576 02bd 00000000 		.4byte	.LFB15
 1577 02c1 30000000 		.4byte	.LFE15-.LFB15
 1578 02c5 01       		.uleb128 0x1
 1579 02c6 9C       		.byte	0x9c
 1580 02c7 EA020000 		.4byte	0x2ea
 1581 02cb 0C       		.uleb128 0xc
 1582 02cc 69020000 		.4byte	.LASF33
 1583 02d0 01       		.byte	0x1
 1584 02d1 B102     		.2byte	0x2b1
 1585 02d3 83000000 		.4byte	0x83
 1586 02d7 02       		.uleb128 0x2
 1587 02d8 91       		.byte	0x91
 1588 02d9 74       		.sleb128 -12
 1589 02da 0C       		.uleb128 0xc
 1590 02db B5000000 		.4byte	.LASF45
 1591 02df 01       		.byte	0x1
 1592 02e0 B102     		.2byte	0x2b1
 1593 02e2 8F000000 		.4byte	0x8f
 1594 02e6 02       		.uleb128 0x2
 1595 02e7 91       		.byte	0x91
 1596 02e8 72       		.sleb128 -14
 1597 02e9 00       		.byte	0
 1598 02ea 10       		.uleb128 0x10
 1599 02eb 46010000 		.4byte	.LASF46
 1600 02ef 01       		.byte	0x1
 1601 02f0 D302     		.2byte	0x2d3
 1602 02f2 00000000 		.4byte	.LFB16
 1603 02f6 2C000000 		.4byte	.LFE16-.LFB16
 1604 02fa 01       		.uleb128 0x1
 1605 02fb 9C       		.byte	0x9c
 1606 02fc 1F030000 		.4byte	0x31f
 1607 0300 0C       		.uleb128 0xc
 1608 0301 69020000 		.4byte	.LASF33
 1609 0305 01       		.byte	0x1
 1610 0306 D302     		.2byte	0x2d3
 1611 0308 83000000 		.4byte	0x83
 1612 030c 02       		.uleb128 0x2
 1613 030d 91       		.byte	0x91
 1614 030e 74       		.sleb128 -12
 1615 030f 0C       		.uleb128 0xc
 1616 0310 E2010000 		.4byte	.LASF47
 1617 0314 01       		.byte	0x1
 1618 0315 D302     		.2byte	0x2d3
 1619 0317 9B000000 		.4byte	0x9b
 1620 031b 02       		.uleb128 0x2
 1621 031c 91       		.byte	0x91
 1622 031d 70       		.sleb128 -16
 1623 031e 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 45


 1624 031f 0E       		.uleb128 0xe
 1625 0320 CC000000 		.4byte	.LASF48
 1626 0324 01       		.byte	0x1
 1627 0325 F402     		.2byte	0x2f4
 1628 0327 8F000000 		.4byte	0x8f
 1629 032b 00000000 		.4byte	.LFB17
 1630 032f A4000000 		.4byte	.LFE17-.LFB17
 1631 0333 01       		.uleb128 0x1
 1632 0334 9C       		.byte	0x9c
 1633 0335 67030000 		.4byte	0x367
 1634 0339 0C       		.uleb128 0xc
 1635 033a 69020000 		.4byte	.LASF33
 1636 033e 01       		.byte	0x1
 1637 033f F402     		.2byte	0x2f4
 1638 0341 83000000 		.4byte	0x83
 1639 0345 02       		.uleb128 0x2
 1640 0346 91       		.byte	0x91
 1641 0347 6C       		.sleb128 -20
 1642 0348 0C       		.uleb128 0xc
 1643 0349 F1010000 		.4byte	.LASF49
 1644 034d 01       		.byte	0x1
 1645 034e F402     		.2byte	0x2f4
 1646 0350 8F000000 		.4byte	0x8f
 1647 0354 02       		.uleb128 0x2
 1648 0355 91       		.byte	0x91
 1649 0356 6A       		.sleb128 -22
 1650 0357 0D       		.uleb128 0xd
 1651 0358 6E020000 		.4byte	.LASF50
 1652 035c 01       		.byte	0x1
 1653 035d F602     		.2byte	0x2f6
 1654 035f 8F000000 		.4byte	0x8f
 1655 0363 02       		.uleb128 0x2
 1656 0364 91       		.byte	0x91
 1657 0365 76       		.sleb128 -10
 1658 0366 00       		.byte	0
 1659 0367 0E       		.uleb128 0xe
 1660 0368 7E020000 		.4byte	.LASF51
 1661 036c 01       		.byte	0x1
 1662 036d 2A03     		.2byte	0x32a
 1663 036f 9B000000 		.4byte	0x9b
 1664 0373 00000000 		.4byte	.LFB18
 1665 0377 90000000 		.4byte	.LFE18-.LFB18
 1666 037b 01       		.uleb128 0x1
 1667 037c 9C       		.byte	0x9c
 1668 037d AF030000 		.4byte	0x3af
 1669 0381 0C       		.uleb128 0xc
 1670 0382 69020000 		.4byte	.LASF33
 1671 0386 01       		.byte	0x1
 1672 0387 2A03     		.2byte	0x32a
 1673 0389 83000000 		.4byte	0x83
 1674 038d 02       		.uleb128 0x2
 1675 038e 91       		.byte	0x91
 1676 038f 64       		.sleb128 -28
 1677 0390 0C       		.uleb128 0xc
 1678 0391 F1010000 		.4byte	.LASF49
 1679 0395 01       		.byte	0x1
 1680 0396 2A03     		.2byte	0x32a
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 46


 1681 0398 8F000000 		.4byte	0x8f
 1682 039c 02       		.uleb128 0x2
 1683 039d 91       		.byte	0x91
 1684 039e 62       		.sleb128 -30
 1685 039f 0D       		.uleb128 0xd
 1686 03a0 E0000000 		.4byte	.LASF52
 1687 03a4 01       		.byte	0x1
 1688 03a5 2C03     		.2byte	0x32c
 1689 03a7 C1000000 		.4byte	0xc1
 1690 03ab 02       		.uleb128 0x2
 1691 03ac 91       		.byte	0x91
 1692 03ad 68       		.sleb128 -24
 1693 03ae 00       		.byte	0
 1694 03af 0E       		.uleb128 0xe
 1695 03b0 92020000 		.4byte	.LASF53
 1696 03b4 01       		.byte	0x1
 1697 03b5 5703     		.2byte	0x357
 1698 03b7 A7000000 		.4byte	0xa7
 1699 03bb 00000000 		.4byte	.LFB19
 1700 03bf 80000000 		.4byte	.LFE19-.LFB19
 1701 03c3 01       		.uleb128 0x1
 1702 03c4 9C       		.byte	0x9c
 1703 03c5 F7030000 		.4byte	0x3f7
 1704 03c9 0C       		.uleb128 0xc
 1705 03ca 69020000 		.4byte	.LASF33
 1706 03ce 01       		.byte	0x1
 1707 03cf 5703     		.2byte	0x357
 1708 03d1 83000000 		.4byte	0x83
 1709 03d5 02       		.uleb128 0x2
 1710 03d6 91       		.byte	0x91
 1711 03d7 64       		.sleb128 -28
 1712 03d8 0C       		.uleb128 0xc
 1713 03d9 F1010000 		.4byte	.LASF49
 1714 03dd 01       		.byte	0x1
 1715 03de 5703     		.2byte	0x357
 1716 03e0 8F000000 		.4byte	0x8f
 1717 03e4 02       		.uleb128 0x2
 1718 03e5 91       		.byte	0x91
 1719 03e6 62       		.sleb128 -30
 1720 03e7 0D       		.uleb128 0xd
 1721 03e8 63020000 		.4byte	.LASF54
 1722 03ec 01       		.byte	0x1
 1723 03ed 5903     		.2byte	0x359
 1724 03ef A7000000 		.4byte	0xa7
 1725 03f3 02       		.uleb128 0x2
 1726 03f4 91       		.byte	0x91
 1727 03f5 6C       		.sleb128 -20
 1728 03f6 00       		.byte	0
 1729 03f7 11       		.uleb128 0x11
 1730 03f8 83000000 		.4byte	0x83
 1731 03fc 07040000 		.4byte	0x407
 1732 0400 12       		.uleb128 0x12
 1733 0401 E5000000 		.4byte	0xe5
 1734 0405 00       		.byte	0
 1735 0406 00       		.byte	0
 1736 0407 08       		.uleb128 0x8
 1737 0408 0E000000 		.4byte	.LASF55
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 47


 1738 040c 01       		.byte	0x1
 1739 040d 21       		.byte	0x21
 1740 040e 18040000 		.4byte	0x418
 1741 0412 05       		.uleb128 0x5
 1742 0413 03       		.byte	0x3
 1743 0414 00000000 		.4byte	ADC_channelsConfig
 1744 0418 13       		.uleb128 0x13
 1745 0419 F7030000 		.4byte	0x3f7
 1746 041d 14       		.uleb128 0x14
 1747 041e 94030000 		.4byte	.LASF56
 1748 0422 01       		.byte	0x1
 1749 0423 18       		.byte	0x18
 1750 0424 6B000000 		.4byte	0x6b
 1751 0428 05       		.uleb128 0x5
 1752 0429 03       		.byte	0x3
 1753 042a 00000000 		.4byte	ADC_initVar
 1754 042e 11       		.uleb128 0x11
 1755 042f 8F000000 		.4byte	0x8f
 1756 0433 3E040000 		.4byte	0x43e
 1757 0437 12       		.uleb128 0x12
 1758 0438 E5000000 		.4byte	0xe5
 1759 043c 00       		.byte	0
 1760 043d 00       		.byte	0
 1761 043e 14       		.uleb128 0x14
 1762 043f 31010000 		.4byte	.LASF57
 1763 0443 01       		.byte	0x1
 1764 0444 19       		.byte	0x19
 1765 0445 4F040000 		.4byte	0x44f
 1766 0449 05       		.uleb128 0x5
 1767 044a 03       		.byte	0x3
 1768 044b 00000000 		.4byte	ADC_offset
 1769 044f 05       		.uleb128 0x5
 1770 0450 2E040000 		.4byte	0x42e
 1771 0454 11       		.uleb128 0x11
 1772 0455 9B000000 		.4byte	0x9b
 1773 0459 64040000 		.4byte	0x464
 1774 045d 12       		.uleb128 0x12
 1775 045e E5000000 		.4byte	0xe5
 1776 0462 00       		.byte	0
 1777 0463 00       		.byte	0
 1778 0464 14       		.uleb128 0x14
 1779 0465 66030000 		.4byte	.LASF58
 1780 0469 01       		.byte	0x1
 1781 046a 1A       		.byte	0x1a
 1782 046b 75040000 		.4byte	0x475
 1783 046f 05       		.uleb128 0x5
 1784 0470 03       		.byte	0x3
 1785 0471 00000000 		.4byte	ADC_countsPer10Volt
 1786 0475 05       		.uleb128 0x5
 1787 0476 54040000 		.4byte	0x454
 1788 047a 00       		.byte	0
 1789              		.section	.debug_abbrev,"",%progbits
 1790              	.Ldebug_abbrev0:
 1791 0000 01       		.uleb128 0x1
 1792 0001 11       		.uleb128 0x11
 1793 0002 01       		.byte	0x1
 1794 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 48


 1795 0004 0E       		.uleb128 0xe
 1796 0005 13       		.uleb128 0x13
 1797 0006 0B       		.uleb128 0xb
 1798 0007 03       		.uleb128 0x3
 1799 0008 0E       		.uleb128 0xe
 1800 0009 1B       		.uleb128 0x1b
 1801 000a 0E       		.uleb128 0xe
 1802 000b 55       		.uleb128 0x55
 1803 000c 17       		.uleb128 0x17
 1804 000d 11       		.uleb128 0x11
 1805 000e 01       		.uleb128 0x1
 1806 000f 10       		.uleb128 0x10
 1807 0010 17       		.uleb128 0x17
 1808 0011 00       		.byte	0
 1809 0012 00       		.byte	0
 1810 0013 02       		.uleb128 0x2
 1811 0014 24       		.uleb128 0x24
 1812 0015 00       		.byte	0
 1813 0016 0B       		.uleb128 0xb
 1814 0017 0B       		.uleb128 0xb
 1815 0018 3E       		.uleb128 0x3e
 1816 0019 0B       		.uleb128 0xb
 1817 001a 03       		.uleb128 0x3
 1818 001b 0E       		.uleb128 0xe
 1819 001c 00       		.byte	0
 1820 001d 00       		.byte	0
 1821 001e 03       		.uleb128 0x3
 1822 001f 24       		.uleb128 0x24
 1823 0020 00       		.byte	0
 1824 0021 0B       		.uleb128 0xb
 1825 0022 0B       		.uleb128 0xb
 1826 0023 3E       		.uleb128 0x3e
 1827 0024 0B       		.uleb128 0xb
 1828 0025 03       		.uleb128 0x3
 1829 0026 08       		.uleb128 0x8
 1830 0027 00       		.byte	0
 1831 0028 00       		.byte	0
 1832 0029 04       		.uleb128 0x4
 1833 002a 16       		.uleb128 0x16
 1834 002b 00       		.byte	0
 1835 002c 03       		.uleb128 0x3
 1836 002d 0E       		.uleb128 0xe
 1837 002e 3A       		.uleb128 0x3a
 1838 002f 0B       		.uleb128 0xb
 1839 0030 3B       		.uleb128 0x3b
 1840 0031 05       		.uleb128 0x5
 1841 0032 49       		.uleb128 0x49
 1842 0033 13       		.uleb128 0x13
 1843 0034 00       		.byte	0
 1844 0035 00       		.byte	0
 1845 0036 05       		.uleb128 0x5
 1846 0037 35       		.uleb128 0x35
 1847 0038 00       		.byte	0
 1848 0039 49       		.uleb128 0x49
 1849 003a 13       		.uleb128 0x13
 1850 003b 00       		.byte	0
 1851 003c 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 49


 1852 003d 06       		.uleb128 0x6
 1853 003e 2E       		.uleb128 0x2e
 1854 003f 00       		.byte	0
 1855 0040 3F       		.uleb128 0x3f
 1856 0041 19       		.uleb128 0x19
 1857 0042 03       		.uleb128 0x3
 1858 0043 0E       		.uleb128 0xe
 1859 0044 3A       		.uleb128 0x3a
 1860 0045 0B       		.uleb128 0xb
 1861 0046 3B       		.uleb128 0x3b
 1862 0047 0B       		.uleb128 0xb
 1863 0048 27       		.uleb128 0x27
 1864 0049 19       		.uleb128 0x19
 1865 004a 11       		.uleb128 0x11
 1866 004b 01       		.uleb128 0x1
 1867 004c 12       		.uleb128 0x12
 1868 004d 06       		.uleb128 0x6
 1869 004e 40       		.uleb128 0x40
 1870 004f 18       		.uleb128 0x18
 1871 0050 9642     		.uleb128 0x2116
 1872 0052 19       		.uleb128 0x19
 1873 0053 00       		.byte	0
 1874 0054 00       		.byte	0
 1875 0055 07       		.uleb128 0x7
 1876 0056 2E       		.uleb128 0x2e
 1877 0057 01       		.byte	0x1
 1878 0058 3F       		.uleb128 0x3f
 1879 0059 19       		.uleb128 0x19
 1880 005a 03       		.uleb128 0x3
 1881 005b 0E       		.uleb128 0xe
 1882 005c 3A       		.uleb128 0x3a
 1883 005d 0B       		.uleb128 0xb
 1884 005e 3B       		.uleb128 0x3b
 1885 005f 0B       		.uleb128 0xb
 1886 0060 27       		.uleb128 0x27
 1887 0061 19       		.uleb128 0x19
 1888 0062 11       		.uleb128 0x11
 1889 0063 01       		.uleb128 0x1
 1890 0064 12       		.uleb128 0x12
 1891 0065 06       		.uleb128 0x6
 1892 0066 40       		.uleb128 0x40
 1893 0067 18       		.uleb128 0x18
 1894 0068 9642     		.uleb128 0x2116
 1895 006a 19       		.uleb128 0x19
 1896 006b 01       		.uleb128 0x1
 1897 006c 13       		.uleb128 0x13
 1898 006d 00       		.byte	0
 1899 006e 00       		.byte	0
 1900 006f 08       		.uleb128 0x8
 1901 0070 34       		.uleb128 0x34
 1902 0071 00       		.byte	0
 1903 0072 03       		.uleb128 0x3
 1904 0073 0E       		.uleb128 0xe
 1905 0074 3A       		.uleb128 0x3a
 1906 0075 0B       		.uleb128 0xb
 1907 0076 3B       		.uleb128 0x3b
 1908 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 50


 1909 0078 49       		.uleb128 0x49
 1910 0079 13       		.uleb128 0x13
 1911 007a 02       		.uleb128 0x2
 1912 007b 18       		.uleb128 0x18
 1913 007c 00       		.byte	0
 1914 007d 00       		.byte	0
 1915 007e 09       		.uleb128 0x9
 1916 007f 2E       		.uleb128 0x2e
 1917 0080 00       		.byte	0
 1918 0081 3F       		.uleb128 0x3f
 1919 0082 19       		.uleb128 0x19
 1920 0083 03       		.uleb128 0x3
 1921 0084 0E       		.uleb128 0xe
 1922 0085 3A       		.uleb128 0x3a
 1923 0086 0B       		.uleb128 0xb
 1924 0087 3B       		.uleb128 0x3b
 1925 0088 05       		.uleb128 0x5
 1926 0089 27       		.uleb128 0x27
 1927 008a 19       		.uleb128 0x19
 1928 008b 11       		.uleb128 0x11
 1929 008c 01       		.uleb128 0x1
 1930 008d 12       		.uleb128 0x12
 1931 008e 06       		.uleb128 0x6
 1932 008f 40       		.uleb128 0x40
 1933 0090 18       		.uleb128 0x18
 1934 0091 9642     		.uleb128 0x2116
 1935 0093 19       		.uleb128 0x19
 1936 0094 00       		.byte	0
 1937 0095 00       		.byte	0
 1938 0096 0A       		.uleb128 0xa
 1939 0097 2E       		.uleb128 0x2e
 1940 0098 00       		.byte	0
 1941 0099 3F       		.uleb128 0x3f
 1942 009a 19       		.uleb128 0x19
 1943 009b 03       		.uleb128 0x3
 1944 009c 0E       		.uleb128 0xe
 1945 009d 3A       		.uleb128 0x3a
 1946 009e 0B       		.uleb128 0xb
 1947 009f 3B       		.uleb128 0x3b
 1948 00a0 05       		.uleb128 0x5
 1949 00a1 27       		.uleb128 0x27
 1950 00a2 19       		.uleb128 0x19
 1951 00a3 11       		.uleb128 0x11
 1952 00a4 01       		.uleb128 0x1
 1953 00a5 12       		.uleb128 0x12
 1954 00a6 06       		.uleb128 0x6
 1955 00a7 40       		.uleb128 0x40
 1956 00a8 18       		.uleb128 0x18
 1957 00a9 9742     		.uleb128 0x2117
 1958 00ab 19       		.uleb128 0x19
 1959 00ac 00       		.byte	0
 1960 00ad 00       		.byte	0
 1961 00ae 0B       		.uleb128 0xb
 1962 00af 2E       		.uleb128 0x2e
 1963 00b0 01       		.byte	0x1
 1964 00b1 3F       		.uleb128 0x3f
 1965 00b2 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 51


 1966 00b3 03       		.uleb128 0x3
 1967 00b4 0E       		.uleb128 0xe
 1968 00b5 3A       		.uleb128 0x3a
 1969 00b6 0B       		.uleb128 0xb
 1970 00b7 3B       		.uleb128 0x3b
 1971 00b8 05       		.uleb128 0x5
 1972 00b9 27       		.uleb128 0x27
 1973 00ba 19       		.uleb128 0x19
 1974 00bb 49       		.uleb128 0x49
 1975 00bc 13       		.uleb128 0x13
 1976 00bd 11       		.uleb128 0x11
 1977 00be 01       		.uleb128 0x1
 1978 00bf 12       		.uleb128 0x12
 1979 00c0 06       		.uleb128 0x6
 1980 00c1 40       		.uleb128 0x40
 1981 00c2 18       		.uleb128 0x18
 1982 00c3 9742     		.uleb128 0x2117
 1983 00c5 19       		.uleb128 0x19
 1984 00c6 01       		.uleb128 0x1
 1985 00c7 13       		.uleb128 0x13
 1986 00c8 00       		.byte	0
 1987 00c9 00       		.byte	0
 1988 00ca 0C       		.uleb128 0xc
 1989 00cb 05       		.uleb128 0x5
 1990 00cc 00       		.byte	0
 1991 00cd 03       		.uleb128 0x3
 1992 00ce 0E       		.uleb128 0xe
 1993 00cf 3A       		.uleb128 0x3a
 1994 00d0 0B       		.uleb128 0xb
 1995 00d1 3B       		.uleb128 0x3b
 1996 00d2 05       		.uleb128 0x5
 1997 00d3 49       		.uleb128 0x49
 1998 00d4 13       		.uleb128 0x13
 1999 00d5 02       		.uleb128 0x2
 2000 00d6 18       		.uleb128 0x18
 2001 00d7 00       		.byte	0
 2002 00d8 00       		.byte	0
 2003 00d9 0D       		.uleb128 0xd
 2004 00da 34       		.uleb128 0x34
 2005 00db 00       		.byte	0
 2006 00dc 03       		.uleb128 0x3
 2007 00dd 0E       		.uleb128 0xe
 2008 00de 3A       		.uleb128 0x3a
 2009 00df 0B       		.uleb128 0xb
 2010 00e0 3B       		.uleb128 0x3b
 2011 00e1 05       		.uleb128 0x5
 2012 00e2 49       		.uleb128 0x49
 2013 00e3 13       		.uleb128 0x13
 2014 00e4 02       		.uleb128 0x2
 2015 00e5 18       		.uleb128 0x18
 2016 00e6 00       		.byte	0
 2017 00e7 00       		.byte	0
 2018 00e8 0E       		.uleb128 0xe
 2019 00e9 2E       		.uleb128 0x2e
 2020 00ea 01       		.byte	0x1
 2021 00eb 3F       		.uleb128 0x3f
 2022 00ec 19       		.uleb128 0x19
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 52


 2023 00ed 03       		.uleb128 0x3
 2024 00ee 0E       		.uleb128 0xe
 2025 00ef 3A       		.uleb128 0x3a
 2026 00f0 0B       		.uleb128 0xb
 2027 00f1 3B       		.uleb128 0x3b
 2028 00f2 05       		.uleb128 0x5
 2029 00f3 27       		.uleb128 0x27
 2030 00f4 19       		.uleb128 0x19
 2031 00f5 49       		.uleb128 0x49
 2032 00f6 13       		.uleb128 0x13
 2033 00f7 11       		.uleb128 0x11
 2034 00f8 01       		.uleb128 0x1
 2035 00f9 12       		.uleb128 0x12
 2036 00fa 06       		.uleb128 0x6
 2037 00fb 40       		.uleb128 0x40
 2038 00fc 18       		.uleb128 0x18
 2039 00fd 9642     		.uleb128 0x2116
 2040 00ff 19       		.uleb128 0x19
 2041 0100 01       		.uleb128 0x1
 2042 0101 13       		.uleb128 0x13
 2043 0102 00       		.byte	0
 2044 0103 00       		.byte	0
 2045 0104 0F       		.uleb128 0xf
 2046 0105 2E       		.uleb128 0x2e
 2047 0106 01       		.byte	0x1
 2048 0107 3F       		.uleb128 0x3f
 2049 0108 19       		.uleb128 0x19
 2050 0109 03       		.uleb128 0x3
 2051 010a 0E       		.uleb128 0xe
 2052 010b 3A       		.uleb128 0x3a
 2053 010c 0B       		.uleb128 0xb
 2054 010d 3B       		.uleb128 0x3b
 2055 010e 05       		.uleb128 0x5
 2056 010f 27       		.uleb128 0x27
 2057 0110 19       		.uleb128 0x19
 2058 0111 11       		.uleb128 0x11
 2059 0112 01       		.uleb128 0x1
 2060 0113 12       		.uleb128 0x12
 2061 0114 06       		.uleb128 0x6
 2062 0115 40       		.uleb128 0x40
 2063 0116 18       		.uleb128 0x18
 2064 0117 9742     		.uleb128 0x2117
 2065 0119 19       		.uleb128 0x19
 2066 011a 01       		.uleb128 0x1
 2067 011b 13       		.uleb128 0x13
 2068 011c 00       		.byte	0
 2069 011d 00       		.byte	0
 2070 011e 10       		.uleb128 0x10
 2071 011f 2E       		.uleb128 0x2e
 2072 0120 01       		.byte	0x1
 2073 0121 3F       		.uleb128 0x3f
 2074 0122 19       		.uleb128 0x19
 2075 0123 03       		.uleb128 0x3
 2076 0124 0E       		.uleb128 0xe
 2077 0125 3A       		.uleb128 0x3a
 2078 0126 0B       		.uleb128 0xb
 2079 0127 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 53


 2080 0128 05       		.uleb128 0x5
 2081 0129 27       		.uleb128 0x27
 2082 012a 19       		.uleb128 0x19
 2083 012b 11       		.uleb128 0x11
 2084 012c 01       		.uleb128 0x1
 2085 012d 12       		.uleb128 0x12
 2086 012e 06       		.uleb128 0x6
 2087 012f 40       		.uleb128 0x40
 2088 0130 18       		.uleb128 0x18
 2089 0131 9642     		.uleb128 0x2116
 2090 0133 19       		.uleb128 0x19
 2091 0134 01       		.uleb128 0x1
 2092 0135 13       		.uleb128 0x13
 2093 0136 00       		.byte	0
 2094 0137 00       		.byte	0
 2095 0138 11       		.uleb128 0x11
 2096 0139 01       		.uleb128 0x1
 2097 013a 01       		.byte	0x1
 2098 013b 49       		.uleb128 0x49
 2099 013c 13       		.uleb128 0x13
 2100 013d 01       		.uleb128 0x1
 2101 013e 13       		.uleb128 0x13
 2102 013f 00       		.byte	0
 2103 0140 00       		.byte	0
 2104 0141 12       		.uleb128 0x12
 2105 0142 21       		.uleb128 0x21
 2106 0143 00       		.byte	0
 2107 0144 49       		.uleb128 0x49
 2108 0145 13       		.uleb128 0x13
 2109 0146 2F       		.uleb128 0x2f
 2110 0147 0B       		.uleb128 0xb
 2111 0148 00       		.byte	0
 2112 0149 00       		.byte	0
 2113 014a 13       		.uleb128 0x13
 2114 014b 26       		.uleb128 0x26
 2115 014c 00       		.byte	0
 2116 014d 49       		.uleb128 0x49
 2117 014e 13       		.uleb128 0x13
 2118 014f 00       		.byte	0
 2119 0150 00       		.byte	0
 2120 0151 14       		.uleb128 0x14
 2121 0152 34       		.uleb128 0x34
 2122 0153 00       		.byte	0
 2123 0154 03       		.uleb128 0x3
 2124 0155 0E       		.uleb128 0xe
 2125 0156 3A       		.uleb128 0x3a
 2126 0157 0B       		.uleb128 0xb
 2127 0158 3B       		.uleb128 0x3b
 2128 0159 0B       		.uleb128 0xb
 2129 015a 49       		.uleb128 0x49
 2130 015b 13       		.uleb128 0x13
 2131 015c 3F       		.uleb128 0x3f
 2132 015d 19       		.uleb128 0x19
 2133 015e 02       		.uleb128 0x2
 2134 015f 18       		.uleb128 0x18
 2135 0160 00       		.byte	0
 2136 0161 00       		.byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 54


 2137 0162 00       		.byte	0
 2138              		.section	.debug_aranges,"",%progbits
 2139 0000 A4000000 		.4byte	0xa4
 2140 0004 0200     		.2byte	0x2
 2141 0006 00000000 		.4byte	.Ldebug_info0
 2142 000a 04       		.byte	0x4
 2143 000b 00       		.byte	0
 2144 000c 0000     		.2byte	0
 2145 000e 0000     		.2byte	0
 2146 0010 00000000 		.4byte	.LFB2
 2147 0014 24000000 		.4byte	.LFE2-.LFB2
 2148 0018 00000000 		.4byte	.LFB3
 2149 001c D0010000 		.4byte	.LFE3-.LFB3
 2150 0020 00000000 		.4byte	.LFB4
 2151 0024 38000000 		.4byte	.LFE4-.LFB4
 2152 0028 00000000 		.4byte	.LFB5
 2153 002c 18000000 		.4byte	.LFE5-.LFB5
 2154 0030 00000000 		.4byte	.LFB6
 2155 0034 1C000000 		.4byte	.LFE6-.LFB6
 2156 0038 00000000 		.4byte	.LFB7
 2157 003c 1C000000 		.4byte	.LFE7-.LFB7
 2158 0040 00000000 		.4byte	.LFB8
 2159 0044 48000000 		.4byte	.LFE8-.LFB8
 2160 0048 00000000 		.4byte	.LFB9
 2161 004c 44000000 		.4byte	.LFE9-.LFB9
 2162 0050 00000000 		.4byte	.LFB10
 2163 0054 1C000000 		.4byte	.LFE10-.LFB10
 2164 0058 00000000 		.4byte	.LFB11
 2165 005c 30000000 		.4byte	.LFE11-.LFB11
 2166 0060 00000000 		.4byte	.LFB12
 2167 0064 2C000000 		.4byte	.LFE12-.LFB12
 2168 0068 00000000 		.4byte	.LFB13
 2169 006c 1C000000 		.4byte	.LFE13-.LFB13
 2170 0070 00000000 		.4byte	.LFB14
 2171 0074 1C000000 		.4byte	.LFE14-.LFB14
 2172 0078 00000000 		.4byte	.LFB15
 2173 007c 30000000 		.4byte	.LFE15-.LFB15
 2174 0080 00000000 		.4byte	.LFB16
 2175 0084 2C000000 		.4byte	.LFE16-.LFB16
 2176 0088 00000000 		.4byte	.LFB17
 2177 008c A4000000 		.4byte	.LFE17-.LFB17
 2178 0090 00000000 		.4byte	.LFB18
 2179 0094 90000000 		.4byte	.LFE18-.LFB18
 2180 0098 00000000 		.4byte	.LFB19
 2181 009c 80000000 		.4byte	.LFE19-.LFB19
 2182 00a0 00000000 		.4byte	0
 2183 00a4 00000000 		.4byte	0
 2184              		.section	.debug_ranges,"",%progbits
 2185              	.Ldebug_ranges0:
 2186 0000 00000000 		.4byte	.LFB2
 2187 0004 24000000 		.4byte	.LFE2
 2188 0008 00000000 		.4byte	.LFB3
 2189 000c D0010000 		.4byte	.LFE3
 2190 0010 00000000 		.4byte	.LFB4
 2191 0014 38000000 		.4byte	.LFE4
 2192 0018 00000000 		.4byte	.LFB5
 2193 001c 18000000 		.4byte	.LFE5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 55


 2194 0020 00000000 		.4byte	.LFB6
 2195 0024 1C000000 		.4byte	.LFE6
 2196 0028 00000000 		.4byte	.LFB7
 2197 002c 1C000000 		.4byte	.LFE7
 2198 0030 00000000 		.4byte	.LFB8
 2199 0034 48000000 		.4byte	.LFE8
 2200 0038 00000000 		.4byte	.LFB9
 2201 003c 44000000 		.4byte	.LFE9
 2202 0040 00000000 		.4byte	.LFB10
 2203 0044 1C000000 		.4byte	.LFE10
 2204 0048 00000000 		.4byte	.LFB11
 2205 004c 30000000 		.4byte	.LFE11
 2206 0050 00000000 		.4byte	.LFB12
 2207 0054 2C000000 		.4byte	.LFE12
 2208 0058 00000000 		.4byte	.LFB13
 2209 005c 1C000000 		.4byte	.LFE13
 2210 0060 00000000 		.4byte	.LFB14
 2211 0064 1C000000 		.4byte	.LFE14
 2212 0068 00000000 		.4byte	.LFB15
 2213 006c 30000000 		.4byte	.LFE15
 2214 0070 00000000 		.4byte	.LFB16
 2215 0074 2C000000 		.4byte	.LFE16
 2216 0078 00000000 		.4byte	.LFB17
 2217 007c A4000000 		.4byte	.LFE17
 2218 0080 00000000 		.4byte	.LFB18
 2219 0084 90000000 		.4byte	.LFE18
 2220 0088 00000000 		.4byte	.LFB19
 2221 008c 80000000 		.4byte	.LFE19
 2222 0090 00000000 		.4byte	0
 2223 0094 00000000 		.4byte	0
 2224              		.section	.debug_line,"",%progbits
 2225              	.Ldebug_line0:
 2226 0000 96020000 		.section	.debug_str,"MS",%progbits,1
 2226      02004000 
 2226      00000201 
 2226      FB0E0D00 
 2226      01010101 
 2227              	.LASF6:
 2228 0000 6C6F6E67 		.ascii	"long long int\000"
 2228      206C6F6E 
 2228      6720696E 
 2228      7400
 2229              	.LASF55:
 2230 000e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2230      6368616E 
 2230      6E656C73 
 2230      436F6E66 
 2230      696700
 2231              	.LASF19:
 2232 0021 72656733 		.ascii	"reg32\000"
 2232      3200
 2233              	.LASF59:
 2234 0027 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2234      4320342E 
 2234      392E3320 
 2234      32303135 
 2234      30333033 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 56


 2235 005a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2235      20726576 
 2235      6973696F 
 2235      6E203232 
 2235      31323230 
 2236 008d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2236      66756E63 
 2236      74696F6E 
 2236      2D736563 
 2236      74696F6E 
 2237              	.LASF45:
 2238 00b5 6F666673 		.ascii	"offset\000"
 2238      657400
 2239              	.LASF15:
 2240 00bc 666C6F61 		.ascii	"float\000"
 2240      7400
 2241              	.LASF41:
 2242 00c2 68696768 		.ascii	"highLimit\000"
 2242      4C696D69 
 2242      7400
 2243              	.LASF48:
 2244 00cc 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2244      436F756E 
 2244      7473546F 
 2244      5F6D566F 
 2244      6C747300 
 2245              	.LASF52:
 2246 00e0 75566F6C 		.ascii	"uVolts\000"
 2246      747300
 2247              	.LASF3:
 2248 00e7 73686F72 		.ascii	"short unsigned int\000"
 2248      7420756E 
 2248      7369676E 
 2248      65642069 
 2248      6E7400
 2249              	.LASF2:
 2250 00fa 73686F72 		.ascii	"short int\000"
 2250      7420696E 
 2250      7400
 2251              	.LASF44:
 2252 0104 4144435F 		.ascii	"ADC_SetOffset\000"
 2252      5365744F 
 2252      66667365 
 2252      7400
 2253              	.LASF38:
 2254 0112 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2254      5365744C 
 2254      6F774C69 
 2254      6D697400 
 2255              	.LASF29:
 2256 0122 73746174 		.ascii	"status\000"
 2256      757300
 2257              	.LASF14:
 2258 0129 666C6F61 		.ascii	"float32\000"
 2258      74333200 
 2259              	.LASF57:
 2260 0131 4144435F 		.ascii	"ADC_offset\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 57


 2260      6F666673 
 2260      657400
 2261              	.LASF22:
 2262 013c 746D7052 		.ascii	"tmpRegVal\000"
 2262      65675661 
 2262      6C00
 2263              	.LASF46:
 2264 0146 4144435F 		.ascii	"ADC_SetGain\000"
 2264      53657447 
 2264      61696E00 
 2265              	.LASF1:
 2266 0152 756E7369 		.ascii	"unsigned char\000"
 2266      676E6564 
 2266      20636861 
 2266      7200
 2267              	.LASF40:
 2268 0160 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2268      53657448 
 2268      6967684C 
 2268      696D6974 
 2268      00
 2269              	.LASF12:
 2270 0171 696E7431 		.ascii	"int16\000"
 2270      3600
 2271              	.LASF5:
 2272 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 2272      20756E73 
 2272      69676E65 
 2272      6420696E 
 2272      7400
 2273              	.LASF13:
 2274 0189 696E7433 		.ascii	"int32\000"
 2274      3200
 2275              	.LASF31:
 2276 018f 4144435F 		.ascii	"ADC_GetResult16\000"
 2276      47657452 
 2276      6573756C 
 2276      74313600 
 2277              	.LASF36:
 2278 019f 4144435F 		.ascii	"ADC_SetChanMask\000"
 2278      53657443 
 2278      68616E4D 
 2278      61736B00 
 2279              	.LASF43:
 2280 01af 4144435F 		.ascii	"ADC_SetSatMask\000"
 2280      53657453 
 2280      61744D61 
 2280      736B00
 2281              	.LASF30:
 2282 01be 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2282      4973456E 
 2282      64436F6E 
 2282      76657273 
 2282      696F6E00 
 2283              	.LASF16:
 2284 01d2 646F7562 		.ascii	"double\000"
 2284      6C6500
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 58


 2285              	.LASF39:
 2286 01d9 6C6F774C 		.ascii	"lowLimit\000"
 2286      696D6974 
 2286      00
 2287              	.LASF47:
 2288 01e2 61646347 		.ascii	"adcGain\000"
 2288      61696E00 
 2289              	.LASF10:
 2290 01ea 75696E74 		.ascii	"uint16\000"
 2290      313600
 2291              	.LASF49:
 2292 01f1 61646343 		.ascii	"adcCounts\000"
 2292      6F756E74 
 2292      7300
 2293              	.LASF11:
 2294 01fb 75696E74 		.ascii	"uint32\000"
 2294      333200
 2295              	.LASF42:
 2296 0202 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2296      5365744C 
 2296      696D6974 
 2296      4D61736B 
 2296      00
 2297              	.LASF8:
 2298 0213 756E7369 		.ascii	"unsigned int\000"
 2298      676E6564 
 2298      20696E74 
 2298      00
 2299              	.LASF25:
 2300 0220 4144435F 		.ascii	"ADC_Enable\000"
 2300      456E6162 
 2300      6C6500
 2301              	.LASF23:
 2302 022b 636F756E 		.ascii	"counts\000"
 2302      747300
 2303              	.LASF7:
 2304 0232 6C6F6E67 		.ascii	"long long unsigned int\000"
 2304      206C6F6E 
 2304      6720756E 
 2304      7369676E 
 2304      65642069 
 2305              	.LASF34:
 2306 0249 72657375 		.ascii	"result\000"
 2306      6C7400
 2307              	.LASF24:
 2308 0250 4144435F 		.ascii	"ADC_Start\000"
 2308      53746172 
 2308      7400
 2309              	.LASF35:
 2310 025a 4144435F 		.ascii	"ADC_Init\000"
 2310      496E6974 
 2310      00
 2311              	.LASF54:
 2312 0263 766F6C74 		.ascii	"volts\000"
 2312      7300
 2313              	.LASF33:
 2314 0269 6368616E 		.ascii	"chan\000"
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 59


 2314      00
 2315              	.LASF50:
 2316 026e 6D566F6C 		.ascii	"mVolts\000"
 2316      747300
 2317              	.LASF20:
 2318 0275 73697A65 		.ascii	"sizetype\000"
 2318      74797065 
 2318      00
 2319              	.LASF51:
 2320 027e 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2320      436F756E 
 2320      7473546F 
 2320      5F75566F 
 2320      6C747300 
 2321              	.LASF53:
 2322 0292 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2322      436F756E 
 2322      7473546F 
 2322      5F566F6C 
 2322      747300
 2323              	.LASF27:
 2324 02a5 4144435F 		.ascii	"ADC_StartConvert\000"
 2324      53746172 
 2324      74436F6E 
 2324      76657274 
 2324      00
 2325              	.LASF60:
 2326 02b6 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2326      72617465 
 2326      645F536F 
 2326      75726365 
 2326      5C50536F 
 2327              	.LASF37:
 2328 02d3 6D61736B 		.ascii	"mask\000"
 2328      00
 2329              	.LASF21:
 2330 02d8 63684E75 		.ascii	"chNum\000"
 2330      6D00
 2331              	.LASF61:
 2332 02de 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\vesion 2\\fw\\sta"
 2332      79707265 
 2332      73735C73 
 2332      79737465 
 2332      6D2D7374 
 2333 030c 72745C73 		.ascii	"rt\\sandbox\\v7_debug_ntp\\Start(state machine)\\st"
 2333      616E6462 
 2333      6F785C76 
 2333      375F6465 
 2333      6275675F 
 2334 033b 6172745F 		.ascii	"art_v0.cydsn\000"
 2334      76302E63 
 2334      7964736E 
 2334      00
 2335              	.LASF32:
 2336 0348 7265744D 		.ascii	"retMode\000"
 2336      6F646500 
 2337              	.LASF28:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\cc9uToC1.s 			page 60


 2338 0350 4144435F 		.ascii	"ADC_StopConvert\000"
 2338      53746F70 
 2338      436F6E76 
 2338      65727400 
 2339              	.LASF9:
 2340 0360 75696E74 		.ascii	"uint8\000"
 2340      3800
 2341              	.LASF58:
 2342 0366 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2342      636F756E 
 2342      74735065 
 2342      72313056 
 2342      6F6C7400 
 2343              	.LASF4:
 2344 037a 6C6F6E67 		.ascii	"long int\000"
 2344      20696E74 
 2344      00
 2345              	.LASF18:
 2346 0383 63686172 		.ascii	"char\000"
 2346      00
 2347              	.LASF0:
 2348 0388 7369676E 		.ascii	"signed char\000"
 2348      65642063 
 2348      68617200 
 2349              	.LASF56:
 2350 0394 4144435F 		.ascii	"ADC_initVar\000"
 2350      696E6974 
 2350      56617200 
 2351              	.LASF17:
 2352 03a0 696E7436 		.ascii	"int64\000"
 2352      3400
 2353              	.LASF26:
 2354 03a6 4144435F 		.ascii	"ADC_Stop\000"
 2354      53746F70 
 2354      00
 2355              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
