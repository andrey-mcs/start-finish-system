ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPIM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SPIM_initVar
  18              		.bss
  19              		.type	SPIM_initVar, %object
  20              		.size	SPIM_initVar, 1
  21              	SPIM_initVar:
  22 0000 00       		.space	1
  23              		.comm	SPIM_swStatusTx,1,1
  24              		.comm	SPIM_swStatusRx,1,1
  25              		.section	.text.SPIM_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SPIM_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	SPIM_Init, %function
  31              	SPIM_Init:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\SPIM.c"
   1:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC4/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM.c **** *
   5:Generated_Source\PSoC4/SPIM.c **** * Description:
   6:Generated_Source\PSoC4/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM.c **** *
   8:Generated_Source\PSoC4/SPIM.c **** * Note:
   9:Generated_Source\PSoC4/SPIM.c **** *  None.
  10:Generated_Source\PSoC4/SPIM.c **** *
  11:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM.c **** 
  18:Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC4/SPIM.c **** 
  20:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 2


  25:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM.c **** 
  27:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM.c **** 
  34:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM.c **** 
  36:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC4/SPIM.c **** 
  39:Generated_Source\PSoC4/SPIM.c **** 
  40:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM.c **** *
  44:Generated_Source\PSoC4/SPIM.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM.c **** *
  47:Generated_Source\PSoC4/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM.c **** *  None.
  49:Generated_Source\PSoC4/SPIM.c **** *
  50:Generated_Source\PSoC4/SPIM.c **** * Return:
  51:Generated_Source\PSoC4/SPIM.c **** *  None.
  52:Generated_Source\PSoC4/SPIM.c **** *
  53:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM.c **** *
  59:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM.c **** *  No.
  61:Generated_Source\PSoC4/SPIM.c **** *
  62:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC4/SPIM.c **** {
  34              		.loc 1 64 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  42              		.loc 1 66 0
  43 0004 084B     		ldr	r3, .L2
  44 0006 0F22     		mov	r2, #15
  45 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC4/SPIM.c **** 
  68:Generated_Source\PSoC4/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 3


  70:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM.c **** 
  75:Generated_Source\PSoC4/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM.c **** 
  82:Generated_Source\PSoC4/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearFIFO();
  46              		.loc 1 83 0
  47 000a FFF7FEFF 		bl	SPIM_ClearFIFO
  84:Generated_Source\PSoC4/SPIM.c **** 
  85:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM.c **** 
  91:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM.c **** 
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  48              		.loc 1 97 0
  49 000e FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  50              		.loc 1 98 0
  51 0012 FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:Generated_Source\PSoC4/SPIM.c **** 
 100:Generated_Source\PSoC4/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  52              		.loc 1 101 0
  53 0016 054B     		ldr	r3, .L2+4
  54 0018 0022     		mov	r2, #0
  55 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 102 0
  57 001c 044B     		ldr	r3, .L2+8
  58 001e 0022     		mov	r2, #0
  59 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC4/SPIM.c **** }
  60              		.loc 1 103 0
  61 0022 BD46     		mov	sp, r7
  62              		@ sp needed
  63 0024 80BD     		pop	{r7, pc}
  64              	.L3:
  65 0026 C046     		.align	2
  66              	.L2:
  67 0028 81000F40 		.word	1074724993
  68 002c 83000F40 		.word	1074724995
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 4


  69 0030 80000F40 		.word	1074724992
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	SPIM_Init, .-SPIM_Init
  73              		.section	.text.SPIM_Enable,"ax",%progbits
  74              		.align	2
  75              		.global	SPIM_Enable
  76              		.code	16
  77              		.thumb_func
  78              		.type	SPIM_Enable, %function
  79              	SPIM_Enable:
  80              	.LFB3:
 104:Generated_Source\PSoC4/SPIM.c **** 
 105:Generated_Source\PSoC4/SPIM.c **** 
 106:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM.c **** *
 110:Generated_Source\PSoC4/SPIM.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM.c **** *
 113:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM.c **** *  None.
 115:Generated_Source\PSoC4/SPIM.c **** *
 116:Generated_Source\PSoC4/SPIM.c **** * Return:
 117:Generated_Source\PSoC4/SPIM.c **** *  None.
 118:Generated_Source\PSoC4/SPIM.c **** *
 119:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC4/SPIM.c **** {
  81              		.loc 1 121 0
  82              		.cfi_startproc
  83 0000 90B5     		push	{r4, r7, lr}
  84              		.cfi_def_cfa_offset 12
  85              		.cfi_offset 4, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM.c **** 
 124:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  92              		.loc 1 124 0
  93 0006 FC1D     		add	r4, r7, #7
  94 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  95 000c 031C     		mov	r3, r0
  96 000e 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  97              		.loc 1 125 0
  98 0010 114A     		ldr	r2, .L5
  99 0012 114B     		ldr	r3, .L5
 100 0014 1B78     		ldrb	r3, [r3]
 101 0016 DBB2     		uxtb	r3, r3
 102 0018 2021     		mov	r1, #32
 103 001a 0B43     		orr	r3, r1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 5


 104 001c DBB2     		uxtb	r3, r3
 105 001e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 106              		.loc 1 126 0
 107 0020 0E4A     		ldr	r2, .L5+4
 108 0022 0E4B     		ldr	r3, .L5+4
 109 0024 1B78     		ldrb	r3, [r3]
 110 0026 DBB2     		uxtb	r3, r3
 111 0028 1021     		mov	r1, #16
 112 002a 0B43     		orr	r3, r1
 113 002c DBB2     		uxtb	r3, r3
 114 002e 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 115              		.loc 1 127 0
 116 0030 0B4A     		ldr	r2, .L5+8
 117 0032 0B4B     		ldr	r3, .L5+8
 118 0034 1B78     		ldrb	r3, [r3]
 119 0036 DBB2     		uxtb	r3, r3
 120 0038 1021     		mov	r1, #16
 121 003a 0B43     		orr	r3, r1
 122 003c DBB2     		uxtb	r3, r3
 123 003e 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 0040 FB1D     		add	r3, r7, #7
 126 0042 1B78     		ldrb	r3, [r3]
 127 0044 181C     		mov	r0, r3
 128 0046 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/SPIM.c **** 
 130:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Enable();
 132:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM.c **** 
 134:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 129              		.loc 1 134 0
 130 004a FFF7FEFF 		bl	SPIM_EnableTxInt
 135:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 131              		.loc 1 135 0
 132 004e FFF7FEFF 		bl	SPIM_EnableRxInt
 136:Generated_Source\PSoC4/SPIM.c **** }
 133              		.loc 1 136 0
 134 0052 BD46     		mov	sp, r7
 135 0054 03B0     		add	sp, sp, #12
 136              		@ sp needed
 137 0056 90BD     		pop	{r4, r7, pc}
 138              	.L6:
 139              		.align	2
 140              	.L5:
 141 0058 91000F40 		.word	1074725009
 142 005c 93000F40 		.word	1074725011
 143 0060 90000F40 		.word	1074725008
 144              		.cfi_endproc
 145              	.LFE3:
 146              		.size	SPIM_Enable, .-SPIM_Enable
 147              		.section	.text.SPIM_Start,"ax",%progbits
 148              		.align	2
 149              		.global	SPIM_Start
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 6


 150              		.code	16
 151              		.thumb_func
 152              		.type	SPIM_Start, %function
 153              	SPIM_Start:
 154              	.LFB4:
 137:Generated_Source\PSoC4/SPIM.c **** 
 138:Generated_Source\PSoC4/SPIM.c **** 
 139:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM.c **** *
 143:Generated_Source\PSoC4/SPIM.c **** * Summary:
 144:Generated_Source\PSoC4/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC4/SPIM.c **** *
 146:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM.c **** *  None.
 148:Generated_Source\PSoC4/SPIM.c **** *
 149:Generated_Source\PSoC4/SPIM.c **** * Return:
 150:Generated_Source\PSoC4/SPIM.c **** *  None.
 151:Generated_Source\PSoC4/SPIM.c **** *
 152:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM.c **** *
 156:Generated_Source\PSoC4/SPIM.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM.c **** *
 159:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM.c **** *  No.
 161:Generated_Source\PSoC4/SPIM.c **** *
 162:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC4/SPIM.c **** {
 155              		.loc 1 164 0
 156              		.cfi_startproc
 157 0000 80B5     		push	{r7, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 163              		.loc 1 165 0
 164 0004 064B     		ldr	r3, .L9
 165 0006 1B78     		ldrb	r3, [r3]
 166 0008 002B     		cmp	r3, #0
 167 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC4/SPIM.c ****     {
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 168              		.loc 1 167 0
 169 000c FFF7FEFF 		bl	SPIM_Init
 168:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 170              		.loc 1 168 0
 171 0010 034B     		ldr	r3, .L9
 172 0012 0122     		mov	r2, #1
 173 0014 1A70     		strb	r2, [r3]
 174              	.L8:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 7


 169:Generated_Source\PSoC4/SPIM.c ****     }
 170:Generated_Source\PSoC4/SPIM.c **** 
 171:Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 175              		.loc 1 171 0
 176 0016 FFF7FEFF 		bl	SPIM_Enable
 172:Generated_Source\PSoC4/SPIM.c **** }
 177              		.loc 1 172 0
 178 001a BD46     		mov	sp, r7
 179              		@ sp needed
 180 001c 80BD     		pop	{r7, pc}
 181              	.L10:
 182 001e C046     		.align	2
 183              	.L9:
 184 0020 00000000 		.word	SPIM_initVar
 185              		.cfi_endproc
 186              	.LFE4:
 187              		.size	SPIM_Start, .-SPIM_Start
 188              		.section	.text.SPIM_Stop,"ax",%progbits
 189              		.align	2
 190              		.global	SPIM_Stop
 191              		.code	16
 192              		.thumb_func
 193              		.type	SPIM_Stop, %function
 194              	SPIM_Stop:
 195              	.LFB5:
 173:Generated_Source\PSoC4/SPIM.c **** 
 174:Generated_Source\PSoC4/SPIM.c **** 
 175:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM.c **** *
 179:Generated_Source\PSoC4/SPIM.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM.c **** *
 182:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM.c **** *  None.
 184:Generated_Source\PSoC4/SPIM.c **** *
 185:Generated_Source\PSoC4/SPIM.c **** * Return:
 186:Generated_Source\PSoC4/SPIM.c **** *  None.
 187:Generated_Source\PSoC4/SPIM.c **** *
 188:Generated_Source\PSoC4/SPIM.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM.c **** *
 191:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC4/SPIM.c **** {
 196              		.loc 1 193 0
 197              		.cfi_startproc
 198 0000 90B5     		push	{r4, r7, lr}
 199              		.cfi_def_cfa_offset 12
 200              		.cfi_offset 4, -12
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 83B0     		sub	sp, sp, #12
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 8


 194:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM.c **** 
 196:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 207              		.loc 1 196 0
 208 0006 FC1D     		add	r4, r7, #7
 209 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 210 000c 031C     		mov	r3, r0
 211 000e 2370     		strb	r3, [r4]
 197:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 212              		.loc 1 197 0
 213 0010 0D4A     		ldr	r2, .L12
 214 0012 0D4B     		ldr	r3, .L12
 215 0014 1B78     		ldrb	r3, [r3]
 216 0016 DBB2     		uxtb	r3, r3
 217 0018 1021     		mov	r1, #16
 218 001a 8B43     		bic	r3, r1
 219 001c DBB2     		uxtb	r3, r3
 220 001e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 221              		.loc 1 198 0
 222 0020 0A4A     		ldr	r2, .L12+4
 223 0022 0A4B     		ldr	r3, .L12+4
 224 0024 1B78     		ldrb	r3, [r3]
 225 0026 DBB2     		uxtb	r3, r3
 226 0028 1021     		mov	r1, #16
 227 002a 8B43     		bic	r3, r1
 228 002c DBB2     		uxtb	r3, r3
 229 002e 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 230              		.loc 1 199 0
 231 0030 FB1D     		add	r3, r7, #7
 232 0032 1B78     		ldrb	r3, [r3]
 233 0034 181C     		mov	r0, r3
 234 0036 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC4/SPIM.c **** 
 201:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Disable();
 203:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM.c **** 
 205:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 235              		.loc 1 205 0
 236 003a FFF7FEFF 		bl	SPIM_DisableTxInt
 206:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 237              		.loc 1 206 0
 238 003e FFF7FEFF 		bl	SPIM_DisableRxInt
 207:Generated_Source\PSoC4/SPIM.c **** }
 239              		.loc 1 207 0
 240 0042 BD46     		mov	sp, r7
 241 0044 03B0     		add	sp, sp, #12
 242              		@ sp needed
 243 0046 90BD     		pop	{r4, r7, pc}
 244              	.L13:
 245              		.align	2
 246              	.L12:
 247 0048 93000F40 		.word	1074725011
 248 004c 90000F40 		.word	1074725008
 249              		.cfi_endproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 9


 250              	.LFE5:
 251              		.size	SPIM_Stop, .-SPIM_Stop
 252              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 253              		.align	2
 254              		.global	SPIM_EnableTxInt
 255              		.code	16
 256              		.thumb_func
 257              		.type	SPIM_EnableTxInt, %function
 258              	SPIM_EnableTxInt:
 259              	.LFB6:
 208:Generated_Source\PSoC4/SPIM.c **** 
 209:Generated_Source\PSoC4/SPIM.c **** 
 210:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM.c **** *
 214:Generated_Source\PSoC4/SPIM.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM.c **** *
 217:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM.c **** *  None.
 219:Generated_Source\PSoC4/SPIM.c **** *
 220:Generated_Source\PSoC4/SPIM.c **** * Return:
 221:Generated_Source\PSoC4/SPIM.c **** *  None.
 222:Generated_Source\PSoC4/SPIM.c **** *
 223:Generated_Source\PSoC4/SPIM.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM.c **** *
 226:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM.c **** {
 260              		.loc 1 228 0
 261              		.cfi_startproc
 262 0000 80B5     		push	{r7, lr}
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM.c **** }
 268              		.loc 1 232 0
 269 0004 BD46     		mov	sp, r7
 270              		@ sp needed
 271 0006 80BD     		pop	{r7, pc}
 272              		.cfi_endproc
 273              	.LFE6:
 274              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 275              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 276              		.align	2
 277              		.global	SPIM_EnableRxInt
 278              		.code	16
 279              		.thumb_func
 280              		.type	SPIM_EnableRxInt, %function
 281              	SPIM_EnableRxInt:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 10


 282              	.LFB7:
 233:Generated_Source\PSoC4/SPIM.c **** 
 234:Generated_Source\PSoC4/SPIM.c **** 
 235:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM.c **** *
 239:Generated_Source\PSoC4/SPIM.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM.c **** *
 242:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM.c **** *  None.
 244:Generated_Source\PSoC4/SPIM.c **** *
 245:Generated_Source\PSoC4/SPIM.c **** * Return:
 246:Generated_Source\PSoC4/SPIM.c **** *  None.
 247:Generated_Source\PSoC4/SPIM.c **** *
 248:Generated_Source\PSoC4/SPIM.c **** * Theory:
 249:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/SPIM.c **** *
 251:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM.c **** {
 283              		.loc 1 253 0
 284              		.cfi_startproc
 285 0000 80B5     		push	{r7, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/SPIM.c **** }
 291              		.loc 1 257 0
 292 0004 BD46     		mov	sp, r7
 293              		@ sp needed
 294 0006 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE7:
 297              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 298              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 299              		.align	2
 300              		.global	SPIM_DisableTxInt
 301              		.code	16
 302              		.thumb_func
 303              		.type	SPIM_DisableTxInt, %function
 304              	SPIM_DisableTxInt:
 305              	.LFB8:
 258:Generated_Source\PSoC4/SPIM.c **** 
 259:Generated_Source\PSoC4/SPIM.c **** 
 260:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM.c **** *
 264:Generated_Source\PSoC4/SPIM.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Tx interrupt generation.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 11


 266:Generated_Source\PSoC4/SPIM.c **** *
 267:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM.c **** *  None.
 269:Generated_Source\PSoC4/SPIM.c **** *
 270:Generated_Source\PSoC4/SPIM.c **** * Return:
 271:Generated_Source\PSoC4/SPIM.c **** *  None.
 272:Generated_Source\PSoC4/SPIM.c **** *
 273:Generated_Source\PSoC4/SPIM.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM.c **** *
 276:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM.c **** {
 306              		.loc 1 278 0
 307              		.cfi_startproc
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/SPIM.c **** }
 314              		.loc 1 282 0
 315 0004 BD46     		mov	sp, r7
 316              		@ sp needed
 317 0006 80BD     		pop	{r7, pc}
 318              		.cfi_endproc
 319              	.LFE8:
 320              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 321              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 322              		.align	2
 323              		.global	SPIM_DisableRxInt
 324              		.code	16
 325              		.thumb_func
 326              		.type	SPIM_DisableRxInt, %function
 327              	SPIM_DisableRxInt:
 328              	.LFB9:
 283:Generated_Source\PSoC4/SPIM.c **** 
 284:Generated_Source\PSoC4/SPIM.c **** 
 285:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM.c **** *
 289:Generated_Source\PSoC4/SPIM.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM.c **** *
 292:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM.c **** *  None.
 294:Generated_Source\PSoC4/SPIM.c **** *
 295:Generated_Source\PSoC4/SPIM.c **** * Return:
 296:Generated_Source\PSoC4/SPIM.c **** *  None.
 297:Generated_Source\PSoC4/SPIM.c **** *
 298:Generated_Source\PSoC4/SPIM.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 12


 300:Generated_Source\PSoC4/SPIM.c **** *
 301:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM.c **** {
 329              		.loc 1 303 0
 330              		.cfi_startproc
 331 0000 80B5     		push	{r7, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM.c **** }
 337              		.loc 1 307 0
 338 0004 BD46     		mov	sp, r7
 339              		@ sp needed
 340 0006 80BD     		pop	{r7, pc}
 341              		.cfi_endproc
 342              	.LFE9:
 343              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 344              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 345              		.align	2
 346              		.global	SPIM_SetTxInterruptMode
 347              		.code	16
 348              		.thumb_func
 349              		.type	SPIM_SetTxInterruptMode, %function
 350              	SPIM_SetTxInterruptMode:
 351              	.LFB10:
 308:Generated_Source\PSoC4/SPIM.c **** 
 309:Generated_Source\PSoC4/SPIM.c **** 
 310:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC4/SPIM.c **** *
 314:Generated_Source\PSoC4/SPIM.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM.c **** *
 317:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM.c **** *
 321:Generated_Source\PSoC4/SPIM.c **** * Return:
 322:Generated_Source\PSoC4/SPIM.c **** *  None.
 323:Generated_Source\PSoC4/SPIM.c **** *
 324:Generated_Source\PSoC4/SPIM.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM.c **** *
 327:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC4/SPIM.c **** {
 352              		.loc 1 329 0
 353              		.cfi_startproc
 354 0000 80B5     		push	{r7, lr}
 355              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 13


 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 82B0     		sub	sp, sp, #8
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 021C     		mov	r2, r0
 363 0008 FB1D     		add	r3, r7, #7
 364 000a 1A70     		strb	r2, [r3]
 330:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 365              		.loc 1 330 0
 366 000c 034A     		ldr	r2, .L19
 367 000e FB1D     		add	r3, r7, #7
 368 0010 1B78     		ldrb	r3, [r3]
 369 0012 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/SPIM.c **** }
 370              		.loc 1 331 0
 371 0014 BD46     		mov	sp, r7
 372 0016 02B0     		add	sp, sp, #8
 373              		@ sp needed
 374 0018 80BD     		pop	{r7, pc}
 375              	.L20:
 376 001a C046     		.align	2
 377              	.L19:
 378 001c 83000F40 		.word	1074724995
 379              		.cfi_endproc
 380              	.LFE10:
 381              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 382              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 383              		.align	2
 384              		.global	SPIM_SetRxInterruptMode
 385              		.code	16
 386              		.thumb_func
 387              		.type	SPIM_SetRxInterruptMode, %function
 388              	SPIM_SetRxInterruptMode:
 389              	.LFB11:
 332:Generated_Source\PSoC4/SPIM.c **** 
 333:Generated_Source\PSoC4/SPIM.c **** 
 334:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC4/SPIM.c **** *
 338:Generated_Source\PSoC4/SPIM.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM.c **** *
 341:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC4/SPIM.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM.c **** *
 345:Generated_Source\PSoC4/SPIM.c **** * Return:
 346:Generated_Source\PSoC4/SPIM.c **** *  None.
 347:Generated_Source\PSoC4/SPIM.c **** *
 348:Generated_Source\PSoC4/SPIM.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM.c **** *
 351:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 14


 353:Generated_Source\PSoC4/SPIM.c **** {
 390              		.loc 1 353 0
 391              		.cfi_startproc
 392 0000 80B5     		push	{r7, lr}
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 82B0     		sub	sp, sp, #8
 397              		.cfi_def_cfa_offset 16
 398 0004 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
 400 0006 021C     		mov	r2, r0
 401 0008 FB1D     		add	r3, r7, #7
 402 000a 1A70     		strb	r2, [r3]
 354:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 403              		.loc 1 354 0
 404 000c 034A     		ldr	r2, .L22
 405 000e FB1D     		add	r3, r7, #7
 406 0010 1B78     		ldrb	r3, [r3]
 407 0012 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC4/SPIM.c **** }
 408              		.loc 1 355 0
 409 0014 BD46     		mov	sp, r7
 410 0016 02B0     		add	sp, sp, #8
 411              		@ sp needed
 412 0018 80BD     		pop	{r7, pc}
 413              	.L23:
 414 001a C046     		.align	2
 415              	.L22:
 416 001c 80000F40 		.word	1074724992
 417              		.cfi_endproc
 418              	.LFE11:
 419              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 420              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 421              		.align	2
 422              		.global	SPIM_ReadTxStatus
 423              		.code	16
 424              		.thumb_func
 425              		.type	SPIM_ReadTxStatus, %function
 426              	SPIM_ReadTxStatus:
 427              	.LFB12:
 356:Generated_Source\PSoC4/SPIM.c **** 
 357:Generated_Source\PSoC4/SPIM.c **** 
 358:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM.c **** *
 362:Generated_Source\PSoC4/SPIM.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM.c **** *
 365:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC4/SPIM.c **** *  None.
 367:Generated_Source\PSoC4/SPIM.c **** *
 368:Generated_Source\PSoC4/SPIM.c **** * Return:
 369:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM.c **** *
 371:Generated_Source\PSoC4/SPIM.c **** * Global variables:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 15


 372:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM.c **** *
 375:Generated_Source\PSoC4/SPIM.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM.c **** *
 379:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM.c **** *
 382:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM.c **** *  No.
 384:Generated_Source\PSoC4/SPIM.c **** *
 385:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM.c **** {
 428              		.loc 1 387 0
 429              		.cfi_startproc
 430 0000 80B5     		push	{r7, lr}
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 7, -8
 433              		.cfi_offset 14, -4
 434 0002 82B0     		sub	sp, sp, #8
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM.c **** 
 390:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 393:Generated_Source\PSoC4/SPIM.c **** 
 394:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:Generated_Source\PSoC4/SPIM.c **** 
 397:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 398:Generated_Source\PSoC4/SPIM.c **** 
 399:Generated_Source\PSoC4/SPIM.c ****     #else
 400:Generated_Source\PSoC4/SPIM.c **** 
 401:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 438              		.loc 1 401 0
 439 0006 054A     		ldr	r2, .L26
 440 0008 FB1D     		add	r3, r7, #7
 441 000a 1278     		ldrb	r2, [r2]
 442 000c 1A70     		strb	r2, [r3]
 402:Generated_Source\PSoC4/SPIM.c **** 
 403:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/SPIM.c **** 
 405:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 443              		.loc 1 405 0
 444 000e FB1D     		add	r3, r7, #7
 445 0010 1B78     		ldrb	r3, [r3]
 406:Generated_Source\PSoC4/SPIM.c **** }
 446              		.loc 1 406 0
 447 0012 181C     		mov	r0, r3
 448 0014 BD46     		mov	sp, r7
 449 0016 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 16


 450              		@ sp needed
 451 0018 80BD     		pop	{r7, pc}
 452              	.L27:
 453 001a C046     		.align	2
 454              	.L26:
 455 001c 63000F40 		.word	1074724963
 456              		.cfi_endproc
 457              	.LFE12:
 458              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 459              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 460              		.align	2
 461              		.global	SPIM_ReadRxStatus
 462              		.code	16
 463              		.thumb_func
 464              		.type	SPIM_ReadRxStatus, %function
 465              	SPIM_ReadRxStatus:
 466              	.LFB13:
 407:Generated_Source\PSoC4/SPIM.c **** 
 408:Generated_Source\PSoC4/SPIM.c **** 
 409:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM.c **** *
 413:Generated_Source\PSoC4/SPIM.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM.c **** *
 416:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM.c **** *  None.
 418:Generated_Source\PSoC4/SPIM.c **** *
 419:Generated_Source\PSoC4/SPIM.c **** * Return:
 420:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM.c **** *
 422:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM.c **** *
 426:Generated_Source\PSoC4/SPIM.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM.c **** *
 430:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM.c **** *
 433:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM.c **** *  No.
 435:Generated_Source\PSoC4/SPIM.c **** *
 436:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM.c **** {
 467              		.loc 1 438 0
 468              		.cfi_startproc
 469 0000 80B5     		push	{r7, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 7, -8
 472              		.cfi_offset 14, -4
 473 0002 82B0     		sub	sp, sp, #8
 474              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 17


 475 0004 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM.c **** 
 441:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 444:Generated_Source\PSoC4/SPIM.c **** 
 445:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:Generated_Source\PSoC4/SPIM.c **** 
 448:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC4/SPIM.c **** 
 450:Generated_Source\PSoC4/SPIM.c ****     #else
 451:Generated_Source\PSoC4/SPIM.c **** 
 452:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 477              		.loc 1 452 0
 478 0006 054A     		ldr	r2, .L30
 479 0008 FB1D     		add	r3, r7, #7
 480 000a 1278     		ldrb	r2, [r2]
 481 000c 1A70     		strb	r2, [r3]
 453:Generated_Source\PSoC4/SPIM.c **** 
 454:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM.c **** 
 456:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 482              		.loc 1 456 0
 483 000e FB1D     		add	r3, r7, #7
 484 0010 1B78     		ldrb	r3, [r3]
 457:Generated_Source\PSoC4/SPIM.c **** }
 485              		.loc 1 457 0
 486 0012 181C     		mov	r0, r3
 487 0014 BD46     		mov	sp, r7
 488 0016 02B0     		add	sp, sp, #8
 489              		@ sp needed
 490 0018 80BD     		pop	{r7, pc}
 491              	.L31:
 492 001a C046     		.align	2
 493              	.L30:
 494 001c 60000F40 		.word	1074724960
 495              		.cfi_endproc
 496              	.LFE13:
 497              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 498              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 499              		.align	2
 500              		.global	SPIM_WriteTxData
 501              		.code	16
 502              		.thumb_func
 503              		.type	SPIM_WriteTxData, %function
 504              	SPIM_WriteTxData:
 505              	.LFB14:
 458:Generated_Source\PSoC4/SPIM.c **** 
 459:Generated_Source\PSoC4/SPIM.c **** 
 460:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM.c **** *
 464:Generated_Source\PSoC4/SPIM.c **** * Summary:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 18


 465:Generated_Source\PSoC4/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM.c **** *
 467:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM.c **** *
 470:Generated_Source\PSoC4/SPIM.c **** * Return:
 471:Generated_Source\PSoC4/SPIM.c **** *  None.
 472:Generated_Source\PSoC4/SPIM.c **** *
 473:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC4/SPIM.c **** *
 482:Generated_Source\PSoC4/SPIM.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM.c **** *
 485:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC4/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM.c **** *
 490:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM.c **** *  No.
 492:Generated_Source\PSoC4/SPIM.c **** *
 493:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/SPIM.c **** {
 506              		.loc 1 495 0
 507              		.cfi_startproc
 508 0000 80B5     		push	{r7, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 82B0     		sub	sp, sp, #8
 513              		.cfi_def_cfa_offset 16
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 516 0006 021C     		mov	r2, r0
 517 0008 FB1D     		add	r3, r7, #7
 518 000a 1A70     		strb	r2, [r3]
 496:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM.c **** 
 498:Generated_Source\PSoC4/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM.c **** 
 501:Generated_Source\PSoC4/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM.c ****         do
 503:Generated_Source\PSoC4/SPIM.c ****         {
 504:Generated_Source\PSoC4/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:Generated_Source\PSoC4/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/SPIM.c ****             {
 507:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM.c ****             }
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 19


 509:Generated_Source\PSoC4/SPIM.c ****             else
 510:Generated_Source\PSoC4/SPIM.c ****             {
 511:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/SPIM.c ****             }
 513:Generated_Source\PSoC4/SPIM.c **** 
 514:Generated_Source\PSoC4/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:Generated_Source\PSoC4/SPIM.c **** 
 516:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 518:Generated_Source\PSoC4/SPIM.c **** 
 519:Generated_Source\PSoC4/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/SPIM.c **** 
 522:Generated_Source\PSoC4/SPIM.c **** 
 523:Generated_Source\PSoC4/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/SPIM.c ****         {
 526:Generated_Source\PSoC4/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 528:Generated_Source\PSoC4/SPIM.c ****         }
 529:Generated_Source\PSoC4/SPIM.c ****         else
 530:Generated_Source\PSoC4/SPIM.c ****         {
 531:Generated_Source\PSoC4/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBufferWrite++;
 533:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/SPIM.c ****             {
 535:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/SPIM.c ****             }
 537:Generated_Source\PSoC4/SPIM.c **** 
 538:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:Generated_Source\PSoC4/SPIM.c ****             {
 540:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferRead++;
 541:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/SPIM.c ****                 {
 543:Generated_Source\PSoC4/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:Generated_Source\PSoC4/SPIM.c ****                 }
 545:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:Generated_Source\PSoC4/SPIM.c ****             }
 547:Generated_Source\PSoC4/SPIM.c **** 
 548:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/SPIM.c **** 
 550:Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/SPIM.c ****         }
 552:Generated_Source\PSoC4/SPIM.c **** 
 553:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 554:Generated_Source\PSoC4/SPIM.c **** 
 555:Generated_Source\PSoC4/SPIM.c ****     #else
 556:Generated_Source\PSoC4/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 519              		.loc 1 557 0
 520 000c C046     		mov	r8, r8
 521              	.L33:
 522              		.loc 1 557 0 is_stmt 0 discriminator 1
 523 000e 074B     		ldr	r3, .L34
 524 0010 1B78     		ldrb	r3, [r3]
 525 0012 DBB2     		uxtb	r3, r3
 526 0014 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 20


 527 0016 0423     		mov	r3, #4
 528 0018 1340     		and	r3, r2
 529 001a F8D0     		beq	.L33
 558:Generated_Source\PSoC4/SPIM.c ****         {
 559:Generated_Source\PSoC4/SPIM.c ****         }
 560:Generated_Source\PSoC4/SPIM.c **** 
 561:Generated_Source\PSoC4/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 530              		.loc 1 562 0 is_stmt 1
 531 001c 044A     		ldr	r2, .L34+4
 532 001e FB1D     		add	r3, r7, #7
 533 0020 1B78     		ldrb	r3, [r3]
 534 0022 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC4/SPIM.c **** 
 564:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM.c **** }
 535              		.loc 1 565 0
 536 0024 BD46     		mov	sp, r7
 537 0026 02B0     		add	sp, sp, #8
 538              		@ sp needed
 539 0028 80BD     		pop	{r7, pc}
 540              	.L35:
 541 002a C046     		.align	2
 542              	.L34:
 543 002c 63000F40 		.word	1074724963
 544 0030 40000F40 		.word	1074724928
 545              		.cfi_endproc
 546              	.LFE14:
 547              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 548              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 549              		.align	2
 550              		.global	SPIM_ReadRxData
 551              		.code	16
 552              		.thumb_func
 553              		.type	SPIM_ReadRxData, %function
 554              	SPIM_ReadRxData:
 555              	.LFB15:
 566:Generated_Source\PSoC4/SPIM.c **** 
 567:Generated_Source\PSoC4/SPIM.c **** 
 568:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM.c **** *
 572:Generated_Source\PSoC4/SPIM.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM.c **** *
 575:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM.c **** *  None.
 577:Generated_Source\PSoC4/SPIM.c **** *
 578:Generated_Source\PSoC4/SPIM.c **** * Return:
 579:Generated_Source\PSoC4/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM.c **** *
 581:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 21


 586:Generated_Source\PSoC4/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM.c **** *
 590:Generated_Source\PSoC4/SPIM.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM.c **** *
 593:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM.c **** *
 598:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC4/SPIM.c **** *  No.
 600:Generated_Source\PSoC4/SPIM.c **** *
 601:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM.c **** {
 556              		.loc 1 603 0
 557              		.cfi_startproc
 558 0000 80B5     		push	{r7, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 82B0     		sub	sp, sp, #8
 563              		.cfi_def_cfa_offset 16
 564 0004 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC4/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/SPIM.c **** 
 606:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM.c **** 
 608:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC4/SPIM.c **** 
 611:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC4/SPIM.c ****         {
 613:Generated_Source\PSoC4/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:Generated_Source\PSoC4/SPIM.c ****             {
 615:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/SPIM.c ****                 {
 618:Generated_Source\PSoC4/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/SPIM.c ****                 }
 620:Generated_Source\PSoC4/SPIM.c ****             }
 621:Generated_Source\PSoC4/SPIM.c ****             else
 622:Generated_Source\PSoC4/SPIM.c ****             {
 623:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/SPIM.c ****             }
 625:Generated_Source\PSoC4/SPIM.c ****         }
 626:Generated_Source\PSoC4/SPIM.c **** 
 627:Generated_Source\PSoC4/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 628:Generated_Source\PSoC4/SPIM.c **** 
 629:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 630:Generated_Source\PSoC4/SPIM.c **** 
 631:Generated_Source\PSoC4/SPIM.c ****     #else
 632:Generated_Source\PSoC4/SPIM.c **** 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 22


 633:Generated_Source\PSoC4/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 566              		.loc 1 633 0
 567 0006 054A     		ldr	r2, .L38
 568 0008 FB1D     		add	r3, r7, #7
 569 000a 1278     		ldrb	r2, [r2]
 570 000c 1A70     		strb	r2, [r3]
 634:Generated_Source\PSoC4/SPIM.c **** 
 635:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM.c **** 
 637:Generated_Source\PSoC4/SPIM.c ****     return(rxData);
 571              		.loc 1 637 0
 572 000e FB1D     		add	r3, r7, #7
 573 0010 1B78     		ldrb	r3, [r3]
 638:Generated_Source\PSoC4/SPIM.c **** }
 574              		.loc 1 638 0
 575 0012 181C     		mov	r0, r3
 576 0014 BD46     		mov	sp, r7
 577 0016 02B0     		add	sp, sp, #8
 578              		@ sp needed
 579 0018 80BD     		pop	{r7, pc}
 580              	.L39:
 581 001a C046     		.align	2
 582              	.L38:
 583 001c 50000F40 		.word	1074724944
 584              		.cfi_endproc
 585              	.LFE15:
 586              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 587              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 588              		.align	2
 589              		.global	SPIM_GetRxBufferSize
 590              		.code	16
 591              		.thumb_func
 592              		.type	SPIM_GetRxBufferSize, %function
 593              	SPIM_GetRxBufferSize:
 594              	.LFB16:
 639:Generated_Source\PSoC4/SPIM.c **** 
 640:Generated_Source\PSoC4/SPIM.c **** 
 641:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM.c **** *
 645:Generated_Source\PSoC4/SPIM.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM.c **** *
 650:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM.c **** *  None.
 652:Generated_Source\PSoC4/SPIM.c **** *
 653:Generated_Source\PSoC4/SPIM.c **** * Return:
 654:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM.c **** *
 656:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 23


 661:Generated_Source\PSoC4/SPIM.c **** *
 662:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM.c **** *
 665:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM.c **** {
 595              		.loc 1 667 0
 596              		.cfi_startproc
 597 0000 80B5     		push	{r7, lr}
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601 0002 82B0     		sub	sp, sp, #8
 602              		.cfi_def_cfa_offset 16
 603 0004 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM.c **** 
 670:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM.c **** 
 672:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC4/SPIM.c **** 
 675:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC4/SPIM.c ****         {
 677:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM.c ****         }
 679:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC4/SPIM.c ****         {
 681:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC4/SPIM.c ****         }
 683:Generated_Source\PSoC4/SPIM.c ****         else
 684:Generated_Source\PSoC4/SPIM.c ****         {
 685:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC4/SPIM.c ****         }
 687:Generated_Source\PSoC4/SPIM.c **** 
 688:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC4/SPIM.c **** 
 690:Generated_Source\PSoC4/SPIM.c ****     #else
 691:Generated_Source\PSoC4/SPIM.c **** 
 692:Generated_Source\PSoC4/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 605              		.loc 1 693 0
 606 0006 094B     		ldr	r3, .L44
 607 0008 1B78     		ldrb	r3, [r3]
 608 000a DBB2     		uxtb	r3, r3
 609 000c 1A1C     		mov	r2, r3
 610 000e 2023     		mov	r3, #32
 611 0010 1340     		and	r3, r2
 612 0012 01D0     		beq	.L41
 613              		.loc 1 693 0 is_stmt 0 discriminator 1
 614 0014 0122     		mov	r2, #1
 615 0016 00E0     		b	.L42
 616              	.L41:
 617              		.loc 1 693 0 discriminator 2
 618 0018 0022     		mov	r2, #0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 24


 619              	.L42:
 620              		.loc 1 693 0 discriminator 4
 621 001a FB1D     		add	r3, r7, #7
 622 001c 1A70     		strb	r2, [r3]
 694:Generated_Source\PSoC4/SPIM.c **** 
 695:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM.c **** 
 697:Generated_Source\PSoC4/SPIM.c ****     return(size);
 623              		.loc 1 697 0 is_stmt 1 discriminator 4
 624 001e FB1D     		add	r3, r7, #7
 625 0020 1B78     		ldrb	r3, [r3]
 698:Generated_Source\PSoC4/SPIM.c **** }
 626              		.loc 1 698 0 discriminator 4
 627 0022 181C     		mov	r0, r3
 628 0024 BD46     		mov	sp, r7
 629 0026 02B0     		add	sp, sp, #8
 630              		@ sp needed
 631 0028 80BD     		pop	{r7, pc}
 632              	.L45:
 633 002a C046     		.align	2
 634              	.L44:
 635 002c 60000F40 		.word	1074724960
 636              		.cfi_endproc
 637              	.LFE16:
 638              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 639              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 640              		.align	2
 641              		.global	SPIM_GetTxBufferSize
 642              		.code	16
 643              		.thumb_func
 644              		.type	SPIM_GetTxBufferSize, %function
 645              	SPIM_GetTxBufferSize:
 646              	.LFB17:
 699:Generated_Source\PSoC4/SPIM.c **** 
 700:Generated_Source\PSoC4/SPIM.c **** 
 701:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM.c **** *
 705:Generated_Source\PSoC4/SPIM.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM.c **** *
 711:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM.c **** *  None.
 713:Generated_Source\PSoC4/SPIM.c **** *
 714:Generated_Source\PSoC4/SPIM.c **** * Return:
 715:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM.c **** *
 717:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 25


 723:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM.c **** *
 726:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIM.c **** {
 647              		.loc 1 728 0
 648              		.cfi_startproc
 649 0000 80B5     		push	{r7, lr}
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 7, -8
 652              		.cfi_offset 14, -4
 653 0002 82B0     		sub	sp, sp, #8
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM.c **** 
 731:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 734:Generated_Source\PSoC4/SPIM.c **** 
 735:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:Generated_Source\PSoC4/SPIM.c ****         {
 737:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM.c ****         }
 739:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:Generated_Source\PSoC4/SPIM.c ****         {
 741:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:Generated_Source\PSoC4/SPIM.c ****         }
 743:Generated_Source\PSoC4/SPIM.c ****         else
 744:Generated_Source\PSoC4/SPIM.c ****         {
 745:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:Generated_Source\PSoC4/SPIM.c ****         }
 747:Generated_Source\PSoC4/SPIM.c **** 
 748:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 749:Generated_Source\PSoC4/SPIM.c **** 
 750:Generated_Source\PSoC4/SPIM.c ****     #else
 751:Generated_Source\PSoC4/SPIM.c **** 
 752:Generated_Source\PSoC4/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 657              		.loc 1 752 0
 658 0006 0F4A     		ldr	r2, .L51
 659 0008 FB1D     		add	r3, r7, #7
 660 000a 1278     		ldrb	r2, [r2]
 661 000c 1A70     		strb	r2, [r3]
 753:Generated_Source\PSoC4/SPIM.c **** 
 754:Generated_Source\PSoC4/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 662              		.loc 1 754 0
 663 000e FB1D     		add	r3, r7, #7
 664 0010 1B78     		ldrb	r3, [r3]
 665 0012 0222     		mov	r2, #2
 666 0014 1340     		and	r3, r2
 667 0016 03D0     		beq	.L47
 755:Generated_Source\PSoC4/SPIM.c ****         {
 756:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 668              		.loc 1 756 0
 669 0018 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 26


 670 001a 0022     		mov	r2, #0
 671 001c 1A70     		strb	r2, [r3]
 672 001e 0BE0     		b	.L48
 673              	.L47:
 757:Generated_Source\PSoC4/SPIM.c ****         }
 758:Generated_Source\PSoC4/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 674              		.loc 1 758 0
 675 0020 FB1D     		add	r3, r7, #7
 676 0022 1B78     		ldrb	r3, [r3]
 677 0024 0422     		mov	r2, #4
 678 0026 1340     		and	r3, r2
 679 0028 03D0     		beq	.L49
 759:Generated_Source\PSoC4/SPIM.c ****         {
 760:Generated_Source\PSoC4/SPIM.c ****             size = 1u;
 680              		.loc 1 760 0
 681 002a FB1D     		add	r3, r7, #7
 682 002c 0122     		mov	r2, #1
 683 002e 1A70     		strb	r2, [r3]
 684 0030 02E0     		b	.L48
 685              	.L49:
 761:Generated_Source\PSoC4/SPIM.c ****         }
 762:Generated_Source\PSoC4/SPIM.c ****         else
 763:Generated_Source\PSoC4/SPIM.c ****         {
 764:Generated_Source\PSoC4/SPIM.c ****             size = SPIM_FIFO_SIZE;
 686              		.loc 1 764 0
 687 0032 FB1D     		add	r3, r7, #7
 688 0034 0422     		mov	r2, #4
 689 0036 1A70     		strb	r2, [r3]
 690              	.L48:
 765:Generated_Source\PSoC4/SPIM.c ****         }
 766:Generated_Source\PSoC4/SPIM.c **** 
 767:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM.c **** 
 769:Generated_Source\PSoC4/SPIM.c ****     return(size);
 691              		.loc 1 769 0
 692 0038 FB1D     		add	r3, r7, #7
 693 003a 1B78     		ldrb	r3, [r3]
 770:Generated_Source\PSoC4/SPIM.c **** }
 694              		.loc 1 770 0
 695 003c 181C     		mov	r0, r3
 696 003e BD46     		mov	sp, r7
 697 0040 02B0     		add	sp, sp, #8
 698              		@ sp needed
 699 0042 80BD     		pop	{r7, pc}
 700              	.L52:
 701              		.align	2
 702              	.L51:
 703 0044 63000F40 		.word	1074724963
 704              		.cfi_endproc
 705              	.LFE17:
 706              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 707              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 708              		.align	2
 709              		.global	SPIM_ClearRxBuffer
 710              		.code	16
 711              		.thumb_func
 712              		.type	SPIM_ClearRxBuffer, %function
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 27


 713              	SPIM_ClearRxBuffer:
 714              	.LFB18:
 771:Generated_Source\PSoC4/SPIM.c **** 
 772:Generated_Source\PSoC4/SPIM.c **** 
 773:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC4/SPIM.c **** *
 777:Generated_Source\PSoC4/SPIM.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM.c **** *
 780:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC4/SPIM.c **** *  None.
 782:Generated_Source\PSoC4/SPIM.c **** *
 783:Generated_Source\PSoC4/SPIM.c **** * Return:
 784:Generated_Source\PSoC4/SPIM.c **** *  None.
 785:Generated_Source\PSoC4/SPIM.c **** *
 786:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM.c **** *
 794:Generated_Source\PSoC4/SPIM.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM.c **** *
 799:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM.c **** *
 802:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM.c **** *  No.
 804:Generated_Source\PSoC4/SPIM.c **** *
 805:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM.c **** {
 715              		.loc 1 807 0
 716              		.cfi_startproc
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 723              		.loc 1 809 0
 724 0004 01E0     		b	.L54
 725              	.L55:
 810:Generated_Source\PSoC4/SPIM.c ****     {
 811:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 726              		.loc 1 811 0
 727 0006 054B     		ldr	r3, .L56
 728 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 28


 729              	.L54:
 809:Generated_Source\PSoC4/SPIM.c ****     {
 730              		.loc 1 809 0
 731 000a 054B     		ldr	r3, .L56+4
 732 000c 1B78     		ldrb	r3, [r3]
 733 000e DBB2     		uxtb	r3, r3
 734 0010 1A1C     		mov	r2, r3
 735 0012 2023     		mov	r3, #32
 736 0014 1340     		and	r3, r2
 737 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC4/SPIM.c ****     }
 813:Generated_Source\PSoC4/SPIM.c **** 
 814:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC4/SPIM.c **** 
 818:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/SPIM.c **** 
 822:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM.c **** }
 738              		.loc 1 824 0
 739 0018 BD46     		mov	sp, r7
 740              		@ sp needed
 741 001a 80BD     		pop	{r7, pc}
 742              	.L57:
 743              		.align	2
 744              	.L56:
 745 001c 50000F40 		.word	1074724944
 746 0020 60000F40 		.word	1074724960
 747              		.cfi_endproc
 748              	.LFE18:
 749              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 750              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 751              		.align	2
 752              		.global	SPIM_ClearTxBuffer
 753              		.code	16
 754              		.thumb_func
 755              		.type	SPIM_ClearTxBuffer, %function
 756              	SPIM_ClearTxBuffer:
 757              	.LFB19:
 825:Generated_Source\PSoC4/SPIM.c **** 
 826:Generated_Source\PSoC4/SPIM.c **** 
 827:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM.c **** *
 831:Generated_Source\PSoC4/SPIM.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM.c **** *
 834:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM.c **** *  None.
 836:Generated_Source\PSoC4/SPIM.c **** *
 837:Generated_Source\PSoC4/SPIM.c **** * Return:
 838:Generated_Source\PSoC4/SPIM.c **** *  None.
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 29


 839:Generated_Source\PSoC4/SPIM.c **** *
 840:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM.c **** *
 848:Generated_Source\PSoC4/SPIM.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM.c **** *
 853:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM.c **** *
 857:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM.c **** *  No.
 859:Generated_Source\PSoC4/SPIM.c **** *
 860:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM.c **** {
 758              		.loc 1 862 0
 759              		.cfi_startproc
 760 0000 90B5     		push	{r4, r7, lr}
 761              		.cfi_def_cfa_offset 12
 762              		.cfi_offset 4, -12
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 83B0     		sub	sp, sp, #12
 766              		.cfi_def_cfa_offset 24
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM.c **** 
 865:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 769              		.loc 1 865 0
 770 0006 FC1D     		add	r4, r7, #7
 771 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 772 000c 031C     		mov	r3, r0
 773 000e 2370     		strb	r3, [r4]
 866:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 774              		.loc 1 867 0
 775 0010 0B4A     		ldr	r2, .L59
 776 0012 0B4B     		ldr	r3, .L59
 777 0014 1B78     		ldrb	r3, [r3]
 778 0016 DBB2     		uxtb	r3, r3
 779 0018 0121     		mov	r1, #1
 780 001a 0B43     		orr	r3, r1
 781 001c DBB2     		uxtb	r3, r3
 782 001e 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 783              		.loc 1 868 0
 784 0020 074A     		ldr	r2, .L59
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 30


 785 0022 074B     		ldr	r3, .L59
 786 0024 1B78     		ldrb	r3, [r3]
 787 0026 DBB2     		uxtb	r3, r3
 788 0028 0121     		mov	r1, #1
 789 002a 8B43     		bic	r3, r1
 790 002c DBB2     		uxtb	r3, r3
 791 002e 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC4/SPIM.c **** 
 870:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 792              		.loc 1 875 0
 793 0030 FB1D     		add	r3, r7, #7
 794 0032 1B78     		ldrb	r3, [r3]
 795 0034 181C     		mov	r0, r3
 796 0036 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC4/SPIM.c **** 
 877:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 880:Generated_Source\PSoC4/SPIM.c **** 
 881:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/SPIM.c **** 
 885:Generated_Source\PSoC4/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/SPIM.c **** 
 888:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 889:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM.c **** }
 797              		.loc 1 890 0
 798 003a BD46     		mov	sp, r7
 799 003c 03B0     		add	sp, sp, #12
 800              		@ sp needed
 801 003e 90BD     		pop	{r4, r7, pc}
 802              	.L60:
 803              		.align	2
 804              	.L59:
 805 0040 90000F40 		.word	1074725008
 806              		.cfi_endproc
 807              	.LFE19:
 808              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 809              		.section	.text.SPIM_PutArray,"ax",%progbits
 810              		.align	2
 811              		.global	SPIM_PutArray
 812              		.code	16
 813              		.thumb_func
 814              		.type	SPIM_PutArray, %function
 815              	SPIM_PutArray:
 816              	.LFB20:
 891:Generated_Source\PSoC4/SPIM.c **** 
 892:Generated_Source\PSoC4/SPIM.c **** 
 893:Generated_Source\PSoC4/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 31


 894:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM.c ****     *
 898:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM.c ****     *
 902:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM.c ****     *
 905:Generated_Source\PSoC4/SPIM.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM.c ****     *
 908:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM.c ****     {
 911:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM.c ****     }
 913:Generated_Source\PSoC4/SPIM.c **** 
 914:Generated_Source\PSoC4/SPIM.c **** 
 915:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM.c ****     *
 919:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM.c ****     *
 923:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM.c ****     *
 926:Generated_Source\PSoC4/SPIM.c ****     * Return:
 927:Generated_Source\PSoC4/SPIM.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM.c ****     *
 929:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM.c ****     {
 932:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM.c ****     }
 934:Generated_Source\PSoC4/SPIM.c **** 
 935:Generated_Source\PSoC4/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM.c **** 
 937:Generated_Source\PSoC4/SPIM.c **** 
 938:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC4/SPIM.c **** *
 942:Generated_Source\PSoC4/SPIM.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM.c **** *
 946:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM.c **** *
 950:Generated_Source\PSoC4/SPIM.c **** * Return:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 32


 951:Generated_Source\PSoC4/SPIM.c **** *  None.
 952:Generated_Source\PSoC4/SPIM.c **** *
 953:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/SPIM.c **** *
 958:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM.c **** *  No.
 960:Generated_Source\PSoC4/SPIM.c **** *
 961:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM.c **** {
 817              		.loc 1 964 0
 818              		.cfi_startproc
 819 0000 80B5     		push	{r7, lr}
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 84B0     		sub	sp, sp, #16
 824              		.cfi_def_cfa_offset 24
 825 0004 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 827 0006 7860     		str	r0, [r7, #4]
 828 0008 0A1C     		mov	r2, r1
 829 000a FB1C     		add	r3, r7, #3
 830 000c 1A70     		strb	r2, [r3]
 965:Generated_Source\PSoC4/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM.c **** 
 967:Generated_Source\PSoC4/SPIM.c ****     bufIndex = 0u;
 831              		.loc 1 967 0
 832 000e 0F23     		mov	r3, #15
 833 0010 FB18     		add	r3, r7, r3
 834 0012 0022     		mov	r2, #0
 835 0014 1A70     		strb	r2, [r3]
 968:Generated_Source\PSoC4/SPIM.c **** 
 969:Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 836              		.loc 1 969 0
 837 0016 14E0     		b	.L62
 838              	.L63:
 970:Generated_Source\PSoC4/SPIM.c ****     {
 971:Generated_Source\PSoC4/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 839              		.loc 1 971 0
 840 0018 0F23     		mov	r3, #15
 841 001a FB18     		add	r3, r7, r3
 842 001c 1B78     		ldrb	r3, [r3]
 843 001e 7A68     		ldr	r2, [r7, #4]
 844 0020 D318     		add	r3, r2, r3
 845 0022 1B78     		ldrb	r3, [r3]
 846 0024 181C     		mov	r0, r3
 847 0026 FFF7FEFF 		bl	SPIM_WriteTxData
 972:Generated_Source\PSoC4/SPIM.c ****         bufIndex++;
 848              		.loc 1 972 0
 849 002a 0F23     		mov	r3, #15
 850 002c FB18     		add	r3, r7, r3
 851 002e 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 33


 852 0030 0F23     		mov	r3, #15
 853 0032 FB18     		add	r3, r7, r3
 854 0034 0132     		add	r2, r2, #1
 855 0036 1A70     		strb	r2, [r3]
 973:Generated_Source\PSoC4/SPIM.c ****         byteCount--;
 856              		.loc 1 973 0
 857 0038 FB1C     		add	r3, r7, #3
 858 003a 1A78     		ldrb	r2, [r3]
 859 003c FB1C     		add	r3, r7, #3
 860 003e 013A     		sub	r2, r2, #1
 861 0040 1A70     		strb	r2, [r3]
 862              	.L62:
 969:Generated_Source\PSoC4/SPIM.c ****     {
 863              		.loc 1 969 0
 864 0042 FB1C     		add	r3, r7, #3
 865 0044 1B78     		ldrb	r3, [r3]
 866 0046 002B     		cmp	r3, #0
 867 0048 E6D1     		bne	.L63
 974:Generated_Source\PSoC4/SPIM.c ****     }
 975:Generated_Source\PSoC4/SPIM.c **** }
 868              		.loc 1 975 0
 869 004a BD46     		mov	sp, r7
 870 004c 04B0     		add	sp, sp, #16
 871              		@ sp needed
 872 004e 80BD     		pop	{r7, pc}
 873              		.cfi_endproc
 874              	.LFE20:
 875              		.size	SPIM_PutArray, .-SPIM_PutArray
 876              		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 877              		.align	2
 878              		.global	SPIM_ClearFIFO
 879              		.code	16
 880              		.thumb_func
 881              		.type	SPIM_ClearFIFO, %function
 882              	SPIM_ClearFIFO:
 883              	.LFB21:
 976:Generated_Source\PSoC4/SPIM.c **** 
 977:Generated_Source\PSoC4/SPIM.c **** 
 978:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM.c **** *
 982:Generated_Source\PSoC4/SPIM.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/SPIM.c **** *
 985:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM.c **** *  None.
 987:Generated_Source\PSoC4/SPIM.c **** *
 988:Generated_Source\PSoC4/SPIM.c **** * Return:
 989:Generated_Source\PSoC4/SPIM.c **** *  None.
 990:Generated_Source\PSoC4/SPIM.c **** *
 991:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM.c **** *
 994:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM.c **** {
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 34


 884              		.loc 1 996 0
 885              		.cfi_startproc
 886 0000 90B5     		push	{r4, r7, lr}
 887              		.cfi_def_cfa_offset 12
 888              		.cfi_offset 4, -12
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 83B0     		sub	sp, sp, #12
 892              		.cfi_def_cfa_offset 24
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM.c **** 
 999:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 895              		.loc 1 1000 0
 896 0006 01E0     		b	.L65
 897              	.L66:
1001:Generated_Source\PSoC4/SPIM.c ****     {
1002:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 898              		.loc 1 1002 0
 899 0008 124B     		ldr	r3, .L67
 900 000a 1B78     		ldrb	r3, [r3]
 901              	.L65:
1000:Generated_Source\PSoC4/SPIM.c ****     {
 902              		.loc 1 1000 0
 903 000c 124B     		ldr	r3, .L67+4
 904 000e 1B78     		ldrb	r3, [r3]
 905 0010 DBB2     		uxtb	r3, r3
 906 0012 1A1C     		mov	r2, r3
 907 0014 2023     		mov	r3, #32
 908 0016 1340     		and	r3, r2
 909 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC4/SPIM.c ****     }
1004:Generated_Source\PSoC4/SPIM.c **** 
1005:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 910              		.loc 1 1005 0
 911 001a FC1D     		add	r4, r7, #7
 912 001c FFF7FEFF 		bl	CyEnterCriticalSection
 913 0020 031C     		mov	r3, r0
 914 0022 2370     		strb	r3, [r4]
1006:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 915              		.loc 1 1007 0
 916 0024 0D4A     		ldr	r2, .L67+8
 917 0026 0D4B     		ldr	r3, .L67+8
 918 0028 1B78     		ldrb	r3, [r3]
 919 002a DBB2     		uxtb	r3, r3
 920 002c 0121     		mov	r1, #1
 921 002e 0B43     		orr	r3, r1
 922 0030 DBB2     		uxtb	r3, r3
 923 0032 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 924              		.loc 1 1008 0
 925 0034 094A     		ldr	r2, .L67+8
 926 0036 094B     		ldr	r3, .L67+8
 927 0038 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 35


 928 003a DBB2     		uxtb	r3, r3
 929 003c 0121     		mov	r1, #1
 930 003e 8B43     		bic	r3, r1
 931 0040 DBB2     		uxtb	r3, r3
 932 0042 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/SPIM.c **** 
1010:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 933              		.loc 1 1015 0
 934 0044 FB1D     		add	r3, r7, #7
 935 0046 1B78     		ldrb	r3, [r3]
 936 0048 181C     		mov	r0, r3
 937 004a FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC4/SPIM.c **** }
 938              		.loc 1 1016 0
 939 004e BD46     		mov	sp, r7
 940 0050 03B0     		add	sp, sp, #12
 941              		@ sp needed
 942 0052 90BD     		pop	{r4, r7, pc}
 943              	.L68:
 944              		.align	2
 945              	.L67:
 946 0054 50000F40 		.word	1074724944
 947 0058 60000F40 		.word	1074724960
 948 005c 90000F40 		.word	1074725008
 949              		.cfi_endproc
 950              	.LFE21:
 951              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 952              		.section	.text.SPIM_EnableInt,"ax",%progbits
 953              		.align	2
 954              		.global	SPIM_EnableInt
 955              		.code	16
 956              		.thumb_func
 957              		.type	SPIM_EnableInt, %function
 958              	SPIM_EnableInt:
 959              	.LFB22:
1017:Generated_Source\PSoC4/SPIM.c **** 
1018:Generated_Source\PSoC4/SPIM.c **** 
1019:Generated_Source\PSoC4/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM.c **** */
1022:Generated_Source\PSoC4/SPIM.c **** 
1023:Generated_Source\PSoC4/SPIM.c **** 
1024:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM.c **** *
1028:Generated_Source\PSoC4/SPIM.c **** * Summary:
1029:Generated_Source\PSoC4/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM.c **** *
1031:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM.c **** *  None.
1033:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 36


1034:Generated_Source\PSoC4/SPIM.c **** * Return:
1035:Generated_Source\PSoC4/SPIM.c **** *  None.
1036:Generated_Source\PSoC4/SPIM.c **** *
1037:Generated_Source\PSoC4/SPIM.c **** * Theory:
1038:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM.c **** *
1040:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM.c **** {
 960              		.loc 1 1042 0
 961              		.cfi_startproc
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 968              		.loc 1 1043 0
 969 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 970              		.loc 1 1044 0
 971 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:Generated_Source\PSoC4/SPIM.c **** }
 972              		.loc 1 1045 0
 973 000c BD46     		mov	sp, r7
 974              		@ sp needed
 975 000e 80BD     		pop	{r7, pc}
 976              		.cfi_endproc
 977              	.LFE22:
 978              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 979              		.section	.text.SPIM_DisableInt,"ax",%progbits
 980              		.align	2
 981              		.global	SPIM_DisableInt
 982              		.code	16
 983              		.thumb_func
 984              		.type	SPIM_DisableInt, %function
 985              	SPIM_DisableInt:
 986              	.LFB23:
1046:Generated_Source\PSoC4/SPIM.c **** 
1047:Generated_Source\PSoC4/SPIM.c **** 
1048:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM.c **** *
1052:Generated_Source\PSoC4/SPIM.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM.c **** *
1055:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC4/SPIM.c **** *  None.
1057:Generated_Source\PSoC4/SPIM.c **** *
1058:Generated_Source\PSoC4/SPIM.c **** * Return:
1059:Generated_Source\PSoC4/SPIM.c **** *  None.
1060:Generated_Source\PSoC4/SPIM.c **** *
1061:Generated_Source\PSoC4/SPIM.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 37


1064:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM.c **** {
 987              		.loc 1 1066 0
 988              		.cfi_startproc
 989 0000 80B5     		push	{r7, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 00AF     		add	r7, sp, #0
 994              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 995              		.loc 1 1067 0
 996 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1068:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 997              		.loc 1 1068 0
 998 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:Generated_Source\PSoC4/SPIM.c **** }
 999              		.loc 1 1069 0
 1000 000c BD46     		mov	sp, r7
 1001              		@ sp needed
 1002 000e 80BD     		pop	{r7, pc}
 1003              		.cfi_endproc
 1004              	.LFE23:
 1005              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1006              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1007              		.align	2
 1008              		.global	SPIM_SetInterruptMode
 1009              		.code	16
 1010              		.thumb_func
 1011              		.type	SPIM_SetInterruptMode, %function
 1012              	SPIM_SetInterruptMode:
 1013              	.LFB24:
1070:Generated_Source\PSoC4/SPIM.c **** 
1071:Generated_Source\PSoC4/SPIM.c **** 
1072:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM.c **** *
1076:Generated_Source\PSoC4/SPIM.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM.c **** *
1079:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/SPIM.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM.c **** *
1083:Generated_Source\PSoC4/SPIM.c **** * Return:
1084:Generated_Source\PSoC4/SPIM.c **** *  None.
1085:Generated_Source\PSoC4/SPIM.c **** *
1086:Generated_Source\PSoC4/SPIM.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/SPIM.c **** *
1089:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM.c **** {
 1014              		.loc 1 1091 0
 1015              		.cfi_startproc
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 38


 1016 0000 80B5     		push	{r7, lr}
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 0002 82B0     		sub	sp, sp, #8
 1021              		.cfi_def_cfa_offset 16
 1022 0004 00AF     		add	r7, sp, #0
 1023              		.cfi_def_cfa_register 7
 1024 0006 021C     		mov	r2, r0
 1025 0008 FB1D     		add	r3, r7, #7
 1026 000a 1A70     		strb	r2, [r3]
1092:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1027              		.loc 1 1092 0
 1028 000c 064A     		ldr	r2, .L72
 1029 000e FB1D     		add	r3, r7, #7
 1030 0010 1B78     		ldrb	r3, [r3]
 1031 0012 1021     		mov	r1, #16
 1032 0014 8B43     		bic	r3, r1
 1033 0016 DBB2     		uxtb	r3, r3
 1034 0018 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1035              		.loc 1 1093 0
 1036 001a 044A     		ldr	r2, .L72+4
 1037 001c FB1D     		add	r3, r7, #7
 1038 001e 1B78     		ldrb	r3, [r3]
 1039 0020 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC4/SPIM.c **** }
 1040              		.loc 1 1094 0
 1041 0022 BD46     		mov	sp, r7
 1042 0024 02B0     		add	sp, sp, #8
 1043              		@ sp needed
 1044 0026 80BD     		pop	{r7, pc}
 1045              	.L73:
 1046              		.align	2
 1047              	.L72:
 1048 0028 83000F40 		.word	1074724995
 1049 002c 80000F40 		.word	1074724992
 1050              		.cfi_endproc
 1051              	.LFE24:
 1052              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1053              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1054              		.align	2
 1055              		.global	SPIM_ReadStatus
 1056              		.code	16
 1057              		.thumb_func
 1058              		.type	SPIM_ReadStatus, %function
 1059              	SPIM_ReadStatus:
 1060              	.LFB25:
1095:Generated_Source\PSoC4/SPIM.c **** 
1096:Generated_Source\PSoC4/SPIM.c **** 
1097:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM.c **** *
1101:Generated_Source\PSoC4/SPIM.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 39


1104:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM.c **** *  None.
1106:Generated_Source\PSoC4/SPIM.c **** *
1107:Generated_Source\PSoC4/SPIM.c **** * Return:
1108:Generated_Source\PSoC4/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM.c **** *
1110:Generated_Source\PSoC4/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM.c **** *
1114:Generated_Source\PSoC4/SPIM.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM.c **** *
1118:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM.c **** *
1121:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM.c **** *  No.
1123:Generated_Source\PSoC4/SPIM.c **** *
1124:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM.c **** {
 1061              		.loc 1 1126 0
 1062              		.cfi_startproc
 1063 0000 80B5     		push	{r7, lr}
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 82B0     		sub	sp, sp, #8
 1068              		.cfi_def_cfa_offset 16
 1069 0004 00AF     		add	r7, sp, #0
 1070              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM.c **** 
1129:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM.c **** 
1131:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableInt();
1132:Generated_Source\PSoC4/SPIM.c **** 
1133:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1135:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/SPIM.c **** 
1137:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:Generated_Source\PSoC4/SPIM.c **** 
1140:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
1141:Generated_Source\PSoC4/SPIM.c **** 
1142:Generated_Source\PSoC4/SPIM.c ****     #else
1143:Generated_Source\PSoC4/SPIM.c **** 
1144:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 1071              		.loc 1 1144 0
 1072 0006 0C4A     		ldr	r2, .L76
 1073 0008 FB1D     		add	r3, r7, #7
 1074 000a 1278     		ldrb	r2, [r2]
 1075 000c 1A70     		strb	r2, [r3]
1145:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 40


 1076              		.loc 1 1145 0
 1077 000e 0B4B     		ldr	r3, .L76+4
 1078 0010 1B78     		ldrb	r3, [r3]
 1079 0012 D9B2     		uxtb	r1, r3
 1080 0014 FB1D     		add	r3, r7, #7
 1081 0016 FA1D     		add	r2, r7, #7
 1082 0018 1278     		ldrb	r2, [r2]
 1083 001a 0A43     		orr	r2, r1
 1084 001c 1A70     		strb	r2, [r3]
1146:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1085              		.loc 1 1146 0
 1086 001e FB1D     		add	r3, r7, #7
 1087 0020 FA1D     		add	r2, r7, #7
 1088 0022 1278     		ldrb	r2, [r2]
 1089 0024 1021     		mov	r1, #16
 1090 0026 8A43     		bic	r2, r1
 1091 0028 1A70     		strb	r2, [r3]
1147:Generated_Source\PSoC4/SPIM.c **** 
1148:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM.c **** 
1150:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 1092              		.loc 1 1150 0
 1093 002a FB1D     		add	r3, r7, #7
 1094 002c 1B78     		ldrb	r3, [r3]
1151:Generated_Source\PSoC4/SPIM.c **** }
 1095              		.loc 1 1151 0
 1096 002e 181C     		mov	r0, r3
 1097 0030 BD46     		mov	sp, r7
 1098 0032 02B0     		add	sp, sp, #8
 1099              		@ sp needed
 1100 0034 80BD     		pop	{r7, pc}
 1101              	.L77:
 1102 0036 C046     		.align	2
 1103              	.L76:
 1104 0038 60000F40 		.word	1074724960
 1105 003c 63000F40 		.word	1074724963
 1106              		.cfi_endproc
 1107              	.LFE25:
 1108              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1109              		.text
 1110              	.Letext0:
 1111              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1112              		.section	.debug_info,"",%progbits
 1113              	.Ldebug_info0:
 1114 0000 E9030000 		.4byte	0x3e9
 1115 0004 0400     		.2byte	0x4
 1116 0006 00000000 		.4byte	.Ldebug_abbrev0
 1117 000a 04       		.byte	0x4
 1118 000b 01       		.uleb128 0x1
 1119 000c D7010000 		.4byte	.LASF51
 1120 0010 01       		.byte	0x1
 1121 0011 80000000 		.4byte	.LASF52
 1122 0015 FF000000 		.4byte	.LASF53
 1123 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1124 001d 00000000 		.4byte	0
 1125 0021 00000000 		.4byte	.Ldebug_line0
 1126 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 41


 1127 0026 01       		.byte	0x1
 1128 0027 06       		.byte	0x6
 1129 0028 85030000 		.4byte	.LASF0
 1130 002c 02       		.uleb128 0x2
 1131 002d 01       		.byte	0x1
 1132 002e 08       		.byte	0x8
 1133 002f 84010000 		.4byte	.LASF1
 1134 0033 02       		.uleb128 0x2
 1135 0034 02       		.byte	0x2
 1136 0035 05       		.byte	0x5
 1137 0036 1D030000 		.4byte	.LASF2
 1138 003a 02       		.uleb128 0x2
 1139 003b 02       		.byte	0x2
 1140 003c 07       		.byte	0x7
 1141 003d 2E000000 		.4byte	.LASF3
 1142 0041 02       		.uleb128 0x2
 1143 0042 04       		.byte	0x4
 1144 0043 05       		.byte	0x5
 1145 0044 72030000 		.4byte	.LASF4
 1146 0048 02       		.uleb128 0x2
 1147 0049 04       		.byte	0x4
 1148 004a 07       		.byte	0x7
 1149 004b E7000000 		.4byte	.LASF5
 1150 004f 02       		.uleb128 0x2
 1151 0050 08       		.byte	0x8
 1152 0051 05       		.byte	0x5
 1153 0052 F6020000 		.4byte	.LASF6
 1154 0056 02       		.uleb128 0x2
 1155 0057 08       		.byte	0x8
 1156 0058 07       		.byte	0x7
 1157 0059 A2020000 		.4byte	.LASF7
 1158 005d 03       		.uleb128 0x3
 1159 005e 04       		.byte	0x4
 1160 005f 05       		.byte	0x5
 1161 0060 696E7400 		.ascii	"int\000"
 1162 0064 02       		.uleb128 0x2
 1163 0065 04       		.byte	0x4
 1164 0066 07       		.byte	0x7
 1165 0067 95020000 		.4byte	.LASF8
 1166 006b 04       		.uleb128 0x4
 1167 006c F9000000 		.4byte	.LASF12
 1168 0070 02       		.byte	0x2
 1169 0071 9801     		.2byte	0x198
 1170 0073 2C000000 		.4byte	0x2c
 1171 0077 02       		.uleb128 0x2
 1172 0078 04       		.byte	0x4
 1173 0079 04       		.byte	0x4
 1174 007a 9E000000 		.4byte	.LASF9
 1175 007e 02       		.uleb128 0x2
 1176 007f 08       		.byte	0x8
 1177 0080 04       		.byte	0x4
 1178 0081 A4010000 		.4byte	.LASF10
 1179 0085 02       		.uleb128 0x2
 1180 0086 01       		.byte	0x1
 1181 0087 08       		.byte	0x8
 1182 0088 41000000 		.4byte	.LASF11
 1183 008c 04       		.uleb128 0x4
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 42


 1184 008d D1000000 		.4byte	.LASF13
 1185 0091 02       		.byte	0x2
 1186 0092 4202     		.2byte	0x242
 1187 0094 98000000 		.4byte	0x98
 1188 0098 05       		.uleb128 0x5
 1189 0099 6B000000 		.4byte	0x6b
 1190 009d 02       		.uleb128 0x2
 1191 009e 04       		.byte	0x4
 1192 009f 07       		.byte	0x7
 1193 00a0 ED020000 		.4byte	.LASF14
 1194 00a4 06       		.uleb128 0x6
 1195 00a5 04030000 		.4byte	.LASF15
 1196 00a9 01       		.byte	0x1
 1197 00aa 3F       		.byte	0x3f
 1198 00ab 00000000 		.4byte	.LFB2
 1199 00af 34000000 		.4byte	.LFE2-.LFB2
 1200 00b3 01       		.uleb128 0x1
 1201 00b4 9C       		.byte	0x9c
 1202 00b5 07       		.uleb128 0x7
 1203 00b6 11000000 		.4byte	.LASF17
 1204 00ba 01       		.byte	0x1
 1205 00bb 78       		.byte	0x78
 1206 00bc 00000000 		.4byte	.LFB3
 1207 00c0 64000000 		.4byte	.LFE3-.LFB3
 1208 00c4 01       		.uleb128 0x1
 1209 00c5 9C       		.byte	0x9c
 1210 00c6 D9000000 		.4byte	0xd9
 1211 00ca 08       		.uleb128 0x8
 1212 00cb 63010000 		.4byte	.LASF19
 1213 00cf 01       		.byte	0x1
 1214 00d0 7A       		.byte	0x7a
 1215 00d1 6B000000 		.4byte	0x6b
 1216 00d5 02       		.uleb128 0x2
 1217 00d6 91       		.byte	0x91
 1218 00d7 6F       		.sleb128 -17
 1219 00d8 00       		.byte	0
 1220 00d9 06       		.uleb128 0x6
 1221 00da 91030000 		.4byte	.LASF16
 1222 00de 01       		.byte	0x1
 1223 00df A3       		.byte	0xa3
 1224 00e0 00000000 		.4byte	.LFB4
 1225 00e4 24000000 		.4byte	.LFE4-.LFB4
 1226 00e8 01       		.uleb128 0x1
 1227 00e9 9C       		.byte	0x9c
 1228 00ea 07       		.uleb128 0x7
 1229 00eb 1D000000 		.4byte	.LASF18
 1230 00ef 01       		.byte	0x1
 1231 00f0 C0       		.byte	0xc0
 1232 00f1 00000000 		.4byte	.LFB5
 1233 00f5 50000000 		.4byte	.LFE5-.LFB5
 1234 00f9 01       		.uleb128 0x1
 1235 00fa 9C       		.byte	0x9c
 1236 00fb 0E010000 		.4byte	0x10e
 1237 00ff 08       		.uleb128 0x8
 1238 0100 63010000 		.4byte	.LASF19
 1239 0104 01       		.byte	0x1
 1240 0105 C2       		.byte	0xc2
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 43


 1241 0106 6B000000 		.4byte	0x6b
 1242 010a 02       		.uleb128 0x2
 1243 010b 91       		.byte	0x91
 1244 010c 6F       		.sleb128 -17
 1245 010d 00       		.byte	0
 1246 010e 09       		.uleb128 0x9
 1247 010f D6000000 		.4byte	.LASF20
 1248 0113 01       		.byte	0x1
 1249 0114 E3       		.byte	0xe3
 1250 0115 00000000 		.4byte	.LFB6
 1251 0119 08000000 		.4byte	.LFE6-.LFB6
 1252 011d 01       		.uleb128 0x1
 1253 011e 9C       		.byte	0x9c
 1254 011f 09       		.uleb128 0x9
 1255 0120 61030000 		.4byte	.LASF21
 1256 0124 01       		.byte	0x1
 1257 0125 FC       		.byte	0xfc
 1258 0126 00000000 		.4byte	.LFB7
 1259 012a 08000000 		.4byte	.LFE7-.LFB7
 1260 012e 01       		.uleb128 0x1
 1261 012f 9C       		.byte	0x9c
 1262 0130 0A       		.uleb128 0xa
 1263 0131 92010000 		.4byte	.LASF22
 1264 0135 01       		.byte	0x1
 1265 0136 1501     		.2byte	0x115
 1266 0138 00000000 		.4byte	.LFB8
 1267 013c 08000000 		.4byte	.LFE8-.LFB8
 1268 0140 01       		.uleb128 0x1
 1269 0141 9C       		.byte	0x9c
 1270 0142 0A       		.uleb128 0xa
 1271 0143 AE030000 		.4byte	.LASF23
 1272 0147 01       		.byte	0x1
 1273 0148 2E01     		.2byte	0x12e
 1274 014a 00000000 		.4byte	.LFB9
 1275 014e 08000000 		.4byte	.LFE9-.LFB9
 1276 0152 01       		.uleb128 0x1
 1277 0153 9C       		.byte	0x9c
 1278 0154 0B       		.uleb128 0xb
 1279 0155 65020000 		.4byte	.LASF24
 1280 0159 01       		.byte	0x1
 1281 015a 4801     		.2byte	0x148
 1282 015c 00000000 		.4byte	.LFB10
 1283 0160 20000000 		.4byte	.LFE10-.LFB10
 1284 0164 01       		.uleb128 0x1
 1285 0165 9C       		.byte	0x9c
 1286 0166 7A010000 		.4byte	0x17a
 1287 016a 0C       		.uleb128 0xc
 1288 016b AB010000 		.4byte	.LASF26
 1289 016f 01       		.byte	0x1
 1290 0170 4801     		.2byte	0x148
 1291 0172 6B000000 		.4byte	0x6b
 1292 0176 02       		.uleb128 0x2
 1293 0177 91       		.byte	0x91
 1294 0178 77       		.sleb128 -9
 1295 0179 00       		.byte	0
 1296 017a 0B       		.uleb128 0xb
 1297 017b 7D020000 		.4byte	.LASF25
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 44


 1298 017f 01       		.byte	0x1
 1299 0180 6001     		.2byte	0x160
 1300 0182 00000000 		.4byte	.LFB11
 1301 0186 20000000 		.4byte	.LFE11-.LFB11
 1302 018a 01       		.uleb128 0x1
 1303 018b 9C       		.byte	0x9c
 1304 018c A0010000 		.4byte	0x1a0
 1305 0190 0C       		.uleb128 0xc
 1306 0191 AB010000 		.4byte	.LASF26
 1307 0195 01       		.byte	0x1
 1308 0196 6001     		.2byte	0x160
 1309 0198 6B000000 		.4byte	0x6b
 1310 019c 02       		.uleb128 0x2
 1311 019d 91       		.byte	0x91
 1312 019e 77       		.sleb128 -9
 1313 019f 00       		.byte	0
 1314 01a0 0D       		.uleb128 0xd
 1315 01a1 9C030000 		.4byte	.LASF28
 1316 01a5 01       		.byte	0x1
 1317 01a6 8201     		.2byte	0x182
 1318 01a8 6B000000 		.4byte	0x6b
 1319 01ac 00000000 		.4byte	.LFB12
 1320 01b0 20000000 		.4byte	.LFE12-.LFB12
 1321 01b4 01       		.uleb128 0x1
 1322 01b5 9C       		.byte	0x9c
 1323 01b6 CA010000 		.4byte	0x1ca
 1324 01ba 0E       		.uleb128 0xe
 1325 01bb 7B030000 		.4byte	.LASF27
 1326 01bf 01       		.byte	0x1
 1327 01c0 8401     		.2byte	0x184
 1328 01c2 6B000000 		.4byte	0x6b
 1329 01c6 02       		.uleb128 0x2
 1330 01c7 91       		.byte	0x91
 1331 01c8 77       		.sleb128 -9
 1332 01c9 00       		.byte	0
 1333 01ca 0D       		.uleb128 0xd
 1334 01cb C3020000 		.4byte	.LASF29
 1335 01cf 01       		.byte	0x1
 1336 01d0 B501     		.2byte	0x1b5
 1337 01d2 6B000000 		.4byte	0x6b
 1338 01d6 00000000 		.4byte	.LFB13
 1339 01da 20000000 		.4byte	.LFE13-.LFB13
 1340 01de 01       		.uleb128 0x1
 1341 01df 9C       		.byte	0x9c
 1342 01e0 F4010000 		.4byte	0x1f4
 1343 01e4 0E       		.uleb128 0xe
 1344 01e5 7B030000 		.4byte	.LASF27
 1345 01e9 01       		.byte	0x1
 1346 01ea B701     		.2byte	0x1b7
 1347 01ec 6B000000 		.4byte	0x6b
 1348 01f0 02       		.uleb128 0x2
 1349 01f1 91       		.byte	0x91
 1350 01f2 77       		.sleb128 -9
 1351 01f3 00       		.byte	0
 1352 01f4 0B       		.uleb128 0xb
 1353 01f5 00000000 		.4byte	.LASF30
 1354 01f9 01       		.byte	0x1
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 45


 1355 01fa EE01     		.2byte	0x1ee
 1356 01fc 00000000 		.4byte	.LFB14
 1357 0200 34000000 		.4byte	.LFE14-.LFB14
 1358 0204 01       		.uleb128 0x1
 1359 0205 9C       		.byte	0x9c
 1360 0206 1A020000 		.4byte	0x21a
 1361 020a 0C       		.uleb128 0xc
 1362 020b 27000000 		.4byte	.LASF31
 1363 020f 01       		.byte	0x1
 1364 0210 EE01     		.2byte	0x1ee
 1365 0212 6B000000 		.4byte	0x6b
 1366 0216 02       		.uleb128 0x2
 1367 0217 91       		.byte	0x91
 1368 0218 77       		.sleb128 -9
 1369 0219 00       		.byte	0
 1370 021a 0D       		.uleb128 0xd
 1371 021b 74010000 		.4byte	.LASF32
 1372 021f 01       		.byte	0x1
 1373 0220 5A02     		.2byte	0x25a
 1374 0222 6B000000 		.4byte	0x6b
 1375 0226 00000000 		.4byte	.LFB15
 1376 022a 20000000 		.4byte	.LFE15-.LFB15
 1377 022e 01       		.uleb128 0x1
 1378 022f 9C       		.byte	0x9c
 1379 0230 44020000 		.4byte	0x244
 1380 0234 0E       		.uleb128 0xe
 1381 0235 69000000 		.4byte	.LASF33
 1382 0239 01       		.byte	0x1
 1383 023a 5C02     		.2byte	0x25c
 1384 023c 6B000000 		.4byte	0x6b
 1385 0240 02       		.uleb128 0x2
 1386 0241 91       		.byte	0x91
 1387 0242 77       		.sleb128 -9
 1388 0243 00       		.byte	0
 1389 0244 0D       		.uleb128 0xd
 1390 0245 C2010000 		.4byte	.LASF34
 1391 0249 01       		.byte	0x1
 1392 024a 9A02     		.2byte	0x29a
 1393 024c 6B000000 		.4byte	0x6b
 1394 0250 00000000 		.4byte	.LFB16
 1395 0254 30000000 		.4byte	.LFE16-.LFB16
 1396 0258 01       		.uleb128 0x1
 1397 0259 9C       		.byte	0x9c
 1398 025a 6E020000 		.4byte	0x26e
 1399 025e 0E       		.uleb128 0xe
 1400 025f B7000000 		.4byte	.LASF35
 1401 0263 01       		.byte	0x1
 1402 0264 9C02     		.2byte	0x29c
 1403 0266 6B000000 		.4byte	0x6b
 1404 026a 02       		.uleb128 0x2
 1405 026b 91       		.byte	0x91
 1406 026c 77       		.sleb128 -9
 1407 026d 00       		.byte	0
 1408 026e 0D       		.uleb128 0xd
 1409 026f BC000000 		.4byte	.LASF36
 1410 0273 01       		.byte	0x1
 1411 0274 D702     		.2byte	0x2d7
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 46


 1412 0276 6B000000 		.4byte	0x6b
 1413 027a 00000000 		.4byte	.LFB17
 1414 027e 48000000 		.4byte	.LFE17-.LFB17
 1415 0282 01       		.uleb128 0x1
 1416 0283 9C       		.byte	0x9c
 1417 0284 98020000 		.4byte	0x298
 1418 0288 0E       		.uleb128 0xe
 1419 0289 B7000000 		.4byte	.LASF35
 1420 028d 01       		.byte	0x1
 1421 028e D902     		.2byte	0x2d9
 1422 0290 6B000000 		.4byte	0x6b
 1423 0294 02       		.uleb128 0x2
 1424 0295 91       		.byte	0x91
 1425 0296 77       		.sleb128 -9
 1426 0297 00       		.byte	0
 1427 0298 0A       		.uleb128 0xa
 1428 0299 A4000000 		.4byte	.LASF37
 1429 029d 01       		.byte	0x1
 1430 029e 2603     		.2byte	0x326
 1431 02a0 00000000 		.4byte	.LFB18
 1432 02a4 24000000 		.4byte	.LFE18-.LFB18
 1433 02a8 01       		.uleb128 0x1
 1434 02a9 9C       		.byte	0x9c
 1435 02aa 0F       		.uleb128 0xf
 1436 02ab 27030000 		.4byte	.LASF38
 1437 02af 01       		.byte	0x1
 1438 02b0 5D03     		.2byte	0x35d
 1439 02b2 00000000 		.4byte	.LFB19
 1440 02b6 44000000 		.4byte	.LFE19-.LFB19
 1441 02ba 01       		.uleb128 0x1
 1442 02bb 9C       		.byte	0x9c
 1443 02bc D0020000 		.4byte	0x2d0
 1444 02c0 0E       		.uleb128 0xe
 1445 02c1 63010000 		.4byte	.LASF19
 1446 02c5 01       		.byte	0x1
 1447 02c6 5F03     		.2byte	0x35f
 1448 02c8 6B000000 		.4byte	0x6b
 1449 02cc 02       		.uleb128 0x2
 1450 02cd 91       		.byte	0x91
 1451 02ce 6F       		.sleb128 -17
 1452 02cf 00       		.byte	0
 1453 02d0 0F       		.uleb128 0xf
 1454 02d1 55010000 		.4byte	.LASF39
 1455 02d5 01       		.byte	0x1
 1456 02d6 C203     		.2byte	0x3c2
 1457 02d8 00000000 		.4byte	.LFB20
 1458 02dc 50000000 		.4byte	.LFE20-.LFB20
 1459 02e0 01       		.uleb128 0x1
 1460 02e1 9C       		.byte	0x9c
 1461 02e2 14030000 		.4byte	0x314
 1462 02e6 0C       		.uleb128 0xc
 1463 02e7 3A030000 		.4byte	.LASF40
 1464 02eb 01       		.byte	0x1
 1465 02ec C203     		.2byte	0x3c2
 1466 02ee 14030000 		.4byte	0x314
 1467 02f2 02       		.uleb128 0x2
 1468 02f3 91       		.byte	0x91
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 47


 1469 02f4 6C       		.sleb128 -20
 1470 02f5 0C       		.uleb128 0xc
 1471 02f6 B9020000 		.4byte	.LASF41
 1472 02fa 01       		.byte	0x1
 1473 02fb C203     		.2byte	0x3c2
 1474 02fd 6B000000 		.4byte	0x6b
 1475 0301 02       		.uleb128 0x2
 1476 0302 91       		.byte	0x91
 1477 0303 6B       		.sleb128 -21
 1478 0304 0E       		.uleb128 0xe
 1479 0305 D5020000 		.4byte	.LASF42
 1480 0309 01       		.byte	0x1
 1481 030a C503     		.2byte	0x3c5
 1482 030c 6B000000 		.4byte	0x6b
 1483 0310 02       		.uleb128 0x2
 1484 0311 91       		.byte	0x91
 1485 0312 77       		.sleb128 -9
 1486 0313 00       		.byte	0
 1487 0314 10       		.uleb128 0x10
 1488 0315 04       		.byte	0x4
 1489 0316 1A030000 		.4byte	0x31a
 1490 031a 11       		.uleb128 0x11
 1491 031b 6B000000 		.4byte	0x6b
 1492 031f 0F       		.uleb128 0xf
 1493 0320 0E030000 		.4byte	.LASF43
 1494 0324 01       		.byte	0x1
 1495 0325 E303     		.2byte	0x3e3
 1496 0327 00000000 		.4byte	.LFB21
 1497 032b 60000000 		.4byte	.LFE21-.LFB21
 1498 032f 01       		.uleb128 0x1
 1499 0330 9C       		.byte	0x9c
 1500 0331 45030000 		.4byte	0x345
 1501 0335 0E       		.uleb128 0xe
 1502 0336 63010000 		.4byte	.LASF19
 1503 033a 01       		.byte	0x1
 1504 033b E503     		.2byte	0x3e5
 1505 033d 6B000000 		.4byte	0x6b
 1506 0341 02       		.uleb128 0x2
 1507 0342 91       		.byte	0x91
 1508 0343 6F       		.sleb128 -17
 1509 0344 00       		.byte	0
 1510 0345 12       		.uleb128 0x12
 1511 0346 DE020000 		.4byte	.LASF44
 1512 034a 01       		.byte	0x1
 1513 034b 1104     		.2byte	0x411
 1514 034d 00000000 		.4byte	.LFB22
 1515 0351 10000000 		.4byte	.LFE22-.LFB22
 1516 0355 01       		.uleb128 0x1
 1517 0356 9C       		.byte	0x9c
 1518 0357 12       		.uleb128 0x12
 1519 0358 70000000 		.4byte	.LASF45
 1520 035c 01       		.byte	0x1
 1521 035d 2904     		.2byte	0x429
 1522 035f 00000000 		.4byte	.LFB23
 1523 0363 10000000 		.4byte	.LFE23-.LFB23
 1524 0367 01       		.uleb128 0x1
 1525 0368 9C       		.byte	0x9c
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 48


 1526 0369 0B       		.uleb128 0xb
 1527 036a 46000000 		.4byte	.LASF46
 1528 036e 01       		.byte	0x1
 1529 036f 4204     		.2byte	0x442
 1530 0371 00000000 		.4byte	.LFB24
 1531 0375 30000000 		.4byte	.LFE24-.LFB24
 1532 0379 01       		.uleb128 0x1
 1533 037a 9C       		.byte	0x9c
 1534 037b 8F030000 		.4byte	0x38f
 1535 037f 0C       		.uleb128 0xc
 1536 0380 AB010000 		.4byte	.LASF26
 1537 0384 01       		.byte	0x1
 1538 0385 4204     		.2byte	0x442
 1539 0387 6B000000 		.4byte	0x6b
 1540 038b 02       		.uleb128 0x2
 1541 038c 91       		.byte	0x91
 1542 038d 77       		.sleb128 -9
 1543 038e 00       		.byte	0
 1544 038f 0D       		.uleb128 0xd
 1545 0390 41030000 		.4byte	.LASF47
 1546 0394 01       		.byte	0x1
 1547 0395 6504     		.2byte	0x465
 1548 0397 6B000000 		.4byte	0x6b
 1549 039b 00000000 		.4byte	.LFB25
 1550 039f 40000000 		.4byte	.LFE25-.LFB25
 1551 03a3 01       		.uleb128 0x1
 1552 03a4 9C       		.byte	0x9c
 1553 03a5 B9030000 		.4byte	0x3b9
 1554 03a9 0E       		.uleb128 0xe
 1555 03aa 7B030000 		.4byte	.LASF27
 1556 03ae 01       		.byte	0x1
 1557 03af 6704     		.2byte	0x467
 1558 03b1 6B000000 		.4byte	0x6b
 1559 03b5 02       		.uleb128 0x2
 1560 03b6 91       		.byte	0x91
 1561 03b7 77       		.sleb128 -9
 1562 03b8 00       		.byte	0
 1563 03b9 13       		.uleb128 0x13
 1564 03ba 5C000000 		.4byte	.LASF48
 1565 03be 01       		.byte	0x1
 1566 03bf 22       		.byte	0x22
 1567 03c0 6B000000 		.4byte	0x6b
 1568 03c4 05       		.uleb128 0x5
 1569 03c5 03       		.byte	0x3
 1570 03c6 00000000 		.4byte	SPIM_initVar
 1571 03ca 13       		.uleb128 0x13
 1572 03cb 51030000 		.4byte	.LASF49
 1573 03cf 01       		.byte	0x1
 1574 03d0 24       		.byte	0x24
 1575 03d1 98000000 		.4byte	0x98
 1576 03d5 05       		.uleb128 0x5
 1577 03d6 03       		.byte	0x3
 1578 03d7 00000000 		.4byte	SPIM_swStatusTx
 1579 03db 13       		.uleb128 0x13
 1580 03dc B2010000 		.4byte	.LASF50
 1581 03e0 01       		.byte	0x1
 1582 03e1 25       		.byte	0x25
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 49


 1583 03e2 98000000 		.4byte	0x98
 1584 03e6 05       		.uleb128 0x5
 1585 03e7 03       		.byte	0x3
 1586 03e8 00000000 		.4byte	SPIM_swStatusRx
 1587 03ec 00       		.byte	0
 1588              		.section	.debug_abbrev,"",%progbits
 1589              	.Ldebug_abbrev0:
 1590 0000 01       		.uleb128 0x1
 1591 0001 11       		.uleb128 0x11
 1592 0002 01       		.byte	0x1
 1593 0003 25       		.uleb128 0x25
 1594 0004 0E       		.uleb128 0xe
 1595 0005 13       		.uleb128 0x13
 1596 0006 0B       		.uleb128 0xb
 1597 0007 03       		.uleb128 0x3
 1598 0008 0E       		.uleb128 0xe
 1599 0009 1B       		.uleb128 0x1b
 1600 000a 0E       		.uleb128 0xe
 1601 000b 55       		.uleb128 0x55
 1602 000c 17       		.uleb128 0x17
 1603 000d 11       		.uleb128 0x11
 1604 000e 01       		.uleb128 0x1
 1605 000f 10       		.uleb128 0x10
 1606 0010 17       		.uleb128 0x17
 1607 0011 00       		.byte	0
 1608 0012 00       		.byte	0
 1609 0013 02       		.uleb128 0x2
 1610 0014 24       		.uleb128 0x24
 1611 0015 00       		.byte	0
 1612 0016 0B       		.uleb128 0xb
 1613 0017 0B       		.uleb128 0xb
 1614 0018 3E       		.uleb128 0x3e
 1615 0019 0B       		.uleb128 0xb
 1616 001a 03       		.uleb128 0x3
 1617 001b 0E       		.uleb128 0xe
 1618 001c 00       		.byte	0
 1619 001d 00       		.byte	0
 1620 001e 03       		.uleb128 0x3
 1621 001f 24       		.uleb128 0x24
 1622 0020 00       		.byte	0
 1623 0021 0B       		.uleb128 0xb
 1624 0022 0B       		.uleb128 0xb
 1625 0023 3E       		.uleb128 0x3e
 1626 0024 0B       		.uleb128 0xb
 1627 0025 03       		.uleb128 0x3
 1628 0026 08       		.uleb128 0x8
 1629 0027 00       		.byte	0
 1630 0028 00       		.byte	0
 1631 0029 04       		.uleb128 0x4
 1632 002a 16       		.uleb128 0x16
 1633 002b 00       		.byte	0
 1634 002c 03       		.uleb128 0x3
 1635 002d 0E       		.uleb128 0xe
 1636 002e 3A       		.uleb128 0x3a
 1637 002f 0B       		.uleb128 0xb
 1638 0030 3B       		.uleb128 0x3b
 1639 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 50


 1640 0032 49       		.uleb128 0x49
 1641 0033 13       		.uleb128 0x13
 1642 0034 00       		.byte	0
 1643 0035 00       		.byte	0
 1644 0036 05       		.uleb128 0x5
 1645 0037 35       		.uleb128 0x35
 1646 0038 00       		.byte	0
 1647 0039 49       		.uleb128 0x49
 1648 003a 13       		.uleb128 0x13
 1649 003b 00       		.byte	0
 1650 003c 00       		.byte	0
 1651 003d 06       		.uleb128 0x6
 1652 003e 2E       		.uleb128 0x2e
 1653 003f 00       		.byte	0
 1654 0040 3F       		.uleb128 0x3f
 1655 0041 19       		.uleb128 0x19
 1656 0042 03       		.uleb128 0x3
 1657 0043 0E       		.uleb128 0xe
 1658 0044 3A       		.uleb128 0x3a
 1659 0045 0B       		.uleb128 0xb
 1660 0046 3B       		.uleb128 0x3b
 1661 0047 0B       		.uleb128 0xb
 1662 0048 27       		.uleb128 0x27
 1663 0049 19       		.uleb128 0x19
 1664 004a 11       		.uleb128 0x11
 1665 004b 01       		.uleb128 0x1
 1666 004c 12       		.uleb128 0x12
 1667 004d 06       		.uleb128 0x6
 1668 004e 40       		.uleb128 0x40
 1669 004f 18       		.uleb128 0x18
 1670 0050 9642     		.uleb128 0x2116
 1671 0052 19       		.uleb128 0x19
 1672 0053 00       		.byte	0
 1673 0054 00       		.byte	0
 1674 0055 07       		.uleb128 0x7
 1675 0056 2E       		.uleb128 0x2e
 1676 0057 01       		.byte	0x1
 1677 0058 3F       		.uleb128 0x3f
 1678 0059 19       		.uleb128 0x19
 1679 005a 03       		.uleb128 0x3
 1680 005b 0E       		.uleb128 0xe
 1681 005c 3A       		.uleb128 0x3a
 1682 005d 0B       		.uleb128 0xb
 1683 005e 3B       		.uleb128 0x3b
 1684 005f 0B       		.uleb128 0xb
 1685 0060 27       		.uleb128 0x27
 1686 0061 19       		.uleb128 0x19
 1687 0062 11       		.uleb128 0x11
 1688 0063 01       		.uleb128 0x1
 1689 0064 12       		.uleb128 0x12
 1690 0065 06       		.uleb128 0x6
 1691 0066 40       		.uleb128 0x40
 1692 0067 18       		.uleb128 0x18
 1693 0068 9642     		.uleb128 0x2116
 1694 006a 19       		.uleb128 0x19
 1695 006b 01       		.uleb128 0x1
 1696 006c 13       		.uleb128 0x13
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 51


 1697 006d 00       		.byte	0
 1698 006e 00       		.byte	0
 1699 006f 08       		.uleb128 0x8
 1700 0070 34       		.uleb128 0x34
 1701 0071 00       		.byte	0
 1702 0072 03       		.uleb128 0x3
 1703 0073 0E       		.uleb128 0xe
 1704 0074 3A       		.uleb128 0x3a
 1705 0075 0B       		.uleb128 0xb
 1706 0076 3B       		.uleb128 0x3b
 1707 0077 0B       		.uleb128 0xb
 1708 0078 49       		.uleb128 0x49
 1709 0079 13       		.uleb128 0x13
 1710 007a 02       		.uleb128 0x2
 1711 007b 18       		.uleb128 0x18
 1712 007c 00       		.byte	0
 1713 007d 00       		.byte	0
 1714 007e 09       		.uleb128 0x9
 1715 007f 2E       		.uleb128 0x2e
 1716 0080 00       		.byte	0
 1717 0081 3F       		.uleb128 0x3f
 1718 0082 19       		.uleb128 0x19
 1719 0083 03       		.uleb128 0x3
 1720 0084 0E       		.uleb128 0xe
 1721 0085 3A       		.uleb128 0x3a
 1722 0086 0B       		.uleb128 0xb
 1723 0087 3B       		.uleb128 0x3b
 1724 0088 0B       		.uleb128 0xb
 1725 0089 27       		.uleb128 0x27
 1726 008a 19       		.uleb128 0x19
 1727 008b 11       		.uleb128 0x11
 1728 008c 01       		.uleb128 0x1
 1729 008d 12       		.uleb128 0x12
 1730 008e 06       		.uleb128 0x6
 1731 008f 40       		.uleb128 0x40
 1732 0090 18       		.uleb128 0x18
 1733 0091 9742     		.uleb128 0x2117
 1734 0093 19       		.uleb128 0x19
 1735 0094 00       		.byte	0
 1736 0095 00       		.byte	0
 1737 0096 0A       		.uleb128 0xa
 1738 0097 2E       		.uleb128 0x2e
 1739 0098 00       		.byte	0
 1740 0099 3F       		.uleb128 0x3f
 1741 009a 19       		.uleb128 0x19
 1742 009b 03       		.uleb128 0x3
 1743 009c 0E       		.uleb128 0xe
 1744 009d 3A       		.uleb128 0x3a
 1745 009e 0B       		.uleb128 0xb
 1746 009f 3B       		.uleb128 0x3b
 1747 00a0 05       		.uleb128 0x5
 1748 00a1 27       		.uleb128 0x27
 1749 00a2 19       		.uleb128 0x19
 1750 00a3 11       		.uleb128 0x11
 1751 00a4 01       		.uleb128 0x1
 1752 00a5 12       		.uleb128 0x12
 1753 00a6 06       		.uleb128 0x6
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 52


 1754 00a7 40       		.uleb128 0x40
 1755 00a8 18       		.uleb128 0x18
 1756 00a9 9742     		.uleb128 0x2117
 1757 00ab 19       		.uleb128 0x19
 1758 00ac 00       		.byte	0
 1759 00ad 00       		.byte	0
 1760 00ae 0B       		.uleb128 0xb
 1761 00af 2E       		.uleb128 0x2e
 1762 00b0 01       		.byte	0x1
 1763 00b1 3F       		.uleb128 0x3f
 1764 00b2 19       		.uleb128 0x19
 1765 00b3 03       		.uleb128 0x3
 1766 00b4 0E       		.uleb128 0xe
 1767 00b5 3A       		.uleb128 0x3a
 1768 00b6 0B       		.uleb128 0xb
 1769 00b7 3B       		.uleb128 0x3b
 1770 00b8 05       		.uleb128 0x5
 1771 00b9 27       		.uleb128 0x27
 1772 00ba 19       		.uleb128 0x19
 1773 00bb 11       		.uleb128 0x11
 1774 00bc 01       		.uleb128 0x1
 1775 00bd 12       		.uleb128 0x12
 1776 00be 06       		.uleb128 0x6
 1777 00bf 40       		.uleb128 0x40
 1778 00c0 18       		.uleb128 0x18
 1779 00c1 9742     		.uleb128 0x2117
 1780 00c3 19       		.uleb128 0x19
 1781 00c4 01       		.uleb128 0x1
 1782 00c5 13       		.uleb128 0x13
 1783 00c6 00       		.byte	0
 1784 00c7 00       		.byte	0
 1785 00c8 0C       		.uleb128 0xc
 1786 00c9 05       		.uleb128 0x5
 1787 00ca 00       		.byte	0
 1788 00cb 03       		.uleb128 0x3
 1789 00cc 0E       		.uleb128 0xe
 1790 00cd 3A       		.uleb128 0x3a
 1791 00ce 0B       		.uleb128 0xb
 1792 00cf 3B       		.uleb128 0x3b
 1793 00d0 05       		.uleb128 0x5
 1794 00d1 49       		.uleb128 0x49
 1795 00d2 13       		.uleb128 0x13
 1796 00d3 02       		.uleb128 0x2
 1797 00d4 18       		.uleb128 0x18
 1798 00d5 00       		.byte	0
 1799 00d6 00       		.byte	0
 1800 00d7 0D       		.uleb128 0xd
 1801 00d8 2E       		.uleb128 0x2e
 1802 00d9 01       		.byte	0x1
 1803 00da 3F       		.uleb128 0x3f
 1804 00db 19       		.uleb128 0x19
 1805 00dc 03       		.uleb128 0x3
 1806 00dd 0E       		.uleb128 0xe
 1807 00de 3A       		.uleb128 0x3a
 1808 00df 0B       		.uleb128 0xb
 1809 00e0 3B       		.uleb128 0x3b
 1810 00e1 05       		.uleb128 0x5
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 53


 1811 00e2 27       		.uleb128 0x27
 1812 00e3 19       		.uleb128 0x19
 1813 00e4 49       		.uleb128 0x49
 1814 00e5 13       		.uleb128 0x13
 1815 00e6 11       		.uleb128 0x11
 1816 00e7 01       		.uleb128 0x1
 1817 00e8 12       		.uleb128 0x12
 1818 00e9 06       		.uleb128 0x6
 1819 00ea 40       		.uleb128 0x40
 1820 00eb 18       		.uleb128 0x18
 1821 00ec 9742     		.uleb128 0x2117
 1822 00ee 19       		.uleb128 0x19
 1823 00ef 01       		.uleb128 0x1
 1824 00f0 13       		.uleb128 0x13
 1825 00f1 00       		.byte	0
 1826 00f2 00       		.byte	0
 1827 00f3 0E       		.uleb128 0xe
 1828 00f4 34       		.uleb128 0x34
 1829 00f5 00       		.byte	0
 1830 00f6 03       		.uleb128 0x3
 1831 00f7 0E       		.uleb128 0xe
 1832 00f8 3A       		.uleb128 0x3a
 1833 00f9 0B       		.uleb128 0xb
 1834 00fa 3B       		.uleb128 0x3b
 1835 00fb 05       		.uleb128 0x5
 1836 00fc 49       		.uleb128 0x49
 1837 00fd 13       		.uleb128 0x13
 1838 00fe 02       		.uleb128 0x2
 1839 00ff 18       		.uleb128 0x18
 1840 0100 00       		.byte	0
 1841 0101 00       		.byte	0
 1842 0102 0F       		.uleb128 0xf
 1843 0103 2E       		.uleb128 0x2e
 1844 0104 01       		.byte	0x1
 1845 0105 3F       		.uleb128 0x3f
 1846 0106 19       		.uleb128 0x19
 1847 0107 03       		.uleb128 0x3
 1848 0108 0E       		.uleb128 0xe
 1849 0109 3A       		.uleb128 0x3a
 1850 010a 0B       		.uleb128 0xb
 1851 010b 3B       		.uleb128 0x3b
 1852 010c 05       		.uleb128 0x5
 1853 010d 27       		.uleb128 0x27
 1854 010e 19       		.uleb128 0x19
 1855 010f 11       		.uleb128 0x11
 1856 0110 01       		.uleb128 0x1
 1857 0111 12       		.uleb128 0x12
 1858 0112 06       		.uleb128 0x6
 1859 0113 40       		.uleb128 0x40
 1860 0114 18       		.uleb128 0x18
 1861 0115 9642     		.uleb128 0x2116
 1862 0117 19       		.uleb128 0x19
 1863 0118 01       		.uleb128 0x1
 1864 0119 13       		.uleb128 0x13
 1865 011a 00       		.byte	0
 1866 011b 00       		.byte	0
 1867 011c 10       		.uleb128 0x10
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 54


 1868 011d 0F       		.uleb128 0xf
 1869 011e 00       		.byte	0
 1870 011f 0B       		.uleb128 0xb
 1871 0120 0B       		.uleb128 0xb
 1872 0121 49       		.uleb128 0x49
 1873 0122 13       		.uleb128 0x13
 1874 0123 00       		.byte	0
 1875 0124 00       		.byte	0
 1876 0125 11       		.uleb128 0x11
 1877 0126 26       		.uleb128 0x26
 1878 0127 00       		.byte	0
 1879 0128 49       		.uleb128 0x49
 1880 0129 13       		.uleb128 0x13
 1881 012a 00       		.byte	0
 1882 012b 00       		.byte	0
 1883 012c 12       		.uleb128 0x12
 1884 012d 2E       		.uleb128 0x2e
 1885 012e 00       		.byte	0
 1886 012f 3F       		.uleb128 0x3f
 1887 0130 19       		.uleb128 0x19
 1888 0131 03       		.uleb128 0x3
 1889 0132 0E       		.uleb128 0xe
 1890 0133 3A       		.uleb128 0x3a
 1891 0134 0B       		.uleb128 0xb
 1892 0135 3B       		.uleb128 0x3b
 1893 0136 05       		.uleb128 0x5
 1894 0137 27       		.uleb128 0x27
 1895 0138 19       		.uleb128 0x19
 1896 0139 11       		.uleb128 0x11
 1897 013a 01       		.uleb128 0x1
 1898 013b 12       		.uleb128 0x12
 1899 013c 06       		.uleb128 0x6
 1900 013d 40       		.uleb128 0x40
 1901 013e 18       		.uleb128 0x18
 1902 013f 9642     		.uleb128 0x2116
 1903 0141 19       		.uleb128 0x19
 1904 0142 00       		.byte	0
 1905 0143 00       		.byte	0
 1906 0144 13       		.uleb128 0x13
 1907 0145 34       		.uleb128 0x34
 1908 0146 00       		.byte	0
 1909 0147 03       		.uleb128 0x3
 1910 0148 0E       		.uleb128 0xe
 1911 0149 3A       		.uleb128 0x3a
 1912 014a 0B       		.uleb128 0xb
 1913 014b 3B       		.uleb128 0x3b
 1914 014c 0B       		.uleb128 0xb
 1915 014d 49       		.uleb128 0x49
 1916 014e 13       		.uleb128 0x13
 1917 014f 3F       		.uleb128 0x3f
 1918 0150 19       		.uleb128 0x19
 1919 0151 02       		.uleb128 0x2
 1920 0152 18       		.uleb128 0x18
 1921 0153 00       		.byte	0
 1922 0154 00       		.byte	0
 1923 0155 00       		.byte	0
 1924              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 55


 1925 0000 D4000000 		.4byte	0xd4
 1926 0004 0200     		.2byte	0x2
 1927 0006 00000000 		.4byte	.Ldebug_info0
 1928 000a 04       		.byte	0x4
 1929 000b 00       		.byte	0
 1930 000c 0000     		.2byte	0
 1931 000e 0000     		.2byte	0
 1932 0010 00000000 		.4byte	.LFB2
 1933 0014 34000000 		.4byte	.LFE2-.LFB2
 1934 0018 00000000 		.4byte	.LFB3
 1935 001c 64000000 		.4byte	.LFE3-.LFB3
 1936 0020 00000000 		.4byte	.LFB4
 1937 0024 24000000 		.4byte	.LFE4-.LFB4
 1938 0028 00000000 		.4byte	.LFB5
 1939 002c 50000000 		.4byte	.LFE5-.LFB5
 1940 0030 00000000 		.4byte	.LFB6
 1941 0034 08000000 		.4byte	.LFE6-.LFB6
 1942 0038 00000000 		.4byte	.LFB7
 1943 003c 08000000 		.4byte	.LFE7-.LFB7
 1944 0040 00000000 		.4byte	.LFB8
 1945 0044 08000000 		.4byte	.LFE8-.LFB8
 1946 0048 00000000 		.4byte	.LFB9
 1947 004c 08000000 		.4byte	.LFE9-.LFB9
 1948 0050 00000000 		.4byte	.LFB10
 1949 0054 20000000 		.4byte	.LFE10-.LFB10
 1950 0058 00000000 		.4byte	.LFB11
 1951 005c 20000000 		.4byte	.LFE11-.LFB11
 1952 0060 00000000 		.4byte	.LFB12
 1953 0064 20000000 		.4byte	.LFE12-.LFB12
 1954 0068 00000000 		.4byte	.LFB13
 1955 006c 20000000 		.4byte	.LFE13-.LFB13
 1956 0070 00000000 		.4byte	.LFB14
 1957 0074 34000000 		.4byte	.LFE14-.LFB14
 1958 0078 00000000 		.4byte	.LFB15
 1959 007c 20000000 		.4byte	.LFE15-.LFB15
 1960 0080 00000000 		.4byte	.LFB16
 1961 0084 30000000 		.4byte	.LFE16-.LFB16
 1962 0088 00000000 		.4byte	.LFB17
 1963 008c 48000000 		.4byte	.LFE17-.LFB17
 1964 0090 00000000 		.4byte	.LFB18
 1965 0094 24000000 		.4byte	.LFE18-.LFB18
 1966 0098 00000000 		.4byte	.LFB19
 1967 009c 44000000 		.4byte	.LFE19-.LFB19
 1968 00a0 00000000 		.4byte	.LFB20
 1969 00a4 50000000 		.4byte	.LFE20-.LFB20
 1970 00a8 00000000 		.4byte	.LFB21
 1971 00ac 60000000 		.4byte	.LFE21-.LFB21
 1972 00b0 00000000 		.4byte	.LFB22
 1973 00b4 10000000 		.4byte	.LFE22-.LFB22
 1974 00b8 00000000 		.4byte	.LFB23
 1975 00bc 10000000 		.4byte	.LFE23-.LFB23
 1976 00c0 00000000 		.4byte	.LFB24
 1977 00c4 30000000 		.4byte	.LFE24-.LFB24
 1978 00c8 00000000 		.4byte	.LFB25
 1979 00cc 40000000 		.4byte	.LFE25-.LFB25
 1980 00d0 00000000 		.4byte	0
 1981 00d4 00000000 		.4byte	0
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 56


 1982              		.section	.debug_ranges,"",%progbits
 1983              	.Ldebug_ranges0:
 1984 0000 00000000 		.4byte	.LFB2
 1985 0004 34000000 		.4byte	.LFE2
 1986 0008 00000000 		.4byte	.LFB3
 1987 000c 64000000 		.4byte	.LFE3
 1988 0010 00000000 		.4byte	.LFB4
 1989 0014 24000000 		.4byte	.LFE4
 1990 0018 00000000 		.4byte	.LFB5
 1991 001c 50000000 		.4byte	.LFE5
 1992 0020 00000000 		.4byte	.LFB6
 1993 0024 08000000 		.4byte	.LFE6
 1994 0028 00000000 		.4byte	.LFB7
 1995 002c 08000000 		.4byte	.LFE7
 1996 0030 00000000 		.4byte	.LFB8
 1997 0034 08000000 		.4byte	.LFE8
 1998 0038 00000000 		.4byte	.LFB9
 1999 003c 08000000 		.4byte	.LFE9
 2000 0040 00000000 		.4byte	.LFB10
 2001 0044 20000000 		.4byte	.LFE10
 2002 0048 00000000 		.4byte	.LFB11
 2003 004c 20000000 		.4byte	.LFE11
 2004 0050 00000000 		.4byte	.LFB12
 2005 0054 20000000 		.4byte	.LFE12
 2006 0058 00000000 		.4byte	.LFB13
 2007 005c 20000000 		.4byte	.LFE13
 2008 0060 00000000 		.4byte	.LFB14
 2009 0064 34000000 		.4byte	.LFE14
 2010 0068 00000000 		.4byte	.LFB15
 2011 006c 20000000 		.4byte	.LFE15
 2012 0070 00000000 		.4byte	.LFB16
 2013 0074 30000000 		.4byte	.LFE16
 2014 0078 00000000 		.4byte	.LFB17
 2015 007c 48000000 		.4byte	.LFE17
 2016 0080 00000000 		.4byte	.LFB18
 2017 0084 24000000 		.4byte	.LFE18
 2018 0088 00000000 		.4byte	.LFB19
 2019 008c 44000000 		.4byte	.LFE19
 2020 0090 00000000 		.4byte	.LFB20
 2021 0094 50000000 		.4byte	.LFE20
 2022 0098 00000000 		.4byte	.LFB21
 2023 009c 60000000 		.4byte	.LFE21
 2024 00a0 00000000 		.4byte	.LFB22
 2025 00a4 10000000 		.4byte	.LFE22
 2026 00a8 00000000 		.4byte	.LFB23
 2027 00ac 10000000 		.4byte	.LFE23
 2028 00b0 00000000 		.4byte	.LFB24
 2029 00b4 30000000 		.4byte	.LFE24
 2030 00b8 00000000 		.4byte	.LFB25
 2031 00bc 40000000 		.4byte	.LFE25
 2032 00c0 00000000 		.4byte	0
 2033 00c4 00000000 		.4byte	0
 2034              		.section	.debug_line,"",%progbits
 2035              	.Ldebug_line0:
 2036 0000 5C020000 		.section	.debug_str,"MS",%progbits,1
 2036      02004100 
 2036      00000201 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 57


 2036      FB0E0D00 
 2036      01010101 
 2037              	.LASF30:
 2038 0000 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2038      5F577269 
 2038      74655478 
 2038      44617461 
 2038      00
 2039              	.LASF17:
 2040 0011 5350494D 		.ascii	"SPIM_Enable\000"
 2040      5F456E61 
 2040      626C6500 
 2041              	.LASF18:
 2042 001d 5350494D 		.ascii	"SPIM_Stop\000"
 2042      5F53746F 
 2042      7000
 2043              	.LASF31:
 2044 0027 74784461 		.ascii	"txData\000"
 2044      746100
 2045              	.LASF3:
 2046 002e 73686F72 		.ascii	"short unsigned int\000"
 2046      7420756E 
 2046      7369676E 
 2046      65642069 
 2046      6E7400
 2047              	.LASF11:
 2048 0041 63686172 		.ascii	"char\000"
 2048      00
 2049              	.LASF46:
 2050 0046 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2050      5F536574 
 2050      496E7465 
 2050      72727570 
 2050      744D6F64 
 2051              	.LASF48:
 2052 005c 5350494D 		.ascii	"SPIM_initVar\000"
 2052      5F696E69 
 2052      74566172 
 2052      00
 2053              	.LASF33:
 2054 0069 72784461 		.ascii	"rxData\000"
 2054      746100
 2055              	.LASF45:
 2056 0070 5350494D 		.ascii	"SPIM_DisableInt\000"
 2056      5F446973 
 2056      61626C65 
 2056      496E7400 
 2057              	.LASF52:
 2058 0080 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM.c\000"
 2058      72617465 
 2058      645F536F 
 2058      75726365 
 2058      5C50536F 
 2059              	.LASF9:
 2060 009e 666C6F61 		.ascii	"float\000"
 2060      7400
 2061              	.LASF37:
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 58


 2062 00a4 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2062      5F436C65 
 2062      61725278 
 2062      42756666 
 2062      657200
 2063              	.LASF35:
 2064 00b7 73697A65 		.ascii	"size\000"
 2064      00
 2065              	.LASF36:
 2066 00bc 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2066      5F476574 
 2066      54784275 
 2066      66666572 
 2066      53697A65 
 2067              	.LASF13:
 2068 00d1 72656738 		.ascii	"reg8\000"
 2068      00
 2069              	.LASF20:
 2070 00d6 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2070      5F456E61 
 2070      626C6554 
 2070      78496E74 
 2070      00
 2071              	.LASF5:
 2072 00e7 6C6F6E67 		.ascii	"long unsigned int\000"
 2072      20756E73 
 2072      69676E65 
 2072      6420696E 
 2072      7400
 2073              	.LASF12:
 2074 00f9 75696E74 		.ascii	"uint8\000"
 2074      3800
 2075              	.LASF53:
 2076 00ff 443A5C43 		.ascii	"D:\\Cypress\\system-start-finish\\vesion 2\\fw\\sta"
 2076      79707265 
 2076      73735C73 
 2076      79737465 
 2076      6D2D7374 
 2077 012d 72745C73 		.ascii	"rt\\sandbox\\v8_new_dispay\\start_v0.cydsn\000"
 2077      616E6462 
 2077      6F785C76 
 2077      385F6E65 
 2077      775F6469 
 2078              	.LASF39:
 2079 0155 5350494D 		.ascii	"SPIM_PutArray\000"
 2079      5F507574 
 2079      41727261 
 2079      7900
 2080              	.LASF19:
 2081 0163 656E6162 		.ascii	"enableInterrupts\000"
 2081      6C65496E 
 2081      74657272 
 2081      75707473 
 2081      00
 2082              	.LASF32:
 2083 0174 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2083      5F526561 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 59


 2083      64527844 
 2083      61746100 
 2084              	.LASF1:
 2085 0184 756E7369 		.ascii	"unsigned char\000"
 2085      676E6564 
 2085      20636861 
 2085      7200
 2086              	.LASF22:
 2087 0192 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2087      5F446973 
 2087      61626C65 
 2087      5478496E 
 2087      7400
 2088              	.LASF10:
 2089 01a4 646F7562 		.ascii	"double\000"
 2089      6C6500
 2090              	.LASF26:
 2091 01ab 696E7453 		.ascii	"intSrc\000"
 2091      726300
 2092              	.LASF50:
 2093 01b2 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2093      5F737753 
 2093      74617475 
 2093      73527800 
 2094              	.LASF34:
 2095 01c2 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2095      5F476574 
 2095      52784275 
 2095      66666572 
 2095      53697A65 
 2096              	.LASF51:
 2097 01d7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2097      4320342E 
 2097      392E3320 
 2097      32303135 
 2097      30333033 
 2098 020a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2098      20726576 
 2098      6973696F 
 2098      6E203232 
 2098      31323230 
 2099 023d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2099      66756E63 
 2099      74696F6E 
 2099      2D736563 
 2099      74696F6E 
 2100              	.LASF24:
 2101 0265 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2101      5F536574 
 2101      5478496E 
 2101      74657272 
 2101      7570744D 
 2102              	.LASF25:
 2103 027d 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2103      5F536574 
 2103      5278496E 
 2103      74657272 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 60


 2103      7570744D 
 2104              	.LASF8:
 2105 0295 756E7369 		.ascii	"unsigned int\000"
 2105      676E6564 
 2105      20696E74 
 2105      00
 2106              	.LASF7:
 2107 02a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2107      206C6F6E 
 2107      6720756E 
 2107      7369676E 
 2107      65642069 
 2108              	.LASF41:
 2109 02b9 62797465 		.ascii	"byteCount\000"
 2109      436F756E 
 2109      7400
 2110              	.LASF29:
 2111 02c3 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2111      5F526561 
 2111      64527853 
 2111      74617475 
 2111      7300
 2112              	.LASF42:
 2113 02d5 62756649 		.ascii	"bufIndex\000"
 2113      6E646578 
 2113      00
 2114              	.LASF44:
 2115 02de 5350494D 		.ascii	"SPIM_EnableInt\000"
 2115      5F456E61 
 2115      626C6549 
 2115      6E7400
 2116              	.LASF14:
 2117 02ed 73697A65 		.ascii	"sizetype\000"
 2117      74797065 
 2117      00
 2118              	.LASF6:
 2119 02f6 6C6F6E67 		.ascii	"long long int\000"
 2119      206C6F6E 
 2119      6720696E 
 2119      7400
 2120              	.LASF15:
 2121 0304 5350494D 		.ascii	"SPIM_Init\000"
 2121      5F496E69 
 2121      7400
 2122              	.LASF43:
 2123 030e 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2123      5F436C65 
 2123      61724649 
 2123      464F00
 2124              	.LASF2:
 2125 031d 73686F72 		.ascii	"short int\000"
 2125      7420696E 
 2125      7400
 2126              	.LASF38:
 2127 0327 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2127      5F436C65 
 2127      61725478 
ARM GAS  C:\Users\Petro\AppData\Local\Temp\ccHVArFa.s 			page 61


 2127      42756666 
 2127      657200
 2128              	.LASF40:
 2129 033a 62756666 		.ascii	"buffer\000"
 2129      657200
 2130              	.LASF47:
 2131 0341 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2131      5F526561 
 2131      64537461 
 2131      74757300 
 2132              	.LASF49:
 2133 0351 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2133      5F737753 
 2133      74617475 
 2133      73547800 
 2134              	.LASF21:
 2135 0361 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2135      5F456E61 
 2135      626C6552 
 2135      78496E74 
 2135      00
 2136              	.LASF4:
 2137 0372 6C6F6E67 		.ascii	"long int\000"
 2137      20696E74 
 2137      00
 2138              	.LASF27:
 2139 037b 746D7053 		.ascii	"tmpStatus\000"
 2139      74617475 
 2139      7300
 2140              	.LASF0:
 2141 0385 7369676E 		.ascii	"signed char\000"
 2141      65642063 
 2141      68617200 
 2142              	.LASF16:
 2143 0391 5350494D 		.ascii	"SPIM_Start\000"
 2143      5F537461 
 2143      727400
 2144              	.LASF28:
 2145 039c 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2145      5F526561 
 2145      64547853 
 2145      74617475 
 2145      7300
 2146              	.LASF23:
 2147 03ae 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2147      5F446973 
 2147      61626C65 
 2147      5278496E 
 2147      7400
 2148              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
